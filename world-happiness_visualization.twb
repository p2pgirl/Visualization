<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0918.1727                               -->
<workbook original-version='18.1' source-build='2020.3.1 (20203.20.0918.1727)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <Heatmap />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='world-happiness_visualization' path='/workbooks' revision='1.4' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='wh_2016to2019+' inline='true' name='federated.1usmlui0eestho1g6nb130qrm10t' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='wh_2016to2019' name='textscan.00jdvnk0b2mg1n16i1dpq0jloprd'>
            <connection class='textscan' directory='/Users/reneecothern/Documents/WGU/classes/C939 - Data Visualization/PROJECT_DATA' filename='wh_2016to2019.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[wh_2016to2019.csv].[Year]' />
                <expression op='[human-rights-scores.csv].[Year]' />
              </expression>
              <expression op='='>
                <expression op='[wh_2016to2019.csv].[Country]' />
                <expression op='[human-rights-scores.csv].[Entity]' />
              </expression>
            </expression>
          </clause>
          <relation connection='textscan.00jdvnk0b2mg1n16i1dpq0jloprd' name='wh_2016to2019.csv' table='[wh_2016to2019#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='real' name='Freedom' ordinal='1' />
              <column datatype='real' name='GDP.per.capita' ordinal='2' />
              <column datatype='real' name='Generosity' ordinal='3' />
              <column datatype='integer' name='Happiness.Rank' ordinal='4' />
              <column datatype='real' name='Happiness.Score' ordinal='5' />
              <column datatype='real' name='Life.Expectancy' ordinal='6' />
              <column datatype='real' name='Social.Support' ordinal='7' />
              <column datatype='real' name='Trust.Goverment.Corruption' ordinal='8' />
              <column datatype='integer' name='Year' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.00jdvnk0b2mg1n16i1dpq0jloprd' name='human-rights-scores.csv' table='[human-rights-scores#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Entity' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='real' name='Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[wh_2016to2019.csv].[Year]' />
                <expression op='[human-rights-scores.csv].[Year]' />
              </expression>
              <expression op='='>
                <expression op='[wh_2016to2019.csv].[Country]' />
                <expression op='[human-rights-scores.csv].[Entity]' />
              </expression>
            </expression>
          </clause>
          <relation connection='textscan.00jdvnk0b2mg1n16i1dpq0jloprd' name='wh_2016to2019.csv' table='[wh_2016to2019#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='real' name='Freedom' ordinal='1' />
              <column datatype='real' name='GDP.per.capita' ordinal='2' />
              <column datatype='real' name='Generosity' ordinal='3' />
              <column datatype='integer' name='Happiness.Rank' ordinal='4' />
              <column datatype='real' name='Happiness.Score' ordinal='5' />
              <column datatype='real' name='Life.Expectancy' ordinal='6' />
              <column datatype='real' name='Social.Support' ordinal='7' />
              <column datatype='real' name='Trust.Goverment.Corruption' ordinal='8' />
              <column datatype='integer' name='Year' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.00jdvnk0b2mg1n16i1dpq0jloprd' name='human-rights-scores.csv' table='[human-rights-scores#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Entity' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='real' name='Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Code]' value='[human-rights-scores.csv].[Code]' />
          <map key='[Country]' value='[wh_2016to2019.csv].[Country]' />
          <map key='[Entity]' value='[human-rights-scores.csv].[Entity]' />
          <map key='[Freedom]' value='[wh_2016to2019.csv].[Freedom]' />
          <map key='[GDP.per.capita]' value='[wh_2016to2019.csv].[GDP.per.capita]' />
          <map key='[Generosity]' value='[wh_2016to2019.csv].[Generosity]' />
          <map key='[Happiness.Rank]' value='[wh_2016to2019.csv].[Happiness.Rank]' />
          <map key='[Happiness.Score]' value='[wh_2016to2019.csv].[Happiness.Score]' />
          <map key='[Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]' value='[human-rights-scores.csv].[Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]' />
          <map key='[Life.Expectancy]' value='[wh_2016to2019.csv].[Life.Expectancy]' />
          <map key='[Social.Support]' value='[wh_2016to2019.csv].[Social.Support]' />
          <map key='[Trust.Goverment.Corruption]' value='[wh_2016to2019.csv].[Trust.Goverment.Corruption]' />
          <map key='[Year (human-rights-scores.csv)]' value='[human-rights-scores.csv].[Year]' />
          <map key='[Year]' value='[wh_2016to2019.csv].[Year]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[wh_2016to2019.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[human-rights-scores.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[wh_2016to2019.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom]</local-name>
            <parent-name>[wh_2016to2019.csv]</parent-name>
            <remote-alias>Freedom</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP.per.capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP.per.capita]</local-name>
            <parent-name>[wh_2016to2019.csv]</parent-name>
            <remote-alias>GDP.per.capita</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[wh_2016to2019.csv]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness.Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Happiness.Rank]</local-name>
            <parent-name>[wh_2016to2019.csv]</parent-name>
            <remote-alias>Happiness.Rank</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness.Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Happiness.Score]</local-name>
            <parent-name>[wh_2016to2019.csv]</parent-name>
            <remote-alias>Happiness.Score</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life.Expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life.Expectancy]</local-name>
            <parent-name>[wh_2016to2019.csv]</parent-name>
            <remote-alias>Life.Expectancy</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Social.Support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Social.Support]</local-name>
            <parent-name>[wh_2016to2019.csv]</parent-name>
            <remote-alias>Social.Support</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trust.Goverment.Corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Trust.Goverment.Corruption]</local-name>
            <parent-name>[wh_2016to2019.csv]</parent-name>
            <remote-alias>Trust.Goverment.Corruption</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[wh_2016to2019.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[human-rights-scores.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[human-rights-scores.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (human-rights-scores.csv)]</local-name>
            <parent-name>[human-rights-scores.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]</local-name>
            <parent-name>[human-rights-scores.csv]</parent-name>
            <remote-alias>Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Freedom:qk]&quot;' value='Freedom' />
          <alias key='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:GDP.per.capita:qk]&quot;' value='Country Economic Health' />
          <alias key='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Generosity:qk]&quot;' value='Personal Generosity' />
          <alias key='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Life.Expectancy:qk]&quot;' value='Life Expectancy' />
          <alias key='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Social.Support:qk]&quot;' value='Family-Friend Support' />
          <alias key='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]&quot;' value='Government Corrupton Perception' />
          <alias key='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[usr:Calculation_1827617063790997506:qk]&quot;' value='Human Rights (Adjusted Scale)' />
        </aliases>
      </column>
      <column caption='HumanRightsADJUSTEDScale' datatype='real' name='[Calculation_1827617063790997506]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF AVG([Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]) &gt; 0 THEN SQRT(AVG([Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)])) ELSE 0 END' />
      </column>
      <column caption='Top 10 Sad Countries' datatype='string' name='[Country (group) 1]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Afghanistan&quot;'>
            <value>&quot;Afghanistan&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Benin&quot;'>
            <value>&quot;Benin&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Burundi&quot;'>
            <value>&quot;Burundi&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Central African Republic&quot;'>
            <value>&quot;Central African Republic&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Guinea&quot;'>
            <value>&quot;Guinea&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Liberia&quot;'>
            <value>&quot;Liberia&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Rwanda&quot;'>
            <value>&quot;Rwanda&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Syria&quot;'>
            <value>&quot;Syria&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Tanzania&quot;'>
            <value>&quot;Tanzania&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Togo&quot;'>
            <value>&quot;Togo&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Top 10 Happy Countries' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Australia&quot;'>
            <value>&quot;Australia&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Canada&quot;'>
            <value>&quot;Canada&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Denmark&quot;'>
            <value>&quot;Denmark&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Finland&quot;'>
            <value>&quot;Finland&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Iceland&quot;'>
            <value>&quot;Iceland&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Netherlands&quot;'>
            <value>&quot;Netherlands&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;New Zealand&quot;'>
            <value>&quot;New Zealand&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Norway&quot;'>
            <value>&quot;Norway&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Sweden&quot;'>
            <value>&quot;Sweden&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Switzerland&quot;'>
            <value>&quot;Switzerland&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;Burundi&quot;' value='Sad #2 - Burundi' />
          <alias key='&quot;Central African Republic&quot;' value='Sad #1 - Central African Republic' />
          <alias key='&quot;Denmark&quot;' value='Happy #1 - Denmark' />
          <alias key='&quot;Iceland&quot;' value='Happy #3 - Iceland' />
          <alias key='&quot;Norway&quot;' value='Happy #2 - Norway' />
          <alias key='&quot;Syria&quot;' value='Sad #3 - Syria' />
        </aliases>
      </column>
      <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
      <column caption='Country Economic Health' datatype='real' name='[GDP.per.capita]' role='measure' type='quantitative' />
      <column caption='Personal Generosity' datatype='real' name='[Generosity]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Happiness.Rank]' role='measure' type='quantitative' />
      <column datatype='real' name='[Happiness.Score]' role='measure' type='quantitative' />
      <column caption='Human Rights Protection' datatype='real' name='[Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]' role='measure' type='quantitative' />
      <column caption='Life Expectancy' datatype='real' name='[Life.Expectancy]' role='measure' type='quantitative' />
      <column caption='Family-Friend Support' datatype='real' name='[Social.Support]' role='measure' type='quantitative' />
      <column caption='Government Corrupton Perception' datatype='real' name='[Trust.Goverment.Corruption]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year (human-rights-scores.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='wh_2016to2019.csv' datatype='table' name='[__tableau_internal_object_id__].[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]' derivation='Count' name='[__tableau_internal_object_id__].[diff:cnt:wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Happiness.Score]' derivation='Attribute' name='[attr:Happiness.Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Freedom]' derivation='Avg' name='[avg:Freedom:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP.per.capita]' derivation='Avg' name='[avg:GDP.per.capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generosity]' derivation='Avg' name='[avg:Generosity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness.Score]' derivation='Avg' name='[avg:Happiness.Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]' derivation='Avg' name='[avg:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life.Expectancy]' derivation='Avg' name='[avg:Life.Expectancy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Social.Support]' derivation='Avg' name='[avg:Social.Support:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trust.Goverment.Corruption]' derivation='Avg' name='[avg:Trust.Goverment.Corruption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trust.Goverment.Corruption]' derivation='Count' name='[cnt:Trust.Goverment.Corruption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness.Score]' derivation='Max' name='[max:Happiness.Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness.Rank]' derivation='Median' name='[med:Happiness.Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness.Rank]' derivation='Min' name='[min:Happiness.Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness.Score]' derivation='Min' name='[min:Happiness.Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Happiness.Score]' derivation='None' name='[none:Happiness.Score:qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='10' column='[Happiness.Rank]' derivation='Percentile' name='[prc10:Happiness.Rank:qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='5' column='[Happiness.Rank]' derivation='Percentile' name='[prc5:Happiness.Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Freedom]' derivation='Sum' name='[sum:Freedom:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP.per.capita]' derivation='Sum' name='[sum:GDP.per.capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generosity]' derivation='Sum' name='[sum:Generosity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness.Rank]' derivation='Sum' name='[sum:Happiness.Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness.Score]' derivation='Sum' name='[sum:Happiness.Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]' derivation='Sum' name='[sum:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life.Expectancy]' derivation='Sum' name='[sum:Life.Expectancy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Social.Support]' derivation='Sum' name='[sum:Social.Support:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trust.Goverment.Corruption]' derivation='Sum' name='[sum:Trust.Goverment.Corruption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1827617063790997506]' derivation='User' name='[usr:Calculation_1827617063790997506:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness.Rank]' derivation='Var' name='[var:Happiness.Rank:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Top 10 Happy Countries)' hidden='true' name='[Action (Top 10 Happy Countries)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country (group)]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/reneecothern/Documents/My Tableau Repository/Datasources/wh_2016to2019+.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/26/2020 04:00:03 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Code]' value='[Extract].[Code]' />
            <map key='[Country]' value='[Extract].[Country]' />
            <map key='[Entity]' value='[Extract].[Entity]' />
            <map key='[Freedom]' value='[Extract].[Freedom]' />
            <map key='[GDP.per.capita]' value='[Extract].[GDP.per.capita]' />
            <map key='[Generosity]' value='[Extract].[Generosity]' />
            <map key='[Happiness.Rank]' value='[Extract].[Happiness.Rank]' />
            <map key='[Happiness.Score]' value='[Extract].[Happiness.Score]' />
            <map key='[Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]' value='[Extract].[Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]' />
            <map key='[Life.Expectancy]' value='[Extract].[Life.Expectancy]' />
            <map key='[Social.Support]' value='[Extract].[Social.Support]' />
            <map key='[Trust.Goverment.Corruption]' value='[Extract].[Trust.Goverment.Corruption]' />
            <map key='[Year (human-rights-scores.csv)]' value='[Extract].[Year]' />
            <map key='[Year]' value='[Extract].[Year1]' />
          </cols>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='wh_2016to2019+' increment-value='%null%' refresh-type='create' rows-inserted='295' timestamp-start='2020-10-26 04:00:03.378' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>0</ordinal>
              <family>wh_2016to2019.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>151</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Freedom</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Freedom]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Freedom</remote-alias>
              <ordinal>1</ordinal>
              <family>wh_2016to2019.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>294</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP.per.capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GDP.per.capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GDP.per.capita</remote-alias>
              <ordinal>2</ordinal>
              <family>wh_2016to2019.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>294</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Generosity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Generosity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Generosity</remote-alias>
              <ordinal>3</ordinal>
              <family>wh_2016to2019.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>294</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Happiness.Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Happiness.Rank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Happiness.Rank</remote-alias>
              <ordinal>4</ordinal>
              <family>wh_2016to2019.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>157</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Happiness.Score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Happiness.Score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Happiness.Score</remote-alias>
              <ordinal>5</ordinal>
              <family>wh_2016to2019.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>287</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Life.Expectancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Life.Expectancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Life.Expectancy</remote-alias>
              <ordinal>6</ordinal>
              <family>wh_2016to2019.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>293</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Social.Support</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Social.Support]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Social.Support</remote-alias>
              <ordinal>7</ordinal>
              <family>wh_2016to2019.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>294</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Trust.Goverment.Corruption</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Trust.Goverment.Corruption]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Trust.Goverment.Corruption</remote-alias>
              <ordinal>8</ordinal>
              <family>wh_2016to2019.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>294</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year1</remote-alias>
              <ordinal>9</ordinal>
              <family>wh_2016to2019.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>10</ordinal>
              <family>human-rights-scores.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>151</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>11</ordinal>
              <family>human-rights-scores.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>151</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year (human-rights-scores.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>12</ordinal>
              <family>human-rights-scores.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)</remote-alias>
              <ordinal>13</ordinal>
              <family>human-rights-scores.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>295</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Country (group) 1]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Afghanistan, Albania, Algeria and 163 more&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[Country (group) 1]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Romania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Austria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Greece&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Niger&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Syria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Albania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Belize&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Finland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Mali&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Panama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Spain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Libya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Italy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Israel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Laos&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Norway&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Chad&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Germany&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Poland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Australia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Chile&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Iran&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Angola&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Canada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Peru&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Benin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;France&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Japan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Malta&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Togo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[Country (group)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Austria, Belgium, Denmark and 7 more&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Country:nk]' palette='My Images' type='shape'>
            <map to='My Images/Happy Man.png'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='My Images/Happy Man.png'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d7ce9f'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d7ce9f'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7ce9f'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[__tableau_internal_object_id__].[cnt:wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[__tableau_internal_object_id__].[diff:cnt:wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[attr:Happiness.Score:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Life.Expectancy:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[max:Happiness.Score:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[min:Happiness.Score:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[none:Happiness.Score:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Happiness.Score:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:GDP.per.capita:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[cnt:Trust.Goverment.Corruption:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:GDP.per.capita:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Trust.Goverment.Corruption:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Generosity:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[usr:Calculation_752734495393771523:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[usr:Calculation_752734495394275332:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[med:Happiness.Rank:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[min:Happiness.Rank:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[prc10:Happiness.Rank:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[prc5:Happiness.Rank:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Happiness.Rank:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[var:Happiness.Rank:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Social.Support:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Social.Support:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Life.Expectancy:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Generosity:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[usr:Calculation_1827617063790997506:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Freedom:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Freedom:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[usr:Calculation_752734495338553346:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='wh_2016to2019.csv' id='wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='AND'>
                    <expression op='='>
                      <expression op='[wh_2016to2019.csv].[Year]' />
                      <expression op='[human-rights-scores.csv].[Year]' />
                    </expression>
                    <expression op='='>
                      <expression op='[wh_2016to2019.csv].[Country]' />
                      <expression op='[human-rights-scores.csv].[Entity]' />
                    </expression>
                  </expression>
                </clause>
                <relation connection='textscan.00jdvnk0b2mg1n16i1dpq0jloprd' name='wh_2016to2019.csv' table='[wh_2016to2019#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='Country' ordinal='0' />
                    <column datatype='real' name='Freedom' ordinal='1' />
                    <column datatype='real' name='GDP.per.capita' ordinal='2' />
                    <column datatype='real' name='Generosity' ordinal='3' />
                    <column datatype='integer' name='Happiness.Rank' ordinal='4' />
                    <column datatype='real' name='Happiness.Score' ordinal='5' />
                    <column datatype='real' name='Life.Expectancy' ordinal='6' />
                    <column datatype='real' name='Social.Support' ordinal='7' />
                    <column datatype='real' name='Trust.Goverment.Corruption' ordinal='8' />
                    <column datatype='integer' name='Year' ordinal='9' />
                  </columns>
                </relation>
                <relation connection='textscan.00jdvnk0b2mg1n16i1dpq0jloprd' name='human-rights-scores.csv' table='[human-rights-scores#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='Entity' ordinal='0' />
                    <column datatype='string' name='Code' ordinal='1' />
                    <column datatype='integer' name='Year' ordinal='2' />
                    <column datatype='real' name='Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)' ordinal='3' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Happy Sad Dashboard' type='sheet' worksheet='Map Happy and Sad Countries' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Happy Sad Dashboard' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='All Countries Happy Order' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Top 10 Happy Countries' />
        <param name='target' value='All Countries Happy Order' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='(2) Sad Country Measurements '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sad Country Measurements</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wh_2016to2019+' name='federated.1usmlui0eestho1g6nb130qrm10t' />
          </datasources>
          <datasource-dependencies datasource='federated.1usmlui0eestho1g6nb130qrm10t'>
            <column caption='Top 10 Sad Countries' datatype='string' name='[Country (group) 1]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Afghanistan&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Benin&quot;'>
                  <value>&quot;Benin&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Burundi&quot;'>
                  <value>&quot;Burundi&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Central African Republic&quot;'>
                  <value>&quot;Central African Republic&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Guinea&quot;'>
                  <value>&quot;Guinea&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Liberia&quot;'>
                  <value>&quot;Liberia&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Rwanda&quot;'>
                  <value>&quot;Rwanda&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Syria&quot;'>
                  <value>&quot;Syria&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Tanzania&quot;'>
                  <value>&quot;Tanzania&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Togo&quot;'>
                  <value>&quot;Togo&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Burundi&quot;' value='Sad #2 - Burundi' />
                <alias key='&quot;Central African Republic&quot;' value='Sad #1 - Central African Republic' />
                <alias key='&quot;Denmark&quot;' value='Happy #1 - Denmark' />
                <alias key='&quot;Iceland&quot;' value='Happy #3 - Iceland' />
                <alias key='&quot;Norway&quot;' value='Happy #2 - Norway' />
                <alias key='&quot;Syria&quot;' value='Sad #3 - Syria' />
              </aliases>
            </column>
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column caption='Country Economic Health' datatype='real' name='[GDP.per.capita]' role='measure' type='quantitative' />
            <column caption='Personal Generosity' datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column caption='Life Expectancy' datatype='real' name='[Life.Expectancy]' role='measure' type='quantitative' />
            <column caption='Family-Friend Support' datatype='real' name='[Social.Support]' role='measure' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Sum' name='[sum:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP.per.capita]' derivation='Sum' name='[sum:GDP.per.capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Sum' name='[sum:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life.Expectancy]' derivation='Sum' name='[sum:Life.Expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social.Support]' derivation='Sum' name='[sum:Social.Support:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:GDP.per.capita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Social.Support:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Freedom:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Life.Expectancy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Generosity:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group) 1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[Country (group) 1]' to='&quot;Liberia&quot;' />
              <groupfilter from='&quot;Rwanda&quot;' function='range' level='[Country (group) 1]' to='&quot;Togo&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</column>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group) 1]</column>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</rows>
        <cols>([federated.1usmlui0eestho1g6nb130qrm10t].[Country (group) 1] / [federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{21B64DEE-8BE7-4EDF-B623-B85048E11D51}' />
    </worksheet>
    <worksheet name='(2)Happy Country Measurements '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Happy Country Measurements</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wh_2016to2019+' name='federated.1usmlui0eestho1g6nb130qrm10t' />
          </datasources>
          <datasource-dependencies datasource='federated.1usmlui0eestho1g6nb130qrm10t'>
            <column caption='Top 10 Happy Countries' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Australia&quot;'>
                  <value>&quot;Australia&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Canada&quot;'>
                  <value>&quot;Canada&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Denmark&quot;'>
                  <value>&quot;Denmark&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Finland&quot;'>
                  <value>&quot;Finland&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Iceland&quot;'>
                  <value>&quot;Iceland&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Netherlands&quot;'>
                  <value>&quot;Netherlands&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;New Zealand&quot;'>
                  <value>&quot;New Zealand&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Norway&quot;'>
                  <value>&quot;Norway&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Sweden&quot;'>
                  <value>&quot;Sweden&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Switzerland&quot;'>
                  <value>&quot;Switzerland&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Burundi&quot;' value='Sad #2 - Burundi' />
                <alias key='&quot;Central African Republic&quot;' value='Sad #1 - Central African Republic' />
                <alias key='&quot;Denmark&quot;' value='Happy #1 - Denmark' />
                <alias key='&quot;Iceland&quot;' value='Happy #3 - Iceland' />
                <alias key='&quot;Norway&quot;' value='Happy #2 - Norway' />
                <alias key='&quot;Syria&quot;' value='Sad #3 - Syria' />
              </aliases>
            </column>
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column caption='Country Economic Health' datatype='real' name='[GDP.per.capita]' role='measure' type='quantitative' />
            <column caption='Personal Generosity' datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column caption='Life Expectancy' datatype='real' name='[Life.Expectancy]' role='measure' type='quantitative' />
            <column caption='Family-Friend Support' datatype='real' name='[Social.Support]' role='measure' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Sum' name='[sum:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP.per.capita]' derivation='Sum' name='[sum:GDP.per.capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Sum' name='[sum:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life.Expectancy]' derivation='Sum' name='[sum:Life.Expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social.Support]' derivation='Sum' name='[sum:Social.Support:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:GDP.per.capita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Social.Support:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Freedom:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Life.Expectancy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Generosity:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Australia&quot;' function='range' level='[Country (group)]' to='&quot;Norway&quot;' />
              <groupfilter function='member' level='[Country (group)]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[Country (group)]' member='&quot;Switzerland&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group)]</column>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</column>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</rows>
        <cols>([federated.1usmlui0eestho1g6nb130qrm10t].[Country (group)] / [federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{7A4743D1-FA92-4B31-9D7D-A8683B8F3454}' />
    </worksheet>
    <worksheet name='All Countries Happy Order'>
      <table>
        <view>
          <datasources>
            <datasource caption='wh_2016to2019+' name='federated.1usmlui0eestho1g6nb130qrm10t' />
          </datasources>
          <datasource-dependencies datasource='federated.1usmlui0eestho1g6nb130qrm10t'>
            <column caption='Top 10 Happy Countries' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Australia&quot;'>
                  <value>&quot;Australia&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Canada&quot;'>
                  <value>&quot;Canada&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Denmark&quot;'>
                  <value>&quot;Denmark&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Finland&quot;'>
                  <value>&quot;Finland&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Iceland&quot;'>
                  <value>&quot;Iceland&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Netherlands&quot;'>
                  <value>&quot;Netherlands&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;New Zealand&quot;'>
                  <value>&quot;New Zealand&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Norway&quot;'>
                  <value>&quot;Norway&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Sweden&quot;'>
                  <value>&quot;Sweden&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Switzerland&quot;'>
                  <value>&quot;Switzerland&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Burundi&quot;' value='Sad #2 - Burundi' />
                <alias key='&quot;Central African Republic&quot;' value='Sad #1 - Central African Republic' />
                <alias key='&quot;Denmark&quot;' value='Happy #1 - Denmark' />
                <alias key='&quot;Iceland&quot;' value='Happy #3 - Iceland' />
                <alias key='&quot;Norway&quot;' value='Happy #2 - Norway' />
                <alias key='&quot;Syria&quot;' value='Sad #3 - Syria' />
              </aliases>
            </column>
            <column datatype='real' name='[Happiness.Score]' role='measure' type='quantitative' />
            <column-instance column='[Happiness.Score]' derivation='Avg' name='[avg:Happiness.Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' scope='cols' value='Happiness Score' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Happiness.Score:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</rows>
        <cols>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]</cols>
      </table>
      <simple-id uuid='{9C4A2ADC-CF5C-4273-83C0-A5B1B50FEE41}' />
    </worksheet>
    <worksheet name='Correlation Happiness to Human Rights and Corrupt.'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>Correlation of Happiness to Human Rights and Corruption Perception</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wh_2016to2019+' name='federated.1usmlui0eestho1g6nb130qrm10t' />
          </datasources>
          <datasource-dependencies datasource='federated.1usmlui0eestho1g6nb130qrm10t'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Burundi&quot;' value='Sad #2 - Burundi' />
                <alias key='&quot;Central African Republic&quot;' value='Sad #1 - Central African Republic' />
                <alias key='&quot;Denmark&quot;' value='Happy #1 - Denmark' />
                <alias key='&quot;Iceland&quot;' value='Happy #3 - Iceland' />
                <alias key='&quot;Norway&quot;' value='Happy #2 - Norway' />
                <alias key='&quot;Syria&quot;' value='Sad #3 - Syria' />
              </aliases>
            </column>
            <column datatype='real' name='[Happiness.Score]' role='measure' type='quantitative' />
            <column caption='Human Rights Protection' datatype='real' name='[Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]' role='measure' type='quantitative' />
            <column caption='Government Corrupton Perception' datatype='real' name='[Trust.Goverment.Corruption]' role='measure' type='quantitative' />
            <column-instance column='[Happiness.Score]' derivation='Avg' name='[avg:Happiness.Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]' derivation='Avg' name='[avg:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trust.Goverment.Corruption]' derivation='Avg' name='[avg:Trust.Goverment.Corruption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]' scope='rows' value='Human Rights Protection' />
            <format attr='title' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]' scope='rows' value='Perception of Government Corruption' />
            <format attr='title' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' scope='cols' value='Happiness.Score' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='740' />
                <format attr='maxwidth' value='740' />
                <format attr='minheight' value='252' />
                <format attr='maxheight' value='252' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Happiness.Score:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Government Corrupton Perception:	</run>
                <run bold='true'><![CDATA[<[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1usmlui0eestho1g6nb130qrm10t].[avg:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk] + [federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk])</rows>
        <cols>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontalignment='0' underline='true'>Take notice to the scale</run>
              <run fontalignment='0'>:   As </run>
              <run bold='true' fontalignment='0' fontcolor='#e15759'>Perception of Government Corruption</run>
              <run fontalignment='0'> increases so does the </run>
              <run bold='true' fontalignment='0' fontcolor='#1b1b1b'>Happiness Score</run>
              <run fontalignment='0'>.  One would believe that at increased perception of corruption would DECREASE the </run>
              <run bold='true' fontalignment='0'>Happiness Score</run>
              <run fontalignment='0'>. This shows that </run>
              <run bold='true' fontalignment='0' fontcolor='#e15759'>Perception of Government Corruption </run>
              <run fontalignment='0'>doesn&apos;t decrease a person&apos;s happiness (</run>
              <run bold='true' fontalignment='0' fontcolor='#1b1b1b'>Happiness Score</run>
              <run fontalignment='0'>).</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='0.075383586964534455'>
                  <node-reference>
                    <axis>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.41473114234729258'>
                  <node-reference>
                    <axis>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='5.7140758919117109'>
                  <node-reference>
                    <axis>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.14624729756457161'>
                  <node-reference>
                    <axis>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='3' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontalignment='0'>There is a correlation with the increase of </run>
              <run bold='true' fontalignment='0' fontcolor='#499894'>Human Rights Protection</run>
              <run fontalignment='0'> and </run>
              <run bold='true' fontalignment='0'>Happiness Score</run>
              <run fontalignment='0'>.  The Pearson&apos;s R value for this is:  0.575 which shows there is a mid-level correlation</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='0.15076717392906891'>
                  <node-reference>
                    <axis>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='4.7097129588636371'>
                  <node-reference>
                    <axis>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='4.5682453700507883'>
                  <node-reference>
                    <axis>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='1.4103816835454546'>
                  <node-reference>
                    <axis>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{988EA199-9EFB-4E7C-8B6B-DFDAB6C22301}' />
    </worksheet>
    <worksheet name='Correlation Human Rights and Perception'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Correlation between Human Rights Protection and Perceived Government Protection
</run>
            <run bold='true' fontsize='11'>Pearson&apos;s Correlation 0.3275</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wh_2016to2019+' name='federated.1usmlui0eestho1g6nb130qrm10t' />
          </datasources>
          <datasource-dependencies datasource='federated.1usmlui0eestho1g6nb130qrm10t'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Burundi&quot;' value='Sad #2 - Burundi' />
                <alias key='&quot;Central African Republic&quot;' value='Sad #1 - Central African Republic' />
                <alias key='&quot;Denmark&quot;' value='Happy #1 - Denmark' />
                <alias key='&quot;Iceland&quot;' value='Happy #3 - Iceland' />
                <alias key='&quot;Norway&quot;' value='Happy #2 - Norway' />
                <alias key='&quot;Syria&quot;' value='Sad #3 - Syria' />
              </aliases>
            </column>
            <column caption='Human Rights Protection' datatype='real' name='[Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]' role='measure' type='quantitative' />
            <column caption='Government Corrupton Perception' datatype='real' name='[Trust.Goverment.Corruption]' role='measure' type='quantitative' />
            <column-instance column='[Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]' derivation='Avg' name='[avg:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trust.Goverment.Corruption]' derivation='Avg' name='[avg:Trust.Goverment.Corruption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]' scope='rows' value='Human Rights Protection Score per Country' />
            <format attr='title' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]' scope='cols' value='Government Corruption Perception per Country' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]</rows>
        <cols>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]</cols>
      </table>
      <simple-id uuid='{7740D491-3577-4B7C-B06C-2332BC5AB24C}' />
    </worksheet>
    <worksheet name='FIRST Happiest and Saddest World Happiness Comparison'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Happiest and Saddest World Happiness Comparison</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wh_2016to2019+' name='federated.1usmlui0eestho1g6nb130qrm10t' />
          </datasources>
          <datasource-dependencies datasource='federated.1usmlui0eestho1g6nb130qrm10t'>
            <column caption='HumanRightsADJUSTEDScale' datatype='real' name='[Calculation_1827617063790997506]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF AVG([Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]) &gt; 0 THEN SQRT(AVG([Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)])) ELSE 0 END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Burundi&quot;' value='Sad #2 - Burundi' />
                <alias key='&quot;Central African Republic&quot;' value='Sad #1 - Central African Republic' />
                <alias key='&quot;Denmark&quot;' value='Happy #1 - Denmark' />
                <alias key='&quot;Iceland&quot;' value='Happy #3 - Iceland' />
                <alias key='&quot;Norway&quot;' value='Happy #2 - Norway' />
                <alias key='&quot;Syria&quot;' value='Sad #3 - Syria' />
              </aliases>
            </column>
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column caption='Country Economic Health' datatype='real' name='[GDP.per.capita]' role='measure' type='quantitative' />
            <column caption='Personal Generosity' datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column caption='Human Rights Protection' datatype='real' name='[Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]' role='measure' type='quantitative' />
            <column caption='Life Expectancy' datatype='real' name='[Life.Expectancy]' role='measure' type='quantitative' />
            <column caption='Family-Friend Support' datatype='real' name='[Social.Support]' role='measure' type='quantitative' />
            <column caption='Government Corrupton Perception' datatype='real' name='[Trust.Goverment.Corruption]' role='measure' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Avg' name='[avg:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP.per.capita]' derivation='Avg' name='[avg:GDP.per.capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Avg' name='[avg:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life.Expectancy]' derivation='Avg' name='[avg:Life.Expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social.Support]' derivation='Avg' name='[avg:Social.Support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trust.Goverment.Corruption]' derivation='Avg' name='[avg:Trust.Goverment.Corruption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1827617063790997506]' derivation='User' name='[usr:Calculation_1827617063790997506:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:GDP.per.capita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Social.Support:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Freedom:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Life.Expectancy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Generosity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[usr:Calculation_1827617063790997506:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</column>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]' scope='rows' value='Score' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</rows>
        <cols>([federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk] / [federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names])</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Central African Republic&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Freedom:qk]&quot;</value>
                <value>0.270842045545578</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Central African Republic&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]&quot;</value>
                <value>0.056565076112747199</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Central African Republic&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Life.Expectancy:qk]&quot;</value>
                <value>0.018772685900330498</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Central African Republic&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Generosity:qk]&quot;</value>
                <value>0.28087648749351501</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Central African Republic&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Social.Support:qk]&quot;</value>
                <value>0.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Central African Republic&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:GDP.per.capita:qk]&quot;</value>
                <value>0.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Denmark&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:GDP.per.capita:qk]&quot;</value>
                <value>1.4620815063858048</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Denmark&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Social.Support:qk]&quot;</value>
                <value>1.357430796260835</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='9' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Denmark&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Freedom:qk]&quot;</value>
                <value>0.60270836122512805</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='10' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Denmark&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]&quot;</value>
                <value>0.42265003408432</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='12' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Denmark&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Life.Expectancy:qk]&quot;</value>
                <value>0.79380276228904711</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='13' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Denmark&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Generosity:qk]&quot;</value>
                <value>0.35849524436473856</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='14' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Denmark&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[usr:Calculation_1827617063790997506:qk]&quot;</value>
                <value>1.7412701865305107</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{D252AA43-3831-47BE-BDFD-04BB73A24808}' />
    </worksheet>
    <worksheet name='Happiness Comparison'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Overall &lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wh_2016to2019+' name='federated.1usmlui0eestho1g6nb130qrm10t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1usmlui0eestho1g6nb130qrm10t'>
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column caption='Country Economic Health' datatype='real' name='[GDP.per.capita]' role='measure' type='quantitative' />
            <column caption='Personal Generosity' datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness.Score]' role='measure' type='quantitative' />
            <column caption='Life Expectancy' datatype='real' name='[Life.Expectancy]' role='measure' type='quantitative' />
            <column caption='Family-Friend Support' datatype='real' name='[Social.Support]' role='measure' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Avg' name='[avg:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP.per.capita]' derivation='Avg' name='[avg:GDP.per.capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Avg' name='[avg:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life.Expectancy]' derivation='Avg' name='[avg:Life.Expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social.Support]' derivation='Avg' name='[avg:Social.Support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness.Score]' derivation='None' name='[none:Happiness.Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Freedom:qk]' scope='rows' value='Freedom of Choice' />
            <format attr='title' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Social.Support:qk]' scope='rows' value='Family-Friend Support' />
            <format attr='title' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Generosity:qk]' scope='rows' value='Personal Generosity' />
            <format attr='title' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Life.Expectancy:qk]' scope='rows' value='Long Life Expectancy' />
            <format attr='title' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:GDP.per.capita:qk]' scope='rows' value='Country Economic Health' />
            <format attr='title' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Happiness.Score:qk]' scope='cols' value='Happiness Score' />
            <encoding attr='space' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Happiness.Score:qk]' field-type='quantitative' major-origin='0.0' major-spacing='1.0' minor-origin='0.0' minor-show='false' minor-spacing='0.10000000000000001' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Freedom:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Social.Support:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
                <encoding attr='density-color' palette='orange_10_0' type='interpolated' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Generosity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <encoding attr='density-color' palette='green_10_0' type='interpolated' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Freedom:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Life.Expectancy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#606b76' />
                <encoding attr='density-color' palette='gray_warm_10_0' type='interpolated' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:GDP.per.capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#b6992d' />
                <encoding attr='density-color' palette='brown_10_0' type='interpolated' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1usmlui0eestho1g6nb130qrm10t].[avg:Freedom:qk] + ([federated.1usmlui0eestho1g6nb130qrm10t].[avg:Social.Support:qk] + ([federated.1usmlui0eestho1g6nb130qrm10t].[avg:Generosity:qk] + ([federated.1usmlui0eestho1g6nb130qrm10t].[avg:Life.Expectancy:qk] + [federated.1usmlui0eestho1g6nb130qrm10t].[avg:GDP.per.capita:qk]))))</rows>
        <cols>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Happiness.Score:qk]</cols>
      </table>
      <simple-id uuid='{8E8311E8-2C10-4091-A86B-BC3D7C8CC8FE}' />
    </worksheet>
    <worksheet name='Happy Country Measurements'>
      <table>
        <view>
          <datasources>
            <datasource caption='wh_2016to2019+' name='federated.1usmlui0eestho1g6nb130qrm10t' />
          </datasources>
          <datasource-dependencies datasource='federated.1usmlui0eestho1g6nb130qrm10t'>
            <column caption='Top 10 Happy Countries' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Australia&quot;'>
                  <value>&quot;Australia&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Canada&quot;'>
                  <value>&quot;Canada&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Denmark&quot;'>
                  <value>&quot;Denmark&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Finland&quot;'>
                  <value>&quot;Finland&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Iceland&quot;'>
                  <value>&quot;Iceland&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Netherlands&quot;'>
                  <value>&quot;Netherlands&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;New Zealand&quot;'>
                  <value>&quot;New Zealand&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Norway&quot;'>
                  <value>&quot;Norway&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Sweden&quot;'>
                  <value>&quot;Sweden&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Switzerland&quot;'>
                  <value>&quot;Switzerland&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Burundi&quot;' value='Sad #2 - Burundi' />
                <alias key='&quot;Central African Republic&quot;' value='Sad #1 - Central African Republic' />
                <alias key='&quot;Denmark&quot;' value='Happy #1 - Denmark' />
                <alias key='&quot;Iceland&quot;' value='Happy #3 - Iceland' />
                <alias key='&quot;Norway&quot;' value='Happy #2 - Norway' />
                <alias key='&quot;Syria&quot;' value='Sad #3 - Syria' />
              </aliases>
            </column>
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column caption='Country Economic Health' datatype='real' name='[GDP.per.capita]' role='measure' type='quantitative' />
            <column caption='Personal Generosity' datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column caption='Life Expectancy' datatype='real' name='[Life.Expectancy]' role='measure' type='quantitative' />
            <column caption='Family-Friend Support' datatype='real' name='[Social.Support]' role='measure' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Sum' name='[sum:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP.per.capita]' derivation='Sum' name='[sum:GDP.per.capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Sum' name='[sum:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life.Expectancy]' derivation='Sum' name='[sum:Life.Expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social.Support]' derivation='Sum' name='[sum:Social.Support:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:GDP.per.capita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Social.Support:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Freedom:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Life.Expectancy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Generosity:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Australia&quot;' function='range' level='[Country (group)]' to='&quot;Norway&quot;' />
              <groupfilter function='member' level='[Country (group)]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[Country (group)]' member='&quot;Switzerland&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group)]</column>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</column>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</rows>
        <cols>([federated.1usmlui0eestho1g6nb130qrm10t].[Country (group)] / [federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{0B22766D-CE1E-4BC1-9C4E-9DF5EA55365D}' />
    </worksheet>
    <worksheet name='Human Rights Top 3 Happy Sad'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Freedom -  Top 3 Happy and Top 3 Sad Countries
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wh_2016to2019+' name='federated.1usmlui0eestho1g6nb130qrm10t' />
          </datasources>
          <datasource-dependencies datasource='federated.1usmlui0eestho1g6nb130qrm10t'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Burundi&quot;' value='Sad #2 - Burundi' />
                <alias key='&quot;Central African Republic&quot;' value='Sad #1 - Central African Republic' />
                <alias key='&quot;Denmark&quot;' value='Happy #1 - Denmark' />
                <alias key='&quot;Iceland&quot;' value='Happy #3 - Iceland' />
                <alias key='&quot;Norway&quot;' value='Happy #2 - Norway' />
                <alias key='&quot;Syria&quot;' value='Sad #3 - Syria' />
              </aliases>
            </column>
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column caption='Human Rights Protection' datatype='real' name='[Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]' role='measure' type='quantitative' />
            <column-instance column='[Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]' derivation='Avg' name='[avg:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Freedom]' derivation='Sum' name='[sum:Freedom:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Syria&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]' direction='ASC' using='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]' />
          <slices>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]' scope='rows' value='Human Rights Protection' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]' value='132' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Freedom:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]' />
              <size column='[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Freedom:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Human Rights Protection:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Human Rights Score (Schnakenberg & Fariss, 2014; Fariss, 2019):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Freedom:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Freedom:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d3b348' />
                <format attr='size' value='1.2066892385482788' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]</rows>
        <cols>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{036CD88D-4FCA-42DD-9FFF-BA12CBFB5E2A}' />
    </worksheet>
    <worksheet name='Intro'>
      <table>
        <view>
          <datasources>
            <datasource caption='wh_2016to2019+' name='federated.1usmlui0eestho1g6nb130qrm10t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1usmlui0eestho1g6nb130qrm10t'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Burundi&quot;' value='Sad #2 - Burundi' />
                <alias key='&quot;Central African Republic&quot;' value='Sad #1 - Central African Republic' />
                <alias key='&quot;Denmark&quot;' value='Happy #1 - Denmark' />
                <alias key='&quot;Iceland&quot;' value='Happy #3 - Iceland' />
                <alias key='&quot;Norway&quot;' value='Happy #2 - Norway' />
                <alias key='&quot;Syria&quot;' value='Sad #3 - Syria' />
              </aliases>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;Canada&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <shape column='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='My Images/Happy Man.png' />
                <format attr='size' value='12.42962646484375' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1usmlui0eestho1g6nb130qrm10t].[Latitude (generated)]</rows>
        <cols>[federated.1usmlui0eestho1g6nb130qrm10t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{86CF9CCF-FAAB-412A-8EF2-30C66BA4C4FB}' />
    </worksheet>
    <worksheet name='Map 10 Happy Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Happy Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wh_2016to2019+' name='federated.1usmlui0eestho1g6nb130qrm10t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1usmlui0eestho1g6nb130qrm10t'>
            <column caption='Top 10 Happy Countries' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Australia&quot;'>
                  <value>&quot;Australia&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Canada&quot;'>
                  <value>&quot;Canada&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Denmark&quot;'>
                  <value>&quot;Denmark&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Finland&quot;'>
                  <value>&quot;Finland&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Iceland&quot;'>
                  <value>&quot;Iceland&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Netherlands&quot;'>
                  <value>&quot;Netherlands&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;New Zealand&quot;'>
                  <value>&quot;New Zealand&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Norway&quot;'>
                  <value>&quot;Norway&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Sweden&quot;'>
                  <value>&quot;Sweden&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Switzerland&quot;'>
                  <value>&quot;Switzerland&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Burundi&quot;' value='Sad #2 - Burundi' />
                <alias key='&quot;Central African Republic&quot;' value='Sad #1 - Central African Republic' />
                <alias key='&quot;Denmark&quot;' value='Happy #1 - Denmark' />
                <alias key='&quot;Iceland&quot;' value='Happy #3 - Iceland' />
                <alias key='&quot;Norway&quot;' value='Happy #2 - Norway' />
                <alias key='&quot;Syria&quot;' value='Sad #3 - Syria' />
              </aliases>
            </column>
            <column datatype='real' name='[Happiness.Score]' role='measure' type='quantitative' />
            <column-instance column='[Happiness.Score]' derivation='Avg' name='[avg:Happiness.Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country (group)]' />
              <groupfilter function='member' level='[Country (group)]' member='&quot;Other&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[Longitude (generated)]' field-type='quantitative' max='49973988.197776921' min='3392628.4675644906' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[Latitude (generated)]' field-type='quantitative' max='16732652.540600508' min='-12900459.943034878' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#dce6dc</color>
                <color>#c9dcc9</color>
                <color>#b7d1b7</color>
                <color>#a5c7a5</color>
                <color>#94bd94</color>
                <color>#85b285</color>
                <color>#76a876</color>
                <color>#689d68</color>
                <color>#5b935b</color>
                <color>#4f894f</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' value='Happiness Score'>
              <formatted-text>
                <run>Happiness Score</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]' />
              <lod column='[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group)]' />
              <color column='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' />
              <geometry column='[federated.1usmlui0eestho1g6nb130qrm10t].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Happiness.Score:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1usmlui0eestho1g6nb130qrm10t].[Latitude (generated)]</rows>
        <cols>[federated.1usmlui0eestho1g6nb130qrm10t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5D29C448-C1FE-48E8-ABB3-FF581B6D9F49}' />
    </worksheet>
    <worksheet name='Map 10 Sad Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='wh_2016to2019+' name='federated.1usmlui0eestho1g6nb130qrm10t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1usmlui0eestho1g6nb130qrm10t'>
            <column caption='Top 10 Sad Countries' datatype='string' name='[Country (group) 1]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Afghanistan&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Benin&quot;'>
                  <value>&quot;Benin&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Burundi&quot;'>
                  <value>&quot;Burundi&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Central African Republic&quot;'>
                  <value>&quot;Central African Republic&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Guinea&quot;'>
                  <value>&quot;Guinea&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Liberia&quot;'>
                  <value>&quot;Liberia&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Rwanda&quot;'>
                  <value>&quot;Rwanda&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Syria&quot;'>
                  <value>&quot;Syria&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Tanzania&quot;'>
                  <value>&quot;Tanzania&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Togo&quot;'>
                  <value>&quot;Togo&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Burundi&quot;' value='Sad #2 - Burundi' />
                <alias key='&quot;Central African Republic&quot;' value='Sad #1 - Central African Republic' />
                <alias key='&quot;Denmark&quot;' value='Happy #1 - Denmark' />
                <alias key='&quot;Iceland&quot;' value='Happy #3 - Iceland' />
                <alias key='&quot;Norway&quot;' value='Happy #2 - Norway' />
                <alias key='&quot;Syria&quot;' value='Sad #3 - Syria' />
              </aliases>
            </column>
            <column datatype='real' name='[Happiness.Score]' role='measure' type='quantitative' />
            <column-instance column='[Happiness.Score]' derivation='Avg' name='[avg:Happiness.Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group) 1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[Country (group) 1]' to='&quot;Liberia&quot;' />
              <groupfilter from='&quot;Rwanda&quot;' function='range' level='[Country (group) 1]' to='&quot;Togo&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group) 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[Longitude (generated)]' field-type='quantitative' max='12283112.160535753' min='-8628783.7467198707' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[Latitude (generated)]' field-type='quantitative' max='10037166.905827723' min='-3266106.490544524' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e6dcdb</color>
                <color>#dbc8c7</color>
                <color>#d0b5b3</color>
                <color>#c5a3a1</color>
                <color>#ba9290</color>
                <color>#af827f</color>
                <color>#a47270</color>
                <color>#996461</color>
                <color>#8e5754</color>
                <color>#844b48</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' value='Happiness Score'>
              <formatted-text>
                <run>Happiness Score</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]' />
              <lod column='[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group) 1]' />
              <color column='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' />
              <geometry column='[federated.1usmlui0eestho1g6nb130qrm10t].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Happiness.Score:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1usmlui0eestho1g6nb130qrm10t].[Latitude (generated)]</rows>
        <cols>[federated.1usmlui0eestho1g6nb130qrm10t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{75322525-8379-4CB1-97C2-B6C28009FD0B}' />
    </worksheet>
    <worksheet name='Map Happy and Sad Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Map of Happy and Sad Countries (20 in all)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wh_2016to2019+' name='federated.1usmlui0eestho1g6nb130qrm10t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1usmlui0eestho1g6nb130qrm10t'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Burundi&quot;' value='Sad #2 - Burundi' />
                <alias key='&quot;Central African Republic&quot;' value='Sad #1 - Central African Republic' />
                <alias key='&quot;Denmark&quot;' value='Happy #1 - Denmark' />
                <alias key='&quot;Iceland&quot;' value='Happy #3 - Iceland' />
                <alias key='&quot;Norway&quot;' value='Happy #2 - Norway' />
                <alias key='&quot;Syria&quot;' value='Sad #3 - Syria' />
              </aliases>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Syria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[Longitude (generated)]' field-type='quantitative' max='56572453.130673133' min='2489705.1886801892' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[Latitude (generated)]' field-type='quantitative' max='14855018.435741706' min='-5583614.6261678012' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]' />
              <geometry column='[federated.1usmlui0eestho1g6nb130qrm10t].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1usmlui0eestho1g6nb130qrm10t].[Latitude (generated)]</rows>
        <cols>[federated.1usmlui0eestho1g6nb130qrm10t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4B70C8D0-92DC-4078-AB43-F7B6234F5094}' />
    </worksheet>
    <worksheet name='Perception vs. Happiness'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='12'>Government Corruption Perception </run>
            <run fontcolor='#ffffff' fontsize='10'>vs.</run>
            <run fontcolor='#ffffff' fontsize='12'> Happiness</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wh_2016to2019+' name='federated.1usmlui0eestho1g6nb130qrm10t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1usmlui0eestho1g6nb130qrm10t'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Burundi&quot;' value='Sad #2 - Burundi' />
                <alias key='&quot;Central African Republic&quot;' value='Sad #1 - Central African Republic' />
                <alias key='&quot;Denmark&quot;' value='Happy #1 - Denmark' />
                <alias key='&quot;Iceland&quot;' value='Happy #3 - Iceland' />
                <alias key='&quot;Norway&quot;' value='Happy #2 - Norway' />
                <alias key='&quot;Syria&quot;' value='Sad #3 - Syria' />
              </aliases>
            </column>
            <column datatype='real' name='[Happiness.Score]' role='measure' type='quantitative' />
            <column caption='Government Corrupton Perception' datatype='real' name='[Trust.Goverment.Corruption]' role='measure' type='quantitative' />
            <column-instance column='[Happiness.Score]' derivation='Avg' name='[avg:Happiness.Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trust.Goverment.Corruption]' derivation='Avg' name='[avg:Trust.Goverment.Corruption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' included-values='in-range'>
            <min>2.6930000782012899</min>
            <max>7.5239999179840105</max>
          </filter>
          <filter class='quantitative' column='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>0.5</max>
          </filter>
          <slices>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]</column>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[Longitude (generated)]' field-type='quantitative' max='24208062.359738544' min='-27473716.120052513' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[Latitude (generated)]' field-type='quantitative' max='16889076.578233659' min='-11083322.03513978' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' palette='orange_blue_diverging_10_0' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]' palette='red_blue_diverging_10_0' type='interpolated' />
            <encoding attr='size' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]' field-type='quantitative' max='0.5' max-size='1' min-size='0.150433' type='quantsize' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' value='Happiness Score' />
            <format attr='size' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]' value='Corruption Perception&#10;'>
              <formatted-text>
                <run>Corruption Perception&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' value='Happiness Score (Average)' />
            <format attr='title' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]' value='Corruption Perception Range'>
              <formatted-text>
                <run fontsize='8'>Corruption Perception Range</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='text-align' value='left' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' />
              <size column='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]' />
              <lod column='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Happiness.Score:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Government Corrupton Perception:	</run>
                <run bold='true'><![CDATA[<[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1usmlui0eestho1g6nb130qrm10t].[Latitude (generated)]</rows>
        <cols>[federated.1usmlui0eestho1g6nb130qrm10t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3856B006-9512-4A09-A70D-93DC0DC6DC01}' />
    </worksheet>
    <worksheet name='Perception vs. Protection'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='12'>Government Corruption Perception </run>
            <run fontcolor='#ffffff' fontsize='10'>vs.</run>
            <run fontcolor='#ffffff' fontsize='12'> Government Protection from Torture, Imprisonments, and Killings</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wh_2016to2019+' name='federated.1usmlui0eestho1g6nb130qrm10t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1usmlui0eestho1g6nb130qrm10t'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Burundi&quot;' value='Sad #2 - Burundi' />
                <alias key='&quot;Central African Republic&quot;' value='Sad #1 - Central African Republic' />
                <alias key='&quot;Denmark&quot;' value='Happy #1 - Denmark' />
                <alias key='&quot;Iceland&quot;' value='Happy #3 - Iceland' />
                <alias key='&quot;Norway&quot;' value='Happy #2 - Norway' />
                <alias key='&quot;Syria&quot;' value='Sad #3 - Syria' />
              </aliases>
            </column>
            <column datatype='real' name='[Happiness.Score]' role='measure' type='quantitative' />
            <column caption='Human Rights Protection' datatype='real' name='[Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]' role='measure' type='quantitative' />
            <column caption='Government Corrupton Perception' datatype='real' name='[Trust.Goverment.Corruption]' role='measure' type='quantitative' />
            <column-instance column='[Happiness.Score]' derivation='Avg' name='[avg:Happiness.Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]' derivation='Sum' name='[sum:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trust.Goverment.Corruption]' derivation='Sum' name='[sum:Trust.Goverment.Corruption:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' included-values='in-range'>
            <min>2.6930000782012899</min>
            <max>7.5239999179840105</max>
          </filter>
          <slices>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[Longitude (generated)]' field-type='quantitative' max='22388110.020978592' min='-22855571.462794542' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[Latitude (generated)]' field-type='quantitative' max='15415924.210457763' min='-9174143.7029106878' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]' value='#555555' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size' field='[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]' field-type='quantitative' max='10.0' max-size='1' min='-5.0' min-size='0.218647' type='quantsize' />
            <encoding attr='color' field='[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Trust.Goverment.Corruption:qk]' palette='red_blue_diverging_10_0' type='interpolated' />
            <encoding attr='size' field='[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Trust.Goverment.Corruption:qk]' field-type='quantitative' max='1.0' max-size='1' min-size='0.150433' type='quantsize' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Trust.Goverment.Corruption:qk]' value='Corruption Perception' />
            <format attr='color' field='[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]' value='Human Rights Protection'>
              <formatted-text>
                <run>Human Rights Protection</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' value='Happiness Score (Average)'>
              <formatted-text>
                <run>Happiness Score (Average)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='text-align' value='left' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]' />
              <size column='[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Trust.Goverment.Corruption:qk]' />
              <text column='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' />
              <lod column='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.0863175392150879' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1usmlui0eestho1g6nb130qrm10t].[Latitude (generated)]</rows>
        <cols>[federated.1usmlui0eestho1g6nb130qrm10t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4E062468-1E26-4F62-91EC-F3D5D78D019C}' />
    </worksheet>
    <worksheet name='Sad Country Measurements '>
      <table>
        <view>
          <datasources>
            <datasource caption='wh_2016to2019+' name='federated.1usmlui0eestho1g6nb130qrm10t' />
          </datasources>
          <datasource-dependencies datasource='federated.1usmlui0eestho1g6nb130qrm10t'>
            <column caption='Top 10 Sad Countries' datatype='string' name='[Country (group) 1]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Afghanistan&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Benin&quot;'>
                  <value>&quot;Benin&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Burundi&quot;'>
                  <value>&quot;Burundi&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Central African Republic&quot;'>
                  <value>&quot;Central African Republic&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Guinea&quot;'>
                  <value>&quot;Guinea&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Liberia&quot;'>
                  <value>&quot;Liberia&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Rwanda&quot;'>
                  <value>&quot;Rwanda&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Syria&quot;'>
                  <value>&quot;Syria&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Tanzania&quot;'>
                  <value>&quot;Tanzania&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Togo&quot;'>
                  <value>&quot;Togo&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Burundi&quot;' value='Sad #2 - Burundi' />
                <alias key='&quot;Central African Republic&quot;' value='Sad #1 - Central African Republic' />
                <alias key='&quot;Denmark&quot;' value='Happy #1 - Denmark' />
                <alias key='&quot;Iceland&quot;' value='Happy #3 - Iceland' />
                <alias key='&quot;Norway&quot;' value='Happy #2 - Norway' />
                <alias key='&quot;Syria&quot;' value='Sad #3 - Syria' />
              </aliases>
            </column>
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column caption='Country Economic Health' datatype='real' name='[GDP.per.capita]' role='measure' type='quantitative' />
            <column caption='Personal Generosity' datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column caption='Life Expectancy' datatype='real' name='[Life.Expectancy]' role='measure' type='quantitative' />
            <column caption='Family-Friend Support' datatype='real' name='[Social.Support]' role='measure' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Sum' name='[sum:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP.per.capita]' derivation='Sum' name='[sum:GDP.per.capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Sum' name='[sum:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life.Expectancy]' derivation='Sum' name='[sum:Life.Expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social.Support]' derivation='Sum' name='[sum:Social.Support:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:GDP.per.capita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Social.Support:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Freedom:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Life.Expectancy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Generosity:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group) 1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[Country (group) 1]' to='&quot;Liberia&quot;' />
              <groupfilter from='&quot;Rwanda&quot;' function='range' level='[Country (group) 1]' to='&quot;Togo&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</column>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group) 1]</column>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</rows>
        <cols>([federated.1usmlui0eestho1g6nb130qrm10t].[Country (group) 1] / [federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{159CA2BC-B98B-498E-A3D8-0C780DC328BD}' />
    </worksheet>
    <worksheet name='Second Happiest and Saddest World Happiness Comparison'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Second Happiest and Saddest World Happiness Comparison</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wh_2016to2019+' name='federated.1usmlui0eestho1g6nb130qrm10t' />
          </datasources>
          <datasource-dependencies datasource='federated.1usmlui0eestho1g6nb130qrm10t'>
            <column caption='HumanRightsADJUSTEDScale' datatype='real' name='[Calculation_1827617063790997506]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF AVG([Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]) &gt; 0 THEN SQRT(AVG([Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)])) ELSE 0 END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Burundi&quot;' value='Sad #2 - Burundi' />
                <alias key='&quot;Central African Republic&quot;' value='Sad #1 - Central African Republic' />
                <alias key='&quot;Denmark&quot;' value='Happy #1 - Denmark' />
                <alias key='&quot;Iceland&quot;' value='Happy #3 - Iceland' />
                <alias key='&quot;Norway&quot;' value='Happy #2 - Norway' />
                <alias key='&quot;Syria&quot;' value='Sad #3 - Syria' />
              </aliases>
            </column>
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column caption='Country Economic Health' datatype='real' name='[GDP.per.capita]' role='measure' type='quantitative' />
            <column caption='Personal Generosity' datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column caption='Human Rights Protection' datatype='real' name='[Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019)]' role='measure' type='quantitative' />
            <column caption='Life Expectancy' datatype='real' name='[Life.Expectancy]' role='measure' type='quantitative' />
            <column caption='Family-Friend Support' datatype='real' name='[Social.Support]' role='measure' type='quantitative' />
            <column caption='Government Corrupton Perception' datatype='real' name='[Trust.Goverment.Corruption]' role='measure' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Avg' name='[avg:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP.per.capita]' derivation='Avg' name='[avg:GDP.per.capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Avg' name='[avg:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life.Expectancy]' derivation='Avg' name='[avg:Life.Expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social.Support]' derivation='Avg' name='[avg:Social.Support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trust.Goverment.Corruption]' derivation='Avg' name='[avg:Trust.Goverment.Corruption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1827617063790997506]' derivation='User' name='[usr:Calculation_1827617063790997506:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:GDP.per.capita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Social.Support:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Freedom:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Life.Expectancy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Generosity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[usr:Calculation_1827617063790997506:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</column>
            <column>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]' scope='rows' value='Score' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</rows>
        <cols>([federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk] / [federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names])</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Norway&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[usr:Calculation_1827617063790997506:qk]&quot;</value>
                <value>2.0011137953649714</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Burundi&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[usr:Calculation_1827617063790997506:qk]&quot;</value>
                <value>0.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='14' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Burundi&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:GDP.per.capita:qk]&quot;</value>
                <value>0.079966284333467502</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='15' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Burundi&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Social.Support:qk]&quot;</value>
                <value>0.43210679217338549</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='16' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Burundi&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Freedom:qk]&quot;</value>
                <value>0.051550376600027106</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='17' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Burundi&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]&quot;</value>
                <value>0.089168972523212445</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='19' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Burundi&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Life.Expectancy:qk]&quot;</value>
                <value>0.15454039584159851</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='20' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Burundi&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Generosity:qk]&quot;</value>
                <value>0.20366759229898448</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='21' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Norway&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:GDP.per.capita:qk]&quot;</value>
                <value>1.596951592178345</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='22' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Norway&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Social.Support:qk]&quot;</value>
                <value>1.3302117797851549</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='23' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Norway&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Freedom:qk]&quot;</value>
                <value>0.61575629369735707</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='24' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Norway&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]&quot;</value>
                <value>0.33686191726207748</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='26' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Norway&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Life.Expectancy:qk]&quot;</value>
                <value>0.79622825147628795</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='27' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Norway&quot;</value>
                <value>&quot;[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Generosity:qk]&quot;</value>
                <value>0.370481118655205</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{2A26AB27-B789-4310-AADC-23C89ABE01FA}' />
    </worksheet>
    <worksheet name='Sheet 18'>
      <table>
        <view>
          <datasources>
            <datasource caption='wh_2016to2019+' name='federated.1usmlui0eestho1g6nb130qrm10t' />
          </datasources>
          <datasource-dependencies datasource='federated.1usmlui0eestho1g6nb130qrm10t'>
            <_.fcp.ObjectModelTableType.false...column caption='wh_2016to2019.csv' datatype='integer' name='[__tableau_internal_object_id__].[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='wh_2016to2019.csv' datatype='table' name='[__tableau_internal_object_id__].[wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1usmlui0eestho1g6nb130qrm10t].[__tableau_internal_object_id__].[cnt:wh_2016to2019.csv_49029ECB37BE478BAFC403C8DFD9401B:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3A93DA1C-769A-4E5D-A4D4-13A61EA8CB7C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Happy Sad Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='82400' x='800' y='1000'>
              <zone h='45000' id='3' name='Map Happy and Sad Countries' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='25875' id='9' name='Happy Country Measurements' w='82400' x='800' y='46000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='27125' id='12' name='Sad Country Measurements ' w='82400' x='800' y='71875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='15750' id='10' name='Happy Country Measurements' pane-specification-id='0' param='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='90' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='89' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='45000' id='3' is-fixed='true' name='Map Happy and Sad Countries' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='199' h='25875' id='9' is-fixed='true' name='Happy Country Measurements' w='82400' x='800' y='46000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='15750' id='10' name='Happy Country Measurements' pane-specification-id='0' param='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='209' h='27125' id='12' is-fixed='true' name='Sad Country Measurements ' w='82400' x='800' y='71875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{40CB4163-70A8-47D2-8C14-EB63123F3754}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='16'>World Happiness - A Story</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#555555' />
        </style-rule>
        <style-rule element='story-description'>
          <format attr='font-style' id='story-description_10' value='normal' />
          <format attr='font-weight' id='story-description_10' value='normal' />
          <format attr='text-decoration' id='story-description_10' value='none' />
          <format attr='font-style' id='story-description_11' value='normal' />
          <format attr='font-weight' id='story-description_11' value='normal' />
          <format attr='text-decoration' id='story-description_11' value='none' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='367' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='11' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='3838' id='12' w='98426' x='787' y='830'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='94502' id='9' param='vert' removable='false' w='98426' x='787' y='4668'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='94502' id='1' param='vert' removable='false' w='98426' x='787' y='4668'>
                <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' fixed-size='197' h='20436' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='4668' />
                <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='74066' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='25104'>
                  <flipboard active-id='8' nav-type='caption' show-nav-arrows='true'>
                    <story-points>
                      <story-point caption='World Makes the World Happy?' captured-sheet='Intro' id='1' />
                      <story-point caption='Each country has an overall &quot;happy score&quot; according to a gallup poll survey.  ' captured-sheet='All Countries Happy Order' id='3' />
                      <story-point caption='Happy countries tend to &quot;perceive&quot; they  have government  corruption - which is noted by the size of the &quot;circle&quot;.   In other words, a country that views that there is government corruption doesn&apos;t seem to effect happiness.' captured-sheet='Perception vs. Protection' id='4'>
                        <capturedDeltas>
                          <worksheet name='Perception vs. Protection'>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <encoding attr='space' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[Latitude (generated)]' field-type='quantitative' max='19399753.144459438' min='-20200950.505822767' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                                <encoding attr='space' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[Longitude (generated)]' field-type='quantitative' max='22520721.995525606' min='-24238788.030638948' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                              </style-rule>
                            </style>
                          </worksheet>
                        </capturedDeltas>
                      </story-point>
                      <story-point caption='People appear to get happier when Human Rights are Protected.  However, PERCEPTION of corruption doesn&apos;t decrease the happiness score and has no relation at all.' captured-sheet='Correlation Happiness to Human Rights and Corrupt.' id='5' />
                      <story-point caption='Here are the 10 Happiest Countries according to the Happiness Score...' captured-sheet='Map 10 Happy Countries' id='6' />
                      <story-point caption='And here are the 10 Saddest Countries (according to the lowest Happiness Score).  But what is effecting the happiness?' captured-sheet='Map 10 Sad Countries' id='7' />
                      <story-point caption='This shows an overall relation of each happiness category and the effect it has on the happiness score.  All the categories appear to have some correlation to &quot;Happiness&quot;, however &quot;Personal Generosity&quot; appears to have no effect on happiness.' captured-sheet='Happiness Comparison' id='8' />
                      <story-point caption='What do the measures look for the Top 10 Happy Countries?  If you click on the next slide, and then click back you can see how the scores change.' captured-sheet='(2)Happy Country Measurements ' id='9' />
                      <story-point caption='This is the 10 Saddest Countries, what do the scores look like?  Most measures decrease to some degree or another, but especially &quot;Country Economic Health&quot; and &quot;Life Expectancy&quot;.  On a side note, it appears both those categories involve a future outlook of life ongoing.' captured-sheet='(2) Sad Country Measurements ' id='10' />
                      <story-point caption='This is a map for the 10 happiest and 10 saddest countries.  And you can see how the measures change for each country as you click on them.  But which category shows the greatest effect on happiness?' captured-sheet='Happy Sad Dashboard' id='11'>
                        <capturedDeltas>
                          <worksheet name='Map Happy and Sad Countries'>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <encoding attr='space' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[Latitude (generated)]' field-type='quantitative' max='10665419.773889538' min='-9546678.9723524936' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                                <encoding attr='space' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[Longitude (generated)]' field-type='quantitative' max='53124665.109660789' min='-358649.48190481961' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                              </style-rule>
                            </style>
                          </worksheet>
                        </capturedDeltas>
                      </story-point>
                      <story-point caption='To find the category with the greatest effect on happiness, I looked at the happiest country, and the saddest country.  I noticed a drastic difference with the three categories:  &quot;Country Economic Growth&quot;, &quot;Family-Friend Support&quot;,  &quot;Human Rights Protection&quot;, and &quot;Life Expectancy&quot;.' captured-sheet='FIRST Happiest and Saddest World Happiness Comparison' id='12' />
                      <story-point caption='This was consistent with the second happiest country and the second saddest country.' captured-sheet='Second Happiest and Saddest World Happiness Comparison' id='13' />
                      <story-point caption='In Summary, Human Rights Protection (physical integrity protection from torture, government executions, mass killings, and political imprisonment) appears to have the greatest effect on happiness.  &quot;Economic Growth&quot;, &quot;Life Expectancy&quot;, and &quot;Family-Friend support&quot; also effect happiness.  It appears the area of &quot;protection&quot; overall is important to the happiness of a country.  People like freedom.' captured-sheet='Human Rights Top 3 Happy Sad' id='14' />
                    </story-points>
                  </flipboard>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='18568' hidden='true' id='6' story-point-id='1' w='85531' x='3839' y='17427'>
          <formatted-text>
            <run bold='true' fontalignment='0'>The World Happiness Report Data</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontsize='10'>Using data from the Gallup World Poll, this story uses principal measures of happiness through from 2015 to 2019.  The data combines with Global Change Data Lab&apos;s &quot;World in Data&quot; and in particular the &quot;Human Rights Score&quot; ranging from 2016-1017.  This is a measurement per country is the degree to which governments protect and respect human rights.  </run>
            <run fontalignment='0' fontcolor='#333333' fontsize='10'>It aims to measure how a government protects its citizens&apos; physical integrity, by taking into account torture, government killing, political imprisonment, extrajudicial executions, mass killings and disappearances. </run>
            <run fontalignment='0' fontcolor='#000000' fontsize='10'>The values range from around -3.8 to around 5.4 (the higher the better!)</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='40871' hidden='true' id='7' story-point-id='1' w='84744' x='4035' y='38693'>
          <formatted-text>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Human Rights Protection (Human.Rights.Score): </run>
            <run fontalignment='0' fontcolor='#333333' fontname='Helvetica Neue' fontsize='7'>Measure how a government protects its citizens&apos; physical integrity, by taking into account torture, government killing, political imprisonment, extrajudicial executions, mass killings and disappearances. Its values range from −3.8 to around 5.4 (higher is better). </run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontsize='10'>Freedom: </run>
            <run fontalignment='0' fontcolor='#333333' fontname='Helvetica Neue' fontsize='7'>National average of binary question: &quot;Are you staisfied or disatisfied with your freedom to choose what you do with your life?&quot;  0 (low), 1 is high.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontsize='10'>Country Economic Health (GDP.per.capita): </run>
            <run fontalignment='0' fontcolor='#333333' fontname='Helvetica Neue' fontsize='7'>The monetary value of all goods and services produced within a country (Gross Domestic Product, or GDP) in a specific time period based on &quot;international dollar&quot; divided by the average population at mid-year. </run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontsize='10'>Personal Generosity (Generosity): </run>
            <run fontalignment='0' fontcolor='#333333' fontname='Helvetica Neue' fontsize='7'>National average of binary question: “Have you donated money to a charity in the past month?”  0 (low), 1 is high.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontsize='10'>Happiness Score: </run>
            <run fontalignment='0' fontcolor='#333333' fontname='Helvetica Neue' fontsize='7'>  Individual perception rank based on survey questions.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontsize='9'>Life Expectancy</run>
            <run fontalignment='0' fontsize='10'>: </run>
            <run fontalignment='0' fontcolor='#333333' fontname='Helvetica Neue' fontsize='7'>Life expectancy at birth are constructed based on data from the World Health Organization (WHO)</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='7'>Æ </run>
            <run fontalignment='0' fontcolor='#333333' fontname='Helvetica Neue' fontsize='7'>  0 (low), 1 is high.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontsize='10'>Family Friend Support:   </run>
            <run fontalignment='0' fontcolor='#333333' fontname='Helvetica Neue' fontsize='7'>National average of binary question: “If you were in trouble, do you have relatives or friends you can count on to help you whenever you need them, or not?”  0 (low), 1 is high.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontname='Tableau Regular' fontsize='9'>Government Corruption Perception</run>
            <run fontalignment='0' fontname='Tableau Regular' fontsize='10'>:   </run>
            <run fontalignment='0' fontcolor='#333333' fontname='Tableau Regular' fontsize='7'>N</run>
            <run fontalignment='0' fontcolor='#333333' fontname='Helvetica Neue' fontsize='7'>ational average of two binary questions: “Is corruption widespread throughout the government or not?” and “Is corruption widespread within businesses or not?” </run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='7'>Æ </run>
            <run fontalignment='0' fontcolor='#333333' fontname='Helvetica Neue' fontsize='7'>”  0 (low), 1 is high.</run>
            <run fontalignment='0'>Æ&#10;&#10;&#10;</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='6535' hidden='true' id='13' story-point-id='4' w='33268' x='48524' y='25311'>
          <formatted-text>
            <run fontsize='8'>Use the slider (to the right) to adjust what countries you see according to their happiness.  Hover to see scores.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='12552' hidden='true' id='14' story-point-id='4' w='32972' x='4232' y='25622'>
          <formatted-text>
            <run fontalignment='0' fontsize='12'>You will notice that happier countries &quot;perceive&quot; more government corruption than non-happy countries. Surprising!</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='25104' hidden='true' id='15' story-point-id='6' w='14862' x='7677' y='28631'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontsize='10' underline='true'>10 Happiest Countries</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='8' italic='true'>(alphabetical order)</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Australia</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Canada</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Denmark</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Finland</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Iceland</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Netherlands</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>New Zealand</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Norway</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Sweden</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Switzerland</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' h='25934' hidden='true' id='16' story-point-id='7' w='18701' x='7087' y='30913'>
          <formatted-text>
            <run fontalignment='0' fontsize='10' underline='true'>Ten Saddest Countries</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='8' italic='true'>(alphabetical order)</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Afghanistan</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Benin</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Burundi</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Central African Republic</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Guinea</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Liberia</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Rwanda</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Syria</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Tanzania</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Togo</run>
            <run fontalignment='0'>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='19917' id='17' story-point-id='8' w='38878' x='32185' y='33714'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontsize='12' italic='true'>Notice the line for each category</run>
            <run fontalignment='0' fontsize='12'>. </run>
            <run fontalignment='0' fontsize='10'>Æ </run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontsize='10'>As the </run>
            <run bold='true' fontalignment='0' fontsize='10'>Happiness Score</run>
            <run fontalignment='0' fontsize='10'> increases, the category  (for example </run>
            <run bold='true' fontalignment='0' fontcolor='#e15759' fontsize='10'>Freedom of Choice</run>
            <run fontalignment='0' fontsize='10'>) increases right along with it.  Using </run>
            <run bold='true' fontalignment='0' fontcolor='#e15759' fontsize='10'>Freedom of Choice</run>
            <run fontalignment='0' fontsize='10'> as an example, you can see that people who have a greater perceived &quot;</run>
            <run fontalignment='0' fontsize='10' italic='true'>Freedom of Choosing Life&apos;s Option</run>
            <run fontalignment='0' fontsize='10'>&quot; correlates to an increased </run>
            <run fontalignment='0' fontsize='10' italic='true'>Happiness</run>
            <run fontalignment='0' fontsize='10'>.  The exception is, </run>
            <run bold='true' fontalignment='0' fontcolor='#499894' fontsize='10'>Personal Generosity</run>
            <run fontalignment='0' fontsize='10'>.  There appears to be no correlation that exists there.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='3734' hidden='true' id='18' story-point-id='9' w='45177' x='18307' y='28320'>
          <formatted-text>
            <run fontsize='10'>Scroll to the right (at the bottom of this graph) to see more...</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='3734' hidden='true' id='19' story-point-id='10' w='44291' x='18406' y='33921'>
          <formatted-text>
            <run fontsize='10'>Scroll to the right (at the bottom of this graph) to see more...</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='3734' hidden='true' id='20' story-point-id='11' w='52264' x='17520' y='27697'>
          <formatted-text>
            <run bold='true' fontsize='10'>Zoom in or out and click a country</run>
            <run fontsize='10'> to see individual measurements below.  </run>
            <run>Æ&#10;</run>
            <run fontsize='10'>Double-click in white space on map click to see them all.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='9232' hidden='true' id='21' story-point-id='14' w='33268' x='11122' y='45228'>
          <formatted-text>
            <run fontsize='10' italic='true'>The thicker the bar, the more freedom a country perceives to make life&apos;s choices.  </run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='7261' hidden='true' id='22' story-point-id='14' w='59843' x='13878' y='28734'>
          <formatted-text>
            <run bold='true'>Human Rights Protection Measurement for the</run>
            <run>Æ&#10;</run>
            <run bold='true'>3 Happiest and 3 Saddest Countries</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='12552' hidden='true' id='23' story-point-id='3' w='33268' x='62992' y='53216'>
          <formatted-text>
            <run bold='true' fontsize='12'>Hover your mouse </run>
            <run fontsize='12'>on each bar to see &quot;Happiness Score&quot;.  Countries are ranked on happiest to least happy.  There is more... scroll to the bottom to see the least happy countries.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{FE689781-D84C-445B-AE8D-21D898142447}' />
    </dashboard>
    <dashboard name='Story-WorldHappiness' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontsize='16'>World Happiness - A Story</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#00000000' />
        </style-rule>
        <style-rule element='story-description'>
          <format attr='font-style' id='story-description_10' value='normal' />
          <format attr='font-weight' id='story-description_10' value='normal' />
          <format attr='text-decoration' id='story-description_10' value='none' />
          <format attr='font-style' id='story-description_11' value='normal' />
          <format attr='font-weight' id='story-description_11' value='normal' />
          <format attr='text-decoration' id='story-description_11' value='none' />
          <format attr='background-color' value='#fefaf1d9' />
          <format attr='border-width' id='story-description_6' value='2' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='367' />
          <format attr='font-weight' value='bold' />
          <format attr='font-size' value='10' />
          <format attr='color' value='#000000' />
          <format attr='background-color' value='#ffbe7d' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='25' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='3838' id='26' w='98426' x='787' y='830'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='94502' id='11' param='vert' removable='false' w='98426' x='787' y='4668'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='94502' id='9' param='vert' removable='false' w='98426' x='787' y='4668'>
                <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='94502' id='1' param='vert' removable='false' w='98426' x='787' y='4668'>
                  <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' fixed-size='197' h='20436' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='4668' />
                  <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='74066' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='25104'>
                    <flipboard active-id='8' nav-type='caption' show-nav-arrows='true'>
                      <story-points>
                        <story-point caption='1.  World Makes the World Happy?' captured-sheet='Intro' id='1' />
                        <story-point caption='2.  Each country has an overall &quot;happy score&quot; according to a gallup poll survey.  ' captured-sheet='All Countries Happy Order' id='3'>
                          <capturedDeltas>
                            <worksheet name='All Countries Happy Order'>
                              <selection-collection />
                            </worksheet>
                          </capturedDeltas>
                        </story-point>
                        <story-point caption='3.  Happy countries tend to &quot;perceive&quot; they  have government  corruption - which is noted by the size of the &quot;circle&quot;.   In other words, typically a country that perceives that there more or less government corruption doesn&apos;t seem to affect life happiness.' captured-sheet='Perception vs. Happiness' id='4'>
                          <capturedDeltas>
                            <worksheet name='Perception vs. Happiness'>
                              <style delta-type='added'>
                                <style-rule element='axis'>
                                  <encoding attr='space' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[Latitude (generated)]' field-type='quantitative' max='22658413.496554665' min='-23619269.709537968' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                                  <encoding attr='space' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[Longitude (generated)]' field-type='quantitative' max='24377201.83972631' min='-30266316.896020565' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                                </style-rule>
                              </style>
                            </worksheet>
                          </capturedDeltas>
                        </story-point>
                        <story-point caption='4.  People appear to get happier when Human Rights are protected.  However, PERCEPTION of corruption doesn&apos;t decrease the happiness score and has no relation at all.' captured-sheet='Correlation Happiness to Human Rights and Corrupt.' id='5'>
                          <capturedDeltas>
                            <worksheet name='Correlation Happiness to Human Rights and Corrupt.'>
                              <annotations>
                                <annotation class='area' delta-type='edited' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
                                  <formatted-text>
                                    <run bold='true' fontalignment='0' underline='true'>Take notice to the scale</run>
                                    <run fontalignment='0'>:   As </run>
                                    <run bold='true' fontalignment='0' fontcolor='#f28e2b'>Perception of Government Corruption</run>
                                    <run fontalignment='0'> increases so does the </run>
                                    <run bold='true' fontalignment='0' fontcolor='#1b1b1b'>Happiness Score</run>
                                    <run fontalignment='0'>.  One would believe that at increased perception of corruption would DECREASE the </run>
                                    <run bold='true' fontalignment='0'>Happiness Score</run>
                                    <run fontalignment='0'>. This shows that </run>
                                    <run bold='true' fontalignment='0' fontcolor='#f28e2b'>Perception of Government Corruption</run>
                                    <run bold='true' fontalignment='0' fontcolor='#e15759'>Æ </run>
                                    <run fontalignment='0'>doesn&apos;t decrease a person&apos;s happiness (</run>
                                    <run bold='true' fontalignment='0' fontcolor='#1b1b1b'>Happiness Score</run>
                                    <run fontalignment='0'>).</run>
                                  </formatted-text>
                                  <top-left>
                                    <visual-coordinate class='axis'>
                                      <x-coord axis-value='0.075383586964534455'>
                                        <node-reference>
                                          <axis>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]</axis>
                                        </node-reference>
                                      </x-coord>
                                      <y-coord axis-value='0.41473114234729258'>
                                        <node-reference>
                                          <axis>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]</axis>
                                        </node-reference>
                                      </y-coord>
                                      <page-reference />
                                    </visual-coordinate>
                                  </top-left>
                                  <bottom-right>
                                    <visual-coordinate class='axis'>
                                      <x-coord axis-value='5.7140758919117109'>
                                        <node-reference>
                                          <axis>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]</axis>
                                        </node-reference>
                                      </x-coord>
                                      <y-coord axis-value='0.14624729756457161'>
                                        <node-reference>
                                          <axis>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]</axis>
                                        </node-reference>
                                      </y-coord>
                                      <page-reference />
                                    </visual-coordinate>
                                  </bottom-right>
                                  <text x='0.5' y='0.5' />
                                </annotation>
                                <annotation class='area' delta-type='edited' id='3' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
                                  <formatted-text>
                                    <run fontalignment='0'>There is a correlation with the increase of </run>
                                    <run bold='true' fontalignment='0' fontcolor='#59a14f'>Human Rights Protection</run>
                                    <run fontalignment='0'> and </run>
                                    <run bold='true' fontalignment='0'>Happiness Score</run>
                                    <run fontalignment='0'>.  The Pearson&apos;s R value for this is:  0.575 which shows there is a mid-level correlation</run>
                                  </formatted-text>
                                  <top-left>
                                    <visual-coordinate class='axis'>
                                      <x-coord axis-value='0.15076717392906891'>
                                        <node-reference>
                                          <axis>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]</axis>
                                        </node-reference>
                                      </x-coord>
                                      <y-coord axis-value='4.7097129588636371'>
                                        <node-reference>
                                          <axis>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]</axis>
                                        </node-reference>
                                      </y-coord>
                                      <page-reference />
                                    </visual-coordinate>
                                  </top-left>
                                  <bottom-right>
                                    <visual-coordinate class='axis'>
                                      <x-coord axis-value='4.5682453700507883'>
                                        <node-reference>
                                          <axis>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]</axis>
                                        </node-reference>
                                      </x-coord>
                                      <y-coord axis-value='1.4103816835454546'>
                                        <node-reference>
                                          <axis>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]</axis>
                                        </node-reference>
                                      </y-coord>
                                      <page-reference />
                                    </visual-coordinate>
                                  </bottom-right>
                                  <text x='0.5' y='0.5' />
                                </annotation>
                              </annotations>
                            </worksheet>
                          </capturedDeltas>
                        </story-point>
                        <story-point caption='5.  Here are the 10 Happiest Countries according to the Happiness Score...' captured-sheet='Map 10 Happy Countries' id='6' />
                        <story-point caption='6.  And here are the 10 Saddest Countries (according to the lowest Happiness Score).  But what is affecting the happiness?' captured-sheet='Map 10 Sad Countries' id='7' />
                        <story-point caption='7.  This shows an overall relation of each happiness category and the effect it has on the happiness score.  All the categories appear to have some correlation to &quot;Happiness&quot;, however &quot;Personal Generosity&quot; appears to have no effect on happiness.' captured-sheet='Happiness Comparison' id='8' />
                        <story-point caption='8.  What do the measures look for the Top 10 Happy Countries?  If you click on the next slide, and then click back you can see how the scores change.' captured-sheet='(2)Happy Country Measurements ' id='9' />
                        <story-point caption='9.  This is the 10 Saddest Countries.  Most measures decrease to some degree or another, but especially &quot;Country Economic Health&quot; and &quot;Life Expectancy&quot;.  On a side note (and a sad note), it appears both those categories involve a future outlook of life ongoing.' captured-sheet='(2) Sad Country Measurements ' id='10' />
                        <story-point caption='10.  This is a map for the 10 happiest and 10 saddest countries.  And you can see how the measures change for each country as you click on them.  But which category shows the greatest effect on happiness?' captured-sheet='Happy Sad Dashboard' id='11'>
                          <capturedDeltas>
                            <worksheet name='Happy Country Measurements'>
                              <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[Action (Country)]'>
                                <groupfilter function='member' level='[Country]' member='&quot;Finland&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                              </filter>
                            </worksheet>
                            <worksheet name='Map Happy and Sad Countries'>
                              <style delta-type='added'>
                                <style-rule element='axis'>
                                  <encoding attr='space' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[Latitude (generated)]' field-type='quantitative' max='22261118.528061226' min='-2639071.9710358703' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                                  <encoding attr='space' class='0' field='[federated.1usmlui0eestho1g6nb130qrm10t].[Longitude (generated)]' field-type='quantitative' max='87822758.730817661' min='21934265.973442312' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                                </style-rule>
                              </style>
                              <selection-collection>
                                <tuple-selection>
                                  <tuple-reference>
                                    <tuple-descriptor>
                                      <pane-descriptor>
                                        <x-fields>
                                          <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Longitude (generated)]</field>
                                        </x-fields>
                                        <y-fields>
                                          <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Latitude (generated)]</field>
                                        </y-fields>
                                      </pane-descriptor>
                                      <columns>
                                        <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                                        <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Geometry (generated)]</field>
                                        <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Latitude (generated)]</field>
                                        <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Longitude (generated)]</field>
                                      </columns>
                                    </tuple-descriptor>
                                    <tuple>
                                      <value>&quot;Finland&quot;</value>
                                      <value>&quot;MULTIPOLYGON(((21.3204 60.8962,21.2261 60.8945,21.2302 60.9234,21.2862 60.9174,21.2986 60.9457,21.2904 60.9701,21.2574 60.9921,21.3046 61.0047,21.353 60.9617,21.4038 60.9641,21.3589 61.0144,21.3179 61.0383,21.2965 61.0807,21.311 61.0922,21.3547 61.0705,21.3965 61.061,21.4556 61.1023,21.4256 61.1335,21.4635 61.1546,21.4122 61.2142,21.4676 61.1961,21.5088 61.2017,21.4921 61.2636,21.5173 61.3175,21.5699 61.3438,21.5265 61.3556,21.5349 61.3951,21.4827 61.436,21.5627 61.4247,21.5974 61.4457,21.5358 61.4824,21.5616 61.5022,21.5197 61.5662,21.4859 61.5667,21.4976 61.602,21.5738 61.5749,21.6579 61.5573,21.6494 61.5896,21.6158 61.6034,21.5832 61.6569,21.529 61.6958,21.5488 61.7195,21.536 61.7505,21.4455 61.789,21.4561 61.807,21.4978 61.8048,21.4996 61.824,21.47 61.846,21.4714 61.8717,21.4382 61.9239,21.3746 61.9465,21.3622 61.9243,21.328 61.9716,21.2919 61.9992,21.3242 62.0864,21.3069 62.1444,21.3246 62.1606,21.36 62.14,21.3606 62.1864,21.3969 62.2026,21.3774 62.2312,21.3864 62.2694,21.3363 62.2651,21.3586 62.31,21.3557 62.3737,21.3153 62.3571,21.2857 62.3969,21.2483 62.3886,21.228 62.4026,21.2328 62.4469,21.1763 62.4187,21.1902 62.4684,21.1278 62.4764,21.1525 62.5328,21.1139 62.5233,21.103 62.5556,21.156 62.5364,21.1707 62.5469,21.1704 62.5845,21.2006 62.5945,21.1925 62.6251,21.1445 62.617,21.0824 62.6291,21.0818 62.6839,21.1764 62.7301,21.1461 62.7479,21.1262 62.7765,21.1472 62.8145,21.2095 62.806,21.2485 62.8456,21.268 62.8931,21.303 62.8914,21.3583 62.8741,21.3732 62.9025,21.4057 62.8991,21.4322 62.9283,21.4294 62.9501,21.4733 62.9835,21.4588 63.0177,21.4284 63.0092,21.3351 63.0353,21.4406 63.0582,21.4769 63.0771,21.4972 63.0615,21.5612 63.0809,21.5975 63.0567,21.6172 63.0605,21.6594 63.0433,21.6771 63.0663,21.6131 63.0832,21.5172 63.1684,21.5216 63.2301,21.5814 63.266,21.6019 63.2365,21.6807 63.213,21.7 63.2376,21.7241 63.2339,21.7961 63.2631,21.8643 63.2609,21.9152 63.2795,21.9501 63.2641,22.0146 63.2575,21.9961 63.2115,21.9715 63.2183,21.9681 63.1665,22.0008 63.1773,22.0313 63.2466,22.0971 63.2501,22.1779 63.2439,22.2567 63.2975,22.3071 63.3134,22.3378 63.2929,22.3856 63.3438,22.3445 63.3796,22.2972 63.3936,22.2346 63.4319,22.2044 63.4746,22.3058 63.4881,22.2902 63.5231,22.3333 63.5544,22.3404 63.5789,22.3709 63.5747,22.3804 63.537,22.4167 63.4851,22.4471 63.4925,22.4857 63.5412,22.4627 63.566,22.4627 63.6036,22.5186 63.6215,22.5166 63.6494,22.5532 63.6731,22.594 63.6663,22.6109 63.6864,22.6138 63.7227,22.6459 63.7044,22.695 63.6988,22.7215 63.7154,22.8269 63.6696,22.8418 63.6947,22.9015 63.6943,22.8691 63.7481,22.9354 63.7569,22.9254 63.7767,22.8775 63.805,22.8441 63.7899,22.7915 63.8061,22.7227 63.7882,22.6818 63.7995,22.6789 63.8176,22.7191 63.8465,22.8377 63.8563,22.8712 63.8296,22.881 63.8612,22.8525 63.8931,22.9 63.901,22.9598 63.8739,22.9701 63.8422,23.0187 63.8144,23.0186 63.8438,23.0646 63.874,23.0889 63.8796,23.1176 63.8577,23.1347 63.9187,23.1893 63.9134,23.2083 63.9017,23.2633 63.9172,23.2888 63.9097,23.307 63.9394,23.3444 63.9256,23.406 63.9396,23.3824 64.0278,23.3814 64.0595,23.4119 64.0855,23.4392 64.0824,23.4743 64.0572,23.5232 64.056,23.5586 64.042,23.6055 64.0442,23.6338 64.0714,23.6009 64.0939,23.6044 64.1266,23.6431 64.1176,23.6528 64.145,23.7129 64.18,23.7196 64.2192,23.8146 64.2383,23.8213 64.2738,23.85 64.2905,23.9125 64.2885,23.9171 64.3266,23.9869 64.3539,24.0017 64.393,24.0951 64.4155,24.0872 64.4338,24.1305 64.4548,24.1809 64.4595,24.261 64.526,24.3515 64.5337,24.3712 64.5456,24.3776 64.5967,24.4012 64.6621,24.4473 64.6745,24.4736 64.702,24.5521 64.7217,24.5568 64.7589,24.5801 64.7798,24.5425 64.8174,24.6074 64.8309,24.6704 64.8324,24.7195 64.8707,24.7924 64.8754,24.8131 64.8865,24.9249 64.8817,24.9567 64.907,25.1309 64.9176,25.1472 64.8996,25.1894 64.9022,25.2212 64.8704,25.2599 64.8737,25.2961 64.862,25.3159 64.8298,25.3897 64.8996,25.3356 64.905,25.2674 64.9327,25.2232 64.9439,25.1904 64.9804,25.2125 65.0049,25.3245 64.9905,25.421 64.9479,25.4808 64.9528,25.4823 64.9744,25.4334 64.9864,25.4601 65.0232,25.3904 65.0573,25.3658 65.1055,25.3516 65.101,25.298 65.1226,25.2304 65.126,25.2244 65.1614,25.2756 65.1756,25.2844 65.2371,25.306 65.2477,25.3135 65.2859,25.2736 65.3119,25.276 65.3386,25.2588 65.3675,25.2617 65.4092,25.2988 65.3999,25.3276 65.4098,25.3165 65.4864,25.2802 65.4896,25.25 65.5305,25.2112 65.5418,25.2091 65.5591,25.1501 65.5697,25.1273 65.5601,25.0835 65.5712,25.0755 65.6033,25.0498 65.6176,24.9286 65.6336,24.8741 65.6678,24.8029 65.6588,24.7565 65.6668,24.7055 65.629,24.6494 65.6802,24.5884 65.6862,24.6045 65.7096,24.5543 65.7409,24.4669 65.7463,24.4864 65.7782,24.4204 65.7705,24.3421 65.7917,24.2332 65.7964,24.2374 65.7717,24.1515 65.7549,24.1695 65.7852,24.1463 65.8396,24.1487 65.8675,24.0906 65.9311,24.042 65.9627,24.0507 65.9851,24.0359 66.0105,23.9383 66.0821,23.9443 66.1071,23.8945 66.167,23.8341 66.1701,23.7901 66.1856,23.7399 66.1925,23.728 66.2146,23.696 66.228,23.6506 66.3012,23.6616 66.3549,23.6895 66.3852,23.6445 66.4257,23.6544 66.4587,23.7204 66.4775,23.7303 66.5064,23.7976 66.5197,23.7931 66.5381,23.8629 66.561,23.8835 66.613,23.8649 66.6533,23.8895 66.672,23.8988 66.7224,23.8874 66.7667,23.9128 66.794,23.9818 66.7858,23.9952 66.8222,23.9334 66.8843,23.8655 66.9185,23.8565 66.9552,23.828 66.9611,23.7952 66.9928,23.7354 67.0197,23.6639 67.0776,23.6554 67.1024,23.5546 67.1665,23.5879 67.1905,23.5641 67.2226,23.5771 67.2687,23.73 67.2867,23.7495 67.3205,23.7409 67.357,23.7183 67.3884,23.752 67.4074,23.7583 67.4338,23.712 67.4452,23.6819 67.4423,23.5506 67.4608,23.5087 67.4461,23.4068 67.4698,23.4047 67.5007,23.4766 67.5313,23.4713 67.5658,23.511 67.5639,23.5443 67.5821,23.5403 67.6316,23.4911 67.6667,23.4777 67.7161,23.4926 67.7549,23.494 67.7917,23.4745 67.8148,23.4785 67.8428,23.5199 67.8851,23.643 67.9158,23.662 67.9433,23.6367 67.9661,23.5729 67.9729,23.5363 68.0048,23.4708 68.0191,23.4472 68.0364,23.3978 68.0439,23.3374 68.1001,23.3193 68.1373,23.2787 68.1568,23.1697 68.1332,23.1392 68.1546,23.148 68.1903,23.1456 68.2463,23.1137 68.2511,23.0648 68.2788,23.0685 68.3001,22.9843 68.3211,22.973 68.3321,22.9155 68.3342,22.8424 68.3622,22.8462 68.3825,22.8025 68.3934,22.7375 68.3849,22.6894 68.3992,22.6435 68.4319,22.5721 68.4221,22.5581 68.4332,22.4651 68.4422,22.4338 68.4647,22.4028 68.4659,22.3555 68.4454,22.3426 68.4692,22.3011 68.4837,22.2061 68.4798,22.1546 68.47,22.0747 68.4821,22.0472 68.4789,22.0124 68.5023,21.9932 68.5335,21.8866 68.585,21.8434 68.5907,21.7759 68.585,21.7009 68.5981,21.6975 68.6323,21.6237 68.6626,21.5579 68.6755,21.51 68.6757,21.4207 68.6957,21.4208 68.7144,21.3919 68.7644,21.2985 68.7626,21.2391 68.8124,21.1456 68.8403,21.0749 68.8721,20.9959 68.8965,20.9037 68.899,20.8812 68.9178,20.9126 68.9621,20.8772 68.9862,20.8426 68.9928,20.7746 69.0331,20.7071 69.0435,20.6334 69.0454,20.5471 69.0599,20.7189 69.1202,21.057 69.0367,21.111 69.1051,21.0583 69.122,21.0481 69.1401,20.9883 69.1907,21.0078 69.2231,21.0981 69.2604,21.2836 69.311,21.6299 69.2765,21.7913 69.1766,21.9956 69.0663,22.1737 68.955,22.1921 68.9186,22.3424 68.8264,22.3759 68.7169,22.5419 68.743,22.8059 68.6871,23.0471 68.6896,23.17 68.6289,23.4408 68.6928,23.677 68.7075,23.7368 68.7589,23.783 68.8207,23.8775 68.836,23.9861 68.8266,24.0783 68.7797,24.16 68.7877,24.1567 68.7529,24.2104 68.7444,24.252 68.7272,24.3077 68.7165,24.5988 68.6837,24.7818 68.6392,24.8543 68.5675,24.9112 68.5554,24.9207 68.6057,24.9631 68.6179,24.9883 68.6129,25.0495 68.6272,25.0704 68.6196,25.1138 68.6376,25.109 68.678,25.1224 68.7457,25.1594 68.7997,25.1985 68.8095,25.2446 68.8416,25.3272 68.866,25.4769 68.9045,25.5381 68.8872,25.5895 68.8834,25.6295 68.8928,25.7144 68.9667,25.7236 68.9888,25.7771 69.0132,25.7555 69.0566,25.7355 69.0706,25.722 69.1105,25.7452 69.1374,25.7095 69.1873,25.703 69.2299,25.749 69.2868,25.7436 69.3189,25.7858 69.3554,25.8204 69.361,25.8339 69.4063,25.8085 69.4343,25.8361 69.4674,25.8832 69.5552,25.9524 69.5808,25.9767 69.6129,25.9513 69.6499,25.8983 69.659,26 69.721,26.0557 69.7214,26.125 69.7331,26.1531 69.755,26.2158 69.7796,26.244 69.8157,26.3304 69.8354,26.3889 69.856,26.4184 69.8814,26.4136 69.9031,26.4576 69.92,26.4656 69.9388,26.6803 69.965,26.7157 69.9456,26.7704 69.9559,26.8445 69.9603,26.8804 69.9335,26.962 69.9397,27.0328 69.9114,27.0983 69.9171,27.1288 69.9307,27.2431 69.9489,27.2973 69.9532,27.2807 69.9795,27.351 69.9894,27.4175 70.0158,27.5313 70.0237,27.5592 70.059,27.6236 70.0754,27.6939 70.0771,27.7523 70.0642,27.7953 70.0761,27.9626 70.0922,27.9824 70.0544,27.9885 70.0139,28.1643 69.9197,28.3486 69.8805,28.3339 69.8477,28.4089 69.8182,29.0373 69.7114,29.1386 69.6971,29.1674 69.6516,29.3355 69.4786,29.2137 69.3895,28.8389 69.2283,28.8311 69.1607,28.8099 69.1097,28.8585 69.0756,28.9338 69.051,28.5032 68.9312,28.4202 68.9147,28.4724 68.8846,28.6652 68.8859,28.8022 68.8696,28.704 68.7283,28.523 68.6041,28.437 68.5383,28.4778 68.4668,28.6487 68.1958,29.3256 68.075,29.6599 67.8025,30.0168 67.6728,29.93 67.5231,29.8472 67.4849,29.7167 67.3932,29.6552 67.3688,29.6386 67.3361,29.5841 67.3306,29.5754 67.3137,29.5241 67.3107,29.5168 67.2809,29.3823 67.1909,29.2088 67.0915,29.072 66.9951,29.0397 66.9624,29.0312 66.9266,29.0588 66.8541,29.1325 66.7873,29.1519 66.7784,29.3593 66.6365,29.3831 66.5987,29.4633 66.5493,29.4972 66.5179,29.6309 66.3652,29.6962 66.277,29.9229 66.1266,29.9988 65.9984,30.0784 65.8715,30.1362 65.7007,30.1408 65.6691,30.0329 65.6891,30.0185 65.6962,29.7228 65.637,29.7535 65.6096,29.8638 65.5601,29.7974 65.5257,29.7322 65.4718,29.7301 65.3752,29.7449 65.3475,29.6015 65.2602,29.6339 65.2315,29.7639 65.2284,29.8569 65.2146,29.8926 65.192,29.8181 65.1434,29.8964 65.1049,29.8289 65.092,29.7324 65.0912,29.6257 65.0606,29.614 65.0132,29.5986 64.9942,29.6175 64.9596,29.6103 64.9264,29.6436 64.8658,29.6986 64.8369,29.6891 64.8171,29.7401 64.789,29.8697 64.7896,29.8977 64.7932,30.042 64.7925,30.0839 64.7638,30.0403 64.7403,30.0525 64.7128,30.1349 64.6492,30.118 64.6251,30.0533 64.6145,29.9981 64.577,29.9866 64.533,30.0232 64.4829,30.0576 64.4506,30.0438 64.4024,30.1107 64.3651,30.2124 64.35,30.2863 64.3296,30.3669 64.2995,30.3887 64.269,30.4833 64.2623,30.5105 64.2213,30.4679 64.2041,30.513 64.1571,30.5524 64.1324,30.5522 64.101,30.5271 64.049,30.4465 63.9826,30.3539 63.9325,30.3208 63.9093,30.2607 63.8222,30.139 63.798,29.9782 63.7605,30.0589 63.7115,30.0772 63.694,30.2444 63.6073,30.2555 63.5856,30.3844 63.5457,30.4832 63.4674,30.6931 63.4223,30.7884 63.4059,30.878 63.3624,30.9343 63.3555,30.9783 63.3091,31.0204 63.3035,31.1271 63.2685,31.184 63.2355,31.2407 63.2175,31.2547 63.1792,31.265 63.1162,31.2945 63.0936,31.3609 63.0725,31.388 63.0492,31.4256 63.0432,31.5029 62.9958,31.5879 62.9088,31.4386 62.7845,31.3798 62.689,31.3744 62.6504,31.3458 62.6402,31.2455 62.5223,31.2212 62.4987,31.185 62.4937,31.1621 62.4464,31.1336 62.4404,30.9437 62.3335,30.9437 62.3059,30.9056 62.3104,30.8341 62.2753,30.721 62.2085,30.6572 62.2085,30.6023 62.1415,30.4225 62.022,30.3393 61.9732,30.3139 61.9447,30.2742 61.9333,30.1559 61.8582,30.0762 61.8185,30.0465 61.7713,29.8171 61.6552,29.8035 61.6339,29.7556 61.6034,29.7413 61.5754,29.6871 61.5511,29.6454 61.5202,29.5987 61.4978,29.4979 61.4924,29.5033 61.4612,29.3244 61.3483,29.2436 61.2704,29.1631 61.2372,28.9828 61.1731,28.957 61.1517,28.8189 61.1215,28.8085 61.0969,28.7137 61.0456,28.6842 60.9795,28.6582 60.9511,28.5249 60.9568,28.3357 60.8546,28.2573 60.8096,28.2215 60.783,28.1745 60.7782,28.136 60.7401,28.015 60.6825,27.8738 60.6051,27.843 60.5658,27.7958 60.5455,27.7643 60.5818,27.718 60.5635,27.712 60.5146,27.6784 60.4844,27.6281 60.492,27.5801 60.4738,27.4917 60.5098,27.4682 60.4798,27.4265 60.4651,27.4063 60.4847,27.3351 60.5143,27.2794 60.5069,27.2555 60.5245,27.1978 60.5149,27.2037 60.5357,27.1802 60.5625,27.1586 60.5174,27.0961 60.545,27.0907 60.5311,26.9911 60.509,26.9206 60.465,26.9084 60.4773,26.8507 60.4775,26.7904 60.4554,26.7366 60.4755,26.7039 60.4316,26.6526 60.432,26.638 60.4556,26.5788 60.4589,26.5563 60.4325,26.5323 60.4524,26.5017 60.4543,26.4577 60.4887,26.4424 60.4629,26.4621 60.4336,26.4467 60.3868,26.3676 60.4092,26.3105 60.3761,26.2804 60.4241,26.249 60.3974,26.2109 60.3879,26.2018 60.3639,26.167 60.3702,26.1354 60.3958,26.068 60.434,26.0387 60.4201,26.0155 60.3871,26.043 60.3799,26.0728 60.347,26.1007 60.348,26.1019 60.3163,26.0495 60.3031,26.0187 60.3369,25.9129 60.3672,25.9145 60.3423,25.8704 60.3304,25.9048 60.2733,25.8876 60.2441,25.8502 60.2745,25.7953 60.2397,25.7549 60.247,25.7089 60.2779,25.6711 60.276,25.6357 60.3304,25.5775 60.3114,25.5131 60.2723,25.5007 60.2511,25.4349 60.2225,25.3774 60.2542,25.3358 60.2619,25.2148 60.2464,25.186 60.2335,25.1873 60.2008,25.1358 60.1948,25.0657 60.1982,25.0628 60.173,24.9791 60.202,24.9542 60.1648,24.9034 60.1518,24.9028 60.1872,24.8305 60.2054,24.8444 60.1651,24.7519 60.1446,24.7402 60.1172,24.7118 60.1064,24.6652 60.1207,24.6514 60.1007,24.5703 60.0596,24.5501 60.0293,24.5175 60.0068,24.4564 59.9834,24.4112 59.9771,24.4235 60.0163,24.3523 60.0085,24.3197 60.013,24.3743 60.0634,24.3765 60.0838,24.3077 60.0853,24.2997 60.0551,24.2748 60.0386,24.1927 60.0602,24.2044 60.0322,24.167 60.025,24.1352 60.0371,24.0934 60.0212,24.0029 60.0327,23.9209 59.9973,23.856 60.0024,23.8078 59.9677,23.746 59.9576,23.6804 59.9759,23.649 59.9407,23.5422 59.9374,23.4533 59.9188,23.3554 59.9168,23.3616 59.9316,23.4212 59.9554,23.4794 60.0121,23.4914 60.033,23.5407 60.0412,23.5151 60.0862,23.4511 59.9977,23.3953 59.9694,23.3789 59.9404,23.3128 59.9209,23.3022 59.9102,23.2223 59.8903,23.2282 59.8453,23.1862 59.8312,23.1249 59.827,22.9895 59.8267,22.9814 59.8462,23.0644 59.8894,23.1554 59.8867,23.1704 59.9185,23.1568 59.9664,23.1186 59.9375,23.0974 59.9563,23.1187 60.0016,23.0645 59.9885,23.0628 59.9184,23.0274 59.9167,22.9754 59.9522,22.9596 59.9208,22.8879 59.9158,22.8646 59.9328,22.8565 59.9606,22.8149 59.9796,22.8198 60.0203,22.8533 59.9893,22.8794 59.9826,22.9559 59.9902,22.9763 59.9714,23.0148 59.991,22.9895 60.0386,22.9853 60.075,22.9951 60.1111,22.9669 60.1336,22.8994 60.143,22.8718 60.2005,22.9494 60.2497,22.9482 60.2662,23.006 60.2879,23.032 60.3117,23.0297 60.3335,22.8786 60.306,22.8642 60.2893,22.7887 60.2569,22.6264 60.2361,22.5729 60.2165,22.5331 60.2671,22.4961 60.2528,22.4709 60.2834,22.5517 60.3342,22.5754 60.3771,22.5584 60.3841,22.4931 60.3823,22.4706 60.3916,22.3473 60.3651,22.3075 60.3741,22.2292 60.4322,22.1891 60.4435,22.1386 60.4399,22.021 60.4617,22.0215 60.4916,21.9893 60.4886,21.9539 60.5356,21.918 60.527,21.9015 60.5508,21.8751 60.5152,21.7821 60.4929,21.8226 60.5448,21.8141 60.5786,21.8442 60.6229,21.8047 60.6255,21.7707 60.5992,21.6827 60.5881,21.6795 60.546,21.6581 60.5179,21.5866 60.4914,21.5979 60.5344,21.555 60.5627,21.5426 60.5304,21.5093 60.5767,21.4649 60.5811,21.4311 60.6015,21.4354 60.6283,21.3838 60.6619,21.3408 60.7158,21.4264 60.7195,21.4349 60.7581,21.3851 60.7783,21.3953 60.8212,21.3504 60.8212,21.361 60.8609,21.3204 60.8962)),((27.038 60.4547,27.0336 60.4107,27.0046 60.4171,27.0077 60.451,27.038 60.4547)),((26.8788 60.4689,26.9154 60.457,26.9064 60.4171,26.8425 60.4478,26.8788 60.4689)),((26.577 60.4472,26.637 60.4343,26.6555 60.4154,26.5624 60.405,26.577 60.4472)),((26.1125 60.3114,26.1346 60.2759,26.0697 60.2891,26.1125 60.3114)),((25.9488 60.3524,25.9998 60.3366,26.0083 60.3237,26.0047 60.2676,25.945 60.2715,25.9346 60.3044,25.955 60.3194,25.9488 60.3524)),((25.871 60.2284,25.8668 60.2063,25.8224 60.1947,25.8249 60.2303,25.871 60.2284)),((25.6064 60.3111,25.6176 60.2823,25.6569 60.2603,25.6615 60.2277,25.6113 60.2133,25.5692 60.2755,25.5779 60.3068,25.6064 60.3111)),((24.8439 65.0944,24.8815 65.0857,24.8994 65.0643,25.0446 65.055,25.0237 65.032,24.9216 65.0333,24.8989 65.0475,24.8347 65.0551,24.8023 65.0134,24.7732 65.014,24.7527 64.984,24.8315 64.9938,24.8681 64.9862,24.8785 64.9677,24.8228 64.9497,24.7751 64.9433,24.7388 64.959,24.653 64.9598,24.6168 64.9876,24.5782 65.0023,24.5765 65.0434,24.5929 65.0613,24.6439 65.0821,24.7778 65.0853,24.8439 65.0944)),((23.8602 59.9939,23.9569 59.9851,23.9222 59.9477,23.8398 59.9428,23.8384 59.9766,23.8602 59.9939)),((23.5249 59.9282,23.551 59.8918,23.4913 59.8887,23.4186 59.8955,23.3945 59.913,23.5055 59.9179,23.5249 59.9282)),((22.4954 60.0164,22.4323 60.0192,22.3936 60.0008,22.3628 60.062,22.365 60.0896,22.3911 60.0929,22.4326 60.1344,22.4143 60.1815,22.4605 60.2029,22.4656 60.2373,22.4981 60.2141,22.5425 60.2058,22.6062 60.228,22.6986 60.2357,22.8435 60.2377,22.8659 60.2477,22.8793 60.2794,22.9004 60.2802,22.9227 60.3102,22.9734 60.3155,22.9844 60.3007,22.9422 60.2657,22.8682 60.2161,22.8541 60.1975,22.8585 60.1283,22.8345 60.0924,22.7772 60.0789,22.7626 60.0117,22.6859 60.0141,22.6765 60.0453,22.6274 60.0189,22.5996 60.0392,22.4954 60.0164)),((22.9323 60.1246,22.9578 60.1219,22.9697 60.0909,22.8988 60.0778,22.858 60.0993,22.8882 60.1189,22.9323 60.1246)),((22.9571 60.0522,22.9586 60.0196,22.9286 60.0103,22.9216 60.0376,22.9571 60.0522)),((22.7647 63.7952,22.7907 63.7808,22.8269 63.7834,22.8064 63.7393,22.7829 63.7451,22.7642 63.7175,22.7185 63.7242,22.6969 63.7497,22.7174 63.7821,22.7647 63.7952)),((22.6468 63.8348,22.675 63.8044,22.6674 63.7627,22.6372 63.8031,22.6051 63.8015,22.622 63.7631,22.5821 63.7637,22.6044 63.7944,22.5996 63.8183,22.6176 63.8097,22.6468 63.8348)),((22.6161 59.9907,22.6562 59.9525,22.6342 59.9371,22.5979 59.9519,22.6161 59.9907)),((22.5234 59.9879,22.5573 59.9829,22.5758 59.961,22.5254 59.9536,22.5234 59.9879)),((22.5353 60.3794,22.4968 60.3571,22.4572 60.3516,22.4554 60.3741,22.5353 60.3794)),((22.5301 59.8996,22.5051 59.8664,22.4123 59.8476,22.4144 59.8653,22.4676 59.8693,22.4933 59.8941,22.5301 59.8996)),((22.4253 60.3728,22.4088 60.3589,22.4965 60.3311,22.4498 60.3065,22.3848 60.3006,22.3728 60.3187,22.3059 60.3277,22.3189 60.3505,22.391 60.371,22.4253 60.3728)),((22.4725 60.3092,22.4244 60.2689,22.4218 60.2496,22.3281 60.2384,22.3109 60.2664,22.3607 60.2799,22.3833 60.2996,22.4388 60.3023,22.4725 60.3092)),((22.3906 60.2074,22.3378 60.1478,22.2995 60.1513,22.2952 60.1833,22.338 60.2034,22.3906 60.2074)),((22.2377 60.2522,22.2905 60.272,22.3273 60.2372,22.2724 60.1979,22.1931 60.1941,22.1697 60.2344,22.1444 60.2363,22.0892 60.2997,22.1142 60.3189,22.1896 60.3333,22.2553 60.3326,22.2914 60.3154,22.3232 60.3251,22.3483 60.2969,22.3032 60.2888,22.2377 60.2522)),((22.2248 60.3827,22.2743 60.3798,22.286 60.3542,22.1773 60.3409,22.1153 60.3607,22.1214 60.3801,22.2248 60.3827)),((22.2231 60.4318,22.279 60.3908,22.1728 60.3851,22.1526 60.4126,22.2231 60.4318)),((22.0141 63.3923,22.0453 63.394,22.1006 63.3806,22.0569 63.3544,22.0385 63.3281,22.0592 63.3113,22.1055 63.3357,22.2119 63.3206,22.2393 63.2935,22.2056 63.2731,22.1654 63.2839,22.1573 63.2551,22.079 63.2657,22.0803 63.2785,21.9695 63.2907,21.9947 63.3282,21.9485 63.3419,21.9652 63.3643,22.0141 63.3923)),((22.082 60.2217,22.067 60.1642,22.029 60.1496,21.9676 60.1478,21.9527 60.185,21.9709 60.1987,22.0183 60.1977,22.0503 60.2176,22.082 60.2217)),((21.9513 60.4798,22.0736 60.441,22.0671 60.4261,21.9923 60.4226,21.9384 60.4484,21.9513 60.4798)),((21.8391 60.4913,21.8958 60.4786,21.9384 60.4346,21.9548 60.4307,21.9864 60.3872,22.033 60.3752,22.0283 60.3586,21.986 60.3411,21.9179 60.3459,21.8754 60.3665,21.8045 60.3859,21.7937 60.4021,21.797 60.4641,21.8391 60.4913)),((21.9733 60.2869,21.9585 60.2769,21.9044 60.2799,21.8861 60.3027,21.9532 60.3139,21.9733 60.2869)),((21.8686 60.2216,21.9311 60.1812,21.8633 60.1673,21.7926 60.1228,21.7139 60.1434,21.7273 60.202,21.7714 60.2129,21.8686 60.2216)),((21.7593 60.5556,21.7929 60.5498,21.7999 60.5294,21.7699 60.5044,21.7325 60.4918,21.7264 60.4642,21.6925 60.4753,21.7593 60.5556)),((21.7005 63.3373,21.7154 63.318,21.7494 63.3115,21.7867 63.2827,21.7427 63.2743,21.6821 63.2976,21.6671 63.2568,21.637 63.2603,21.6297 63.3025,21.7005 63.3373)),((21.6063 60.1865,21.6924 60.177,21.667 60.1469,21.67 60.1191,21.5818 60.1086,21.5153 60.1115,21.5128 60.156,21.5688 60.1839,21.6063 60.1865)),((21.6376 60.4548,21.6446 60.4263,21.6035 60.4051,21.6043 60.4376,21.6376 60.4548)),((21.5963 60.275,21.6391 60.2557,21.5653 60.2162,21.5547 60.224,21.5963 60.275)),((21.4794 60.5371,21.5078 60.5257,21.4982 60.4927,21.469 60.4778,21.4332 60.4848,21.4074 60.506,21.3324 60.5441,21.3231 60.5799,21.2789 60.6009,21.2228 60.6122,21.2387 60.6499,21.2876 60.6619,21.3462 60.6349,21.3695 60.5952,21.4724 60.5587,21.4794 60.5371)),((21.3838 60.2317,21.4069 60.2083,21.4692 60.2107,21.4387 60.1879,21.3277 60.1872,21.3179 60.2326,21.3838 60.2317)),((21.4474 60.2418,21.4662 60.2157,21.4054 60.2116,21.4081 60.2279,21.4474 60.2418)),((21.2508 63.3977,21.2247 63.3246,21.2579 63.3194,21.2471 63.2862,21.218 63.2445,21.3123 63.2557,21.347 63.272,21.3964 63.2745,21.4201 63.2989,21.4535 63.2433,21.4382 63.205,21.3742 63.1856,21.3618 63.2032,21.3268 63.1836,21.3261 63.1581,21.2725 63.1573,21.2314 63.1697,21.2212 63.1856,21.1658 63.1851,21.1394 63.2116,21.1322 63.2444,21.0826 63.2736,21.1077 63.3043,21.1525 63.3385,21.1921 63.3556,21.2025 63.3894,21.2508 63.3977)),((21.3997 60.7572,21.4241 60.7232,21.366 60.7211,21.3997 60.7572)),((21.3323 63.3733,21.3917 63.3712,21.4193 63.3505,21.3517 63.2891,21.2536 63.3516,21.3323 63.3733)),((21.405 62.9663,21.4188 62.9326,21.3569 62.9327,21.3828 62.9683,21.405 62.9663)),((21.3751 61.2187,21.3973 61.2083,21.4035 61.1796,21.3546 61.1736,21.3339 61.1939,21.3751 61.2187)),((21.241 60.5869,21.2977 60.5632,21.323 60.5386,21.3187 60.5182,21.357 60.4928,21.283 60.4908,21.2617 60.5101,21.241 60.5869)),((21.2078 60.8937,21.2376 60.8757,21.25 60.8479,21.3458 60.8242,21.2706 60.8028,21.241 60.8057,21.2302 60.8397,21.1794 60.8596,21.1801 60.8894,21.2078 60.8937)),((21.1545 63.0093,21.2126 62.9885,21.2231 62.948,21.1657 62.9423,21.1206 63.001,21.1545 63.0093)),((21.1715 62.871,21.2187 62.8585,21.1997 62.8342,21.1218 62.8279,21.1117 62.8656,21.1715 62.871)),((21.0536 60.5049,21.1003 60.4834,21.0883 60.447,21.0537 60.4645,21.0536 60.5049)),((21.0658 62.7435,21.0966 62.7211,21.0586 62.7071,21.0658 62.7435)),((21.0626 62.5794,21.0938 62.5611,21.0709 62.5304,21.0531 62.5538,21.0626 62.5794)),((20.9405 59.9624,20.9875 59.9519,20.9971 59.9219,20.9288 59.9364,20.9405 59.9624)),((20.9467 60.4914,20.9467 60.435,20.9262 60.442,20.9467 60.4914)),((20.9163 59.9262,20.9109 59.9018,20.86 59.9205,20.8734 59.9473,20.9038 59.9455,20.9163 59.9262)),((20.7836 60.2884,20.8216 60.2727,20.8074 60.2247,20.7681 60.232,20.7336 60.2675,20.7836 60.2884)),((20.7601 60.3676,20.7955 60.3534,20.7809 60.3282,20.7447 60.3135,20.7331 60.3369,20.7601 60.3676)),((20.6791 60.2372,20.7183 60.2019,20.6783 60.1908,20.6585 60.209,20.6791 60.2372)),((20.6582 60.1533,20.6912 60.1261,20.6677 60.1107,20.6353 60.1333,20.6582 60.1533)),((20.5803 60.0604,20.6003 60.0196,20.5376 60.0053,20.5039 60.0094,20.5518 60.0623,20.5803 60.0604)),((20.5368 60.0657,20.5216 60.043,20.475 60.0302,20.4815 60.0604,20.5368 60.0657)),((20.455 60.0673,20.4418 60.0242,20.3778 60.0213,20.4176 60.0557,20.455 60.0673)),((20.3584 60.0192,20.431 60.0151,20.4224 59.9953,20.3847 59.9789,20.3539 59.99,20.3584 60.0192)),((20.3371 60.2929,20.3808 60.2755,20.4301 60.2438,20.3938 60.203,20.3698 60.1975,20.3603 60.2314,20.3343 60.2304,20.3229 60.2556,20.3371 60.2929)),((20.2389 60.1663,20.2956 60.1494,20.2727 60.0797,20.2266 60.0745,20.221 60.1509,20.2389 60.1663)),((19.9425 60.0713,19.8796 60.1005,19.8147 60.0918,19.7919 60.1072,19.7695 60.0908,19.7326 60.1154,19.7005 60.1695,19.6957 60.2136,19.6583 60.2498,19.6493 60.3047,19.6973 60.2914,19.7306 60.2981,19.7565 60.3379,19.7927 60.3272,19.7995 60.3098,19.7662 60.2644,19.8069 60.2297,19.8574 60.2518,19.8694 60.2875,19.8521 60.3218,19.805 60.3283,19.7761 60.3616,19.7959 60.3987,19.8724 60.4273,19.9131 60.4236,19.9638 60.3941,19.9361 60.3643,20.0118 60.3758,20.1189 60.3692,20.1442 60.353,20.1909 60.3462,20.2302 60.2974,20.2571 60.2862,20.2381 60.2402,20.2407 60.2085,20.205 60.2046,20.166 60.1753,20.1244 60.1892,20.0801 60.1851,20.0432 60.201,20.0236 60.2698,20.0011 60.2425,20.0103 60.1892,20.0445 60.1908,20.0354 60.1292,20.0729 60.0841,20.0845 60.109,20.1337 60.0903,20.1603 60.096,20.2257 60.0775,20.2058 60.0287,20.1552 60.0006,20.1157 59.9996,20.1166 60.0235,20.0873 60.0496,20.0425 60.0371,20.0209 60.0645,19.9876 60.0768,19.9781 60.1174,19.9458 60.1116,19.9425 60.0713)),((19.8339 60.3194,19.8489 60.2996,19.8259 60.2714,19.8034 60.2988,19.8339 60.3194)),((19.6042 60.3139,19.6137 60.2854,19.6406 60.2698,19.6524 60.2315,19.674 60.2272,19.6784 60.1964,19.6145 60.1815,19.5763 60.1436,19.542 60.1485,19.5182 60.2106,19.5339 60.2575,19.5877 60.2768,19.6042 60.3139)))&quot;</value>
                                      <value>62.716</value>
                                      <value>26.192</value>
                                    </tuple>
                                  </tuple-reference>
                                </tuple-selection>
                              </selection-collection>
                            </worksheet>
                            <worksheet name='Sad Country Measurements '>
                              <filter class='categorical' column='[federated.1usmlui0eestho1g6nb130qrm10t].[Action (Country)]'>
                                <groupfilter function='member' level='[Country]' member='&quot;Finland&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                              </filter>
                            </worksheet>
                          </capturedDeltas>
                        </story-point>
                        <story-point caption='11.  To find the category with the greatest effect on happiness, I looked at the happiest country, and the saddest country.  I noticed a drastic difference with  four categories:  &quot;Country Economic Growth&quot;, &quot;Family-Friend Support&quot;,  &quot;Human Rights Protection&quot;, and &quot;Life Expectancy&quot;.' captured-sheet='FIRST Happiest and Saddest World Happiness Comparison' id='12' />
                        <story-point caption='12.  This was consistent with the second happiest country and the second saddest country.' captured-sheet='Second Happiest and Saddest World Happiness Comparison' id='13'>
                          <capturedDeltas>
                            <worksheet name='Second Happiest and Saddest World Happiness Comparison'>
                              <selection-collection />
                            </worksheet>
                          </capturedDeltas>
                        </story-point>
                        <story-point caption='13.  In Summary, Human Rights Protection (physical integrity protection from torture, government executions, mass killings, and political imprisonment) appears to have the greatest effect on happiness.  &quot;Economic Growth&quot;, &quot;Life Expectancy&quot;, and &quot;Family-Friend support&quot; also effect happiness.  It appears the area of &quot;protection&quot; overall is important to the happiness of a country.  People like freedom.' captured-sheet='Human Rights Top 3 Happy Sad' id='14' />
                      </story-points>
                    </flipboard>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='29253' hidden='true' id='6' story-point-id='1' w='89370' x='5118' y='18672'>
          <formatted-text>
            <run bold='true' fontalignment='0'>The World Happiness Report Data</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'> This story uses two principal sources of data joined at the hip.  The first is the Gallup World Poll (from 2016-2019) about the state of </run>
            <run bold='true' fontalignment='0' fontsize='10'>World Happiness</run>
            <run fontalignment='0' fontsize='10'> (see </run>
            <run auto-url='true' fontalignment='0' fontsize='10' hyperlink='tabdoc:load-url url=&amp;quot;https://worldhappiness.report/ed/2019/changing-world-happiness&amp;quot;'>https://worldhappiness.report/ed/2019/changing-world-happiness</run>
            <run fontalignment='0' fontsize='10'>).  The second source of data, </run>
            <run bold='true' fontalignment='0' fontsize='10'>Human Rights</run>
            <run fontalignment='0' fontsize='10'>, is originallly derived by </run>
            <run fontalignment='0' fontcolor='#172d50' fontsize='10'>political scientist Christopher J. Fariss.  Fariss’ assessment aimed to measure how a government protects its citizens’ physical integrity, by taking into account torture, government killing, political imprisonment, extrajudicial executions, mass killings and disappearances. He then employed statistical techniques to correct for changing standards. </run>
            <run fontalignment='0' fontcolor='#333333' fontsize='10'>Human Rights 2016-2017 data values range from −3.8 to around 5.4 (the higher the better) and is constructed from an econometric model with data from nine sources.</run>
            <run fontalignment='0' fontcolor='#000000' fontsize='10'>Æ </run>
            <run fontalignment='0' fontcolor='#172d50' fontsize='10'> For more info see:   </run>
            <run auto-url='true' fontalignment='0' fontcolor='#172d50' fontsize='10' hyperlink='tabdoc:load-url url=&amp;quot;https://ourworldindata.org/human-rights.&amp;quot;'>https://ourworldindata.org/human-rights.</run>
            <run fontalignment='0' fontcolor='#172d50' fontsize='10'>Æ  </run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run bold='true' fontalignment='0' fontsize='12'>What exactly is the Happiness Score?</run>
            <run fontalignment='0'>Æ  </run>
            <run fontalignment='0' fontcolor='#000000b2' fontsize='10'>The happiness scores and rankings  are based on answers to the main life evaluation question asked in the survey. This question asks respondents to think of the best possible life for them being a 10 and the worst possible life being a 0.  The columns following the happiness score (listed below) have no impact on the total score reported for each country, but they do explain why some countries rank higher than others.  </run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='44813' hidden='true' id='7' story-point-id='1' w='89961' x='4921' y='52697'>
          <formatted-text>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontsize='10'>Human Rights Protection (Human.Rights.Score)</run>
            <run fontalignment='0' fontsize='10'>: </run>
            <run fontalignment='0' fontcolor='#333333' fontsize='9'>Measure how a government protects its citizens&apos; physical integrity, by taking into account torture, government killing, political imprisonment, extrajudicial executions, mass killings and disappearances. Its values range from −3.8 to around 5.4 (higher is better). </run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run bold='true' fontalignment='0' fontsize='10'>Freedom</run>
            <run fontalignment='0' fontsize='10'>: </run>
            <run fontalignment='0' fontcolor='#333333' fontsize='9'>National average of binary question: &quot;Are you staisfied or disatisfied with your freedom to choose what you do with your life?&quot;  0 (disatisfied), 1 (satisfied).</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run bold='true' fontalignment='0' fontsize='10'>Country Economic Health (GDP.per.capita):</run>
            <run fontalignment='0' fontsize='10'>Æ </run>
            <run fontalignment='0' fontcolor='#333333' fontsize='9'>The monetary value of all goods and services produced within a country (Gross Domestic Product, or GDP) in a specific time period based on &quot;international dollar&quot; divided by the average population at mid-year. </run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run bold='true' fontalignment='0' fontsize='10'>Personal Generosity (Generosity): </run>
            <run fontalignment='0' fontsize='10'>Æ </run>
            <run fontalignment='0' fontcolor='#333333' fontsize='9'>National average of binary question: “Have you donated money to a charity in the past month?”  0 (no), 1 (yes, donations)</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run bold='true' fontalignment='0' fontsize='10'>Life Expectancy:</run>
            <run fontalignment='0' fontsize='10'>Æ  </run>
            <run fontalignment='0' fontcolor='#333333' fontsize='9'>Life expectancy at birth are constructed based on data from the World Health Organization (WHO)</run>
            <run fontalignment='0' fontcolor='#000000' fontsize='9'>Æ </run>
            <run fontalignment='0' fontcolor='#333333' fontsize='9'>  0 (low), 1 (high).</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run bold='true' fontalignment='0' fontsize='10'>Family Friend Support:</run>
            <run fontalignment='0' fontsize='9'>Æ  </run>
            <run fontalignment='0' fontcolor='#333333' fontsize='9'>National average of binary question: “If you were in trouble, do you have relatives or friends you can count on to help you whenever you need them, or not?”  0 (no support), 1.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run bold='true' fontalignment='0' fontsize='10'>Government Corruption Perception:  </run>
            <run fontalignment='0' fontsize='10'>Æ </run>
            <run fontalignment='0' fontcolor='#333333' fontsize='9'>National average of two binary questions: “Is corruption widespread throughout the government or not?” and “Is corruption widespread within businesses or not?” </run>
            <run fontalignment='0' fontcolor='#000000' fontsize='9'>Æ </run>
            <run fontalignment='0' fontcolor='#333333' fontsize='9'>”  0 (no widespread corruption), 1 (widespread corruption)</run>
            <run fontalignment='0'>Æ&#10;&#10;&#10;</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='6535' hidden='true' id='13' story-point-id='4' w='33268' x='49213' y='28527'>
          <formatted-text>
            <run fontsize='8'>Use the slider (to the right) to adjust the low and high range of &quot;Government Corruption Percentage&quot;.  Higher numbers mean that MORE corruption is perceived.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='11722' hidden='true' id='14' story-point-id='4' w='32972' x='5315' y='27075'>
          <formatted-text>
            <run fontalignment='0' fontsize='12'>You will notice that happier countries &quot;perceive&quot; more government corruption than non-happy countries. Surprising!</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='25104' hidden='true' id='15' story-point-id='6' w='14862' x='7677' y='28631'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontsize='10' underline='true'>10 Happiest Countries</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='8' italic='true'>(alphabetical order)</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Australia</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Canada</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Denmark</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Finland</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Iceland</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Netherlands</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>New Zealand</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Norway</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Sweden</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Switzerland</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='25934' hidden='true' id='16' story-point-id='7' w='18701' x='7087' y='30913'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontsize='10' underline='true'>Ten Saddest Countries</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='8' italic='true'>(alphabetical order)</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Afghanistan</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Benin</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Burundi</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Central African Republic</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Guinea</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Liberia</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Rwanda</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Syria</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Tanzania</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='10'>Togo</run>
            <run fontalignment='0'>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='19917' id='17' story-point-id='8' w='38878' x='32185' y='33714'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontsize='12' italic='true'>Notice the line for each category</run>
            <run fontalignment='0' fontsize='12'>. </run>
            <run fontalignment='0' fontsize='10'>Æ </run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontsize='10'>As the </run>
            <run bold='true' fontalignment='0' fontsize='10'>Happiness Score</run>
            <run fontalignment='0' fontsize='10'> increases, the category  (for example </run>
            <run bold='true' fontalignment='0' fontcolor='#e15759' fontsize='10'>Freedom of Choice</run>
            <run fontalignment='0' fontsize='10'>) increases right along with it.  Using </run>
            <run bold='true' fontalignment='0' fontcolor='#e15759' fontsize='10'>Freedom of Choice</run>
            <run fontalignment='0' fontsize='10'> as an example, you can see that people who have a greater perceived &quot;</run>
            <run fontalignment='0' fontsize='10' italic='true'>Freedom of Choosing Life&apos;s Options</run>
            <run fontalignment='0' fontsize='10'>&quot; correlates to an increased </run>
            <run fontalignment='0' fontsize='10' italic='true'>Happiness</run>
            <run fontalignment='0' fontsize='10'>.  The exception is, </run>
            <run bold='true' fontalignment='0' fontcolor='#499894' fontsize='10'>Personal Generosity</run>
            <run fontalignment='0' fontsize='10'>.  There appears to be no correlation that exists there.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='4461' hidden='true' id='18' story-point-id='9' w='45177' x='22539' y='32054'>
          <formatted-text>
            <run fontsize='10'>Scroll to the right (at the bottom of this graph) to see more...</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='3734' hidden='true' id='19' story-point-id='10' w='44291' x='18406' y='33921'>
          <formatted-text>
            <run fontsize='10'>Scroll to the right (at the bottom of this graph) to see more...</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='3734' hidden='true' id='20' story-point-id='11' w='52264' x='22047' y='21473'>
          <formatted-text>
            <run bold='true' fontsize='10'>Zoom in or out and click a country</run>
            <run fontsize='10'> to see individual measurements below.  </run>
            <run>Æ&#10;</run>
            <run fontsize='10'>Double-click in white space on map click to see them all.</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='9232' hidden='true' id='21' story-point-id='14' w='33268' x='11122' y='45228'>
          <formatted-text>
            <run fontsize='10' italic='true'>The thicker the bar, the more freedom a country perceives to make life&apos;s choices.  </run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='7261' hidden='true' id='22' story-point-id='14' w='59843' x='13780' y='29979'>
          <formatted-text>
            <run bold='true'>Human Rights Protection Measurement for the</run>
            <run>Æ&#10;</run>
            <run bold='true'>3 Happiest and 3 Saddest Countries</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='12552' hidden='true' id='23' story-point-id='3' w='33268' x='62992' y='53216'>
          <formatted-text>
            <run bold='true' fontsize='12'>Hover your mouse </run>
            <run fontsize='12'>on each bar to see &quot;Happiness Score&quot;.  Countries are ranked on happiest to least happy.  There is more... scroll to the bottom to see the least happy countries.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{864F5B00-E5CD-4FBC-AA28-DD451A5EE66C}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Correlation Human Rights and Perception'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group)]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{C6765F6B-BC6E-44ED-8212-00BEE128958F}' />
    </window>
    <window class='worksheet' name='Map Happy and Sad Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group) 1]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group)]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Most Happy and Sad]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2014F4F-2737-4902-983C-8084F8D2D571}' />
    </window>
    <window class='worksheet' name='Happy Country Measurements'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]' type='color' />
            <card param='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group)]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1EABD654-4408-4FB1-84F3-1B1977EEA3FD}' />
    </window>
    <window class='worksheet' name='Sad Country Measurements '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]' type='color' />
            <card param='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group) 1]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group)]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C86C9243-B993-4961-BD5D-EC61449D8C7E}' />
    </window>
    <window class='worksheet' name='Perception vs. Protection'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Trust.Goverment.Corruption:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Year (human-rights-scores.csv):qk]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Year:qk]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Human Rights Score (Schnakenberg &amp; Fariss, 2014; Fariss, 2019):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E8B13E1-3C11-422F-9ED1-C558587E8349}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{EBF50160-FBD6-4749-97D4-EB63C2C32D9F}' />
    </window>
    <window class='dashboard' name='Story-WorldHappiness'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{C8921263-0B6D-4F51-B70E-DF41B0D50D2A}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 18'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{946C8E82-A69E-49C3-A700-64F3E52B704C}' />
    </window>
    <window class='worksheet' hidden='true' name='(2) Sad Country Measurements '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]' type='color' />
            <card param='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group) 1]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group)]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{229AD134-ED30-4A19-A04F-D53A5A9CBCD1}' />
    </window>
    <window class='worksheet' hidden='true' name='(2)Happy Country Measurements '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]' type='color' />
            <card param='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group)]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{8AEE284B-202D-4492-A55B-ADF569878045}' />
    </window>
    <window class='worksheet' hidden='true' name='All Countries Happy Order'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group)]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]</field>
                  <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Norway&quot;</value>
                <value>7.5175000896453845</value>
                <value>&quot;Norway&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B08FBEC3-2D43-43F5-80BD-A6CBDFCA9D71}' />
    </window>
    <window class='worksheet' hidden='true' name='Correlation Happiness to Human Rights and Corrupt.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D3F65719-36FE-48AB-BB39-38773ADFC44B}' />
    </window>
    <window class='worksheet' hidden='true' name='FIRST Happiest and Saddest World Happiness Comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]' type='color' />
            <card param='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Freedom:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F45F86B0-DA0B-4397-A30C-C0699A21EA41}' />
    </window>
    <window class='worksheet' hidden='true' name='Happiness Comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Happiness.Score:qk]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Year:qk]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Freedom:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B33B5FFC-F050-4B50-BEBB-C9AE5F186273}' />
    </window>
    <window class='dashboard' hidden='true' name='Happy Sad Dashboard'>
      <viewpoints>
        <viewpoint name='Happy Country Measurements'>
          <zoom type='entire-view' />
          <highlight field='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Map Happy and Sad Countries'>
          <zoom type='entire-view' />
          <highlight field='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sad Country Measurements '>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9C068F01-C1AD-492B-8580-77D928192F87}' />
    </window>
    <window class='worksheet' hidden='true' name='Human Rights Top 3 Happy Sad'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]' type='highlighter' />
            <card pane-specification-id='0' param='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Freedom:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7AAE6AB3-7DEE-4B68-B459-6C97B5BAFE01}' />
    </window>
    <window class='worksheet' hidden='true' name='Intro'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
        <geo-search-visibility value='1' />
        <map-navigation value='1' />
      </viewpoint>
      <simple-id uuid='{7338D999-14CD-4801-8537-4CE629DF9D1A}' />
    </window>
    <window class='worksheet' hidden='true' name='Map 10 Happy Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' type='color' />
            <card param='[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group)]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Top 10 Happy Countries]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9384990A-D6B2-49B9-BC91-2168AA996F87}' />
    </window>
    <window class='worksheet' hidden='true' name='Map 10 Sad Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' type='color' />
            <card param='[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group) 1]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[Country (group) 1]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4A8FAE2-005E-4981-AECC-255E3DDC9325}' />
    </window>
    <window class='worksheet' hidden='true' name='Perception vs. Happiness'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]' type='size' />
            <card param='[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Trust.Goverment.Corruption:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]' type='highlighter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[avg:Happiness.Score:qk]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Year (human-rights-scores.csv):qk]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AA979B2D-2FB6-4E63-A222-10B0391EE1C7}' />
    </window>
    <window class='worksheet' hidden='true' name='Second Happiest and Saddest World Happiness Comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]' type='color' />
            <card param='[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1usmlui0eestho1g6nb130qrm10t].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[:Measure Names]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[none:Country:nk]</field>
            <field>[federated.1usmlui0eestho1g6nb130qrm10t].[sum:Freedom:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{58D0227A-F3E2-4D25-BD7A-DE03CB2A211C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Correlation Human Rights and Perception' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Happy Country Measurements' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map Happy and Sad Countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Perception vs. Protection' width='192'>
      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
      DLYYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sad Country Measurements ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWWwkWXae/4jIfd+TmcmtSFaxWEtXTXd1TUOamdLY8CKMAduQAQGaJ8Ow
      /eQXA34fWIZhPfhNMGzIgAF5ZiDBhiAbhmEPJAiQZ+numepqslauxSSZO3PfYg8/5NzbGRmR
      LJKVJLsq4wMGUx3BjPjzZpx7zz333BOMpmkaLCymFPaqBVhYXCWWAVhMNZYBWEw1lgFYvDU8
      z+P4+BiNRmPs34iiiH6/D0VRUCwWoSgKNE1DvV5Hq9Uy/H25XAYAdDod1Gq1E++vaRokSaL/
      3Wq1oCjKqbRzP/jBD35wqr+0sBhDsVjEH/3RH8Fut4NlWWxuboLjOKyvr8Pv98PtduNP//RP
      cXh4iFwuh83NTWSzWUQiEfz4xz8Gy7JwuVz44osvkEql8MUXX+AnP/kJ1tbW8MMf/hAMw8Dv
      9+PTTz9FLBZDq9VCrVZDpVLBq1evwPM8/uRP/gSpVAr5fB7ZbBaBQAC//OUvEQqF8OzZMwiC
      gHA4bNBuGYDFWxMIBFCpVPCtb30Lf/ZnfwZJkvDZZ59haWkJv/jFL/DBBx9gZmYGxWIRhUIB
      3//+9/Hzn/8cDx48wPb2NrrdLsLhMP7iL/4Ch4eHEAQBoigimUzC4XDg0aNH+NGPfoRkMolP
      P/0UvV4Pz549w87ODpxOJ3q9HjqdDjRNw4sXLyBJErLZLF69eoWDgwP89V//NW7cuIFkMmnQ
      brlAFhODYRgAgxHB4/Fgd3cXgUAAiqLgs88+w7NnzxAOh/HHf/zHmJmZQafTQTAYRLlcxuef
      f45UKgVN05DNZtHtdpFIJPDs2TP85Cc/gdfrxdbWFpLJJJ49e4ZyuQyXy4XZ2Vl4PB40m00I
      goDvfve7sNvtCAaDYFkWN2/exMOHD/HTn/7UXLO1DmAxCSRJgs1mgyAIEAQBX3zxBW7cuIGZ
      mRmwLIterwdN0+ByudBqtRAKhQAMfHyHwwGWZcHzPDweDzqdDpxOJ9xuN3iehyRJcLvd9HPt
      dhsOhwMcx4HjOABAr9eDw+GA3W6HoijgOA7tdhtutxvdbhdutxsul8ug+8IMQJZl2Gy2i7j0
      mbG0mHORWmRZBsdxdFS4Si0ncWEuULPZvKhLnxlLizkXqcVms5364b9oLSdhzQEsphrLACwo
      Z/WGh/+e/FvTNKiqSv/9dZ9iWgZgAU3T8OrVKzx//hyyLBvOl8tl0wd5e3ub/vunP/0pRFHE
      1tYWisUiAEAQBLTb7YsTPgG+HrMxiytFVVXwPI979+7h5cuXKJVKmJubQzabhd/vR6VSwZ07
      d7C5uYmlpSX0+300Gg0Eg0EAQLVahcvlQrlcxu7uLlZXV/Hnf/7nuH//PiRJwtOnT7G4uIh6
      vY5arQan0wme53H37l1EIpEr/e7WCGABhmEgSRI0TUO5XEYgEICqqlhZWYHL5cLc3Bzm5uYQ
      j8eRyWTQbrfB8zz9/NHRERRFwdHRETKZDDKZDG7cuIFQKIRGo4GFhQVEIhG0Wi0IggC3243b
      t2+j3+9f4bceYI0AFmAYBqlUCs+ePcPa2hoKhQKi0ShsNhvcbjcAIJfLIZPJ0EWmcDiMaDQK
      AEgmk0gmkyiVSmBZFjabDTMzM3C5XLh+/Try+TxYltV9zuPxwOl0XuXXBnCB6wDVapU20FVj
      aTHH0nIFLhCJDGiapptwqap6YsTg6xJN+DpHNkgbXoW+4Xu/6bd8W0a/49t850s3gJ///Ofo
      9Xo4OjrCzs4OVFWFLMt4/fo1RFGEpmlQFAWKotBzmqahUqnQ47lcjv6bpNWSv5sEjx8/xuPH
      j1Gv16kOokUURZpue9qU27OiKAp+8Ytf4PPPP4cgCPShUlWVfl9yjHxvVVWxubmJ4+PjiWrZ
      3NzE+vo69vf36f2H70v+t7+/D0EQ6G9ZqVQm/rsAg9Trx48f48WLF7q2qFQqOl3k/4efETMu
      dQ6gKAocDgey2SwajQZ8Ph/N7iM+qMvlAsuyKBaL8Pl80DQN6XQazWYTL168wNzcHLa2tqBp
      Gvr9Po6OjpBMJtFqtRAOh7G6uvrWOlutFvr9PqLRKDY2NmC32+lE8dq1a9A0DZ9//jkcDge+
      /e1vg2Un249omoZWqwWe55FIJOD3+1EsFlEul5FMJsGyLDiOo2HGQCCAVqtF8/Gj0eiZVmFP
      otPpIB6P4/j4GNlsFgDg9XqhKAoSiQT6/T5sNhuazSby+Tx1YyqVCkqlEhiGwc2bNyeW5rC/
      v4+lpSUUi0Xs7Owgk8mgUChAFEXs7OxAURSkUinkcjlEIhE4nU7kcjk8evTItE0udQR4/fo1
      ZFlGsVhEMplEOp2G0+lEIBAAwzD44IMPIAgCjo+PIQgCnE4n7t27h06nA0VRkMlkcHx8jHQ6
      jVQqhWKxCFmWwTAM7ty5YxrDPg+hUAgff/wx8vk8TdDyer24efMmer0eVFVFMplELBa7sKE+
      lUphdXUVnU6HjjyRSASrq6uQJAmiKIJlWdy5cwfdbheBQACpVGpibTBMPp9HIpFAvV6nv9W9
      e/fQ7XapNpfLhTt37kAURQCDzk6SJNy6dYsmrE0Cp9NJ7yEIAr2PLMvw+XxYWlrC8fExnYyX
      y2Ua4TLjUkeAYDCI5eVl1Go1MAwDr9cLhmFQLpexsrICjuMwPz+PSqWCWCyGeDwOm82GZDIJ
      RVFwfHyMRCIBn8+HfD5PjyeTSTidTqRSqYno9Pl8KBaLuH//PrLZLDVSj8cDu90OjuPg8/nA
      suzEetphWJYFy7JQFAUrKyvY2tpCKBSC3+8Hy7Jwu93o9XqYnZ2F0+nE8vIyyuUyOI5DOp2e
      qKb5+XnEYjEcHR3RTqbVamF7exsrKyvIZrNQVRWhUAiHh4dYWVmBIAhQVRUMw+DVq1dYXV2d
      mBEsLCxgc3OTanv9+jXS6TQdhV0uF/x+P16/fo1QKASWZakWMy4sClQsFhEIBN74d5VKhYq+
      KJrNJl20uWreBy2dTgc+n+9roeVtufJ1gHg8ftUSLM7IpB/+q+TCDMBut8Pj8VzU5c9Ev9+3
      tJhgabFSISymHMsALKYaywAsphrLACymGssALKYaywAsphrLACymGssALKYaywAsphrLACym
      GssALKYaywAsphrLACymGssALKYaywAsphrLACymGssALKYaywAsphrLACymGssALKaacxmA
      oii0rCEwKIHy9OlTdLvdiYqzsLhozmUA/X4ftVqN1sbMZrOYn5+H1+udqDgLi4vmXGVRfD6f
      7mFfW1vD3t4eAoEAFhYWaFFSSZImJvRtsLSYY2k5pwHU63UcHx/D5/OB4zj0+33IsoxgMEhL
      4HEcB7vdPlGx58XSYo6l5ZwGEA6H8ejRI/rfpLriRdTJtLC4SCZSGc568C3eVawwqMVUYxmA
      xVRjGYDFVGMZgMVUYxmAxVRjGYDFVGMZgMVUYxmAxVRjGYDFVGMZgMVUYxmAxVRjGYDFVGMZ
      gMVUYxmAxVRjGYDFVGMZgMVUYxmAxVRjGYDFVGMZgMVUM5E9wRYWF027VoEkCLpjLp8fHn/w
      ra5rGYDFO8FP//t/QX7nhe7Yvb/x9/Dg7/6jt7qu5QJZTDUnGoCmaajX6+j1erT2j4XF+8SJ
      LtDnn3+Oly9fIhwO43vf+x5sNstjsni/OHEEmJmZgSiK4DiOljwEgF6vh1/+8pe0OO7BwQEe
      P36MXq93sWotLCbMiV06wzCIRqPUBSIV4BwOB5xOJ1RVBcdxqFarWF1dxdHREVZWVqBpGlRV
      pQZy1VhazHmXtJi54JqqvbX+Ew3A6/VicXERL168gKIoYNnBgGGz2eiIoCgKrQbNsiw1EoZh
      vjYlEy0t5rxTWszOMW9flnOsAfT7fRwfH4Pnedy/f1/n/9frdXS7XRQKBdjtdqRSKezu7uL2
      7dv0izAMQw3mqrG0mPMuaTF7zCeh/0QDODw8xJMnTxCJROjDDQyqQz98+FD396lU6q2EWFhc
      BWMNIBKJgGEYLC4uwuFwQFXVr01vYWExKcYagCRJWFtbgyRJ2N3d1UWBLCzeF8YagCzL+PTT
      T8EwDGZnZ3VRIAuL94WxPg3HcUilUlAUBblczloJtngvGTsCKIqCVCqFBw8efG3eIzUNtGsV
      KCMvi3P5AnB5fVek6P1mrAG43W4sLi5eohQLAPjL//qHqOayumMPv/e7uPvot69I0fuNFdax
      mGqmJrvtP//iP6DWq+qO/a3V38Y3Zh+c+Dn+L38fajuvO+a4+7uwLf/WpCVaXAFTYwCvSs+R
      b+V0x9708AOAknsMtbqjO6YufGui2iyujgs1gK3yK0iqfkKXCcwi5Alf5G0tLE7NhRrAH/6/
      f4/jbkV37J//xr/Ao5W/eZG3tbA4NdYk2GKqsQzAYqqxDMBiqrEMwGKqubIw6Kf/40fod9u6
      Yze/+VtILd+8IkUW08iVGUD2xRN06se6Y+mVW5YBWFwqU7MQZvH+0v/f/wrK0a90x+z3fw/O
      h//0jZ+1DMDinUfrN6CNrDdB7J7qs++VAbS3/w1Usaw75k79LgDLrbIw570yAKW/D5XX5/uo
      cgOwdnNajMEKg1pMNZYBWEwtcmfTMgCL6aWf++H55gCqqqJQKCAej8PhcKDT6aDdbiMajcLh
      cExa54Xzv//Tv0PzuKQ79uDv/A6uP7Dy/t93zjUCbG1tQdM0vHz5EgDw8uVLqKr6zpZN6bdb
      6DXruv9JovDmD1q885xrBBAEATdu3MDx8WAld2ZmBkdHR2AYBslkkhbLNaukoigKpJGqBwRV
      HX/uVJjcUFFUKFCgwezc4H5mJV9OPKeq59Z50vcHzKsgv8393kbLZXKedlEV9YTf6M3fTdW0
      8xlAKBTCr371K/j9fhwdHYHnebAsS8ulA4O6QmYDAsdxY8ussOz4c6fC5IYcxw60mJRXJVrM
      Ri5yTmQYg+lwLHtunSd9f8C82vHb3O9ttFwm52kXlhu0i2TaZm/+bizDnM8AFhYWkMlkfv2Q
      M/R9AFb5RIu34b99+WMc1vUlYb658Bv4zaVHF3bPcy+EDZdLZxjGevgt3pqt8ks8Lz7VHZsN
      zV/oPa0wqMVU816lQlw2uz97Ab7T1x2buTmH6EICSv8ImibqzrH26GXKszgFlgG8BQePd9Aq
      NXTHXH4PogsJdHb+LZT+a905z/w/A+zfuUyJAIDOzh9A6e/pjjmT/wDgHo75xPRgGcAUoAgF
      KP0D3TFNbk1FkmDhxQH6DX1qdDATRXQhAcAyAIv3nP3Pt1De1pe2XPn27XfXADb+52fg23q/
      e/GbN5BYSV+RIot3mXfOAMo7eXSr+s30iRvWw29xPqwwqMVU886NABbmfPbDv0KzUNMdu/6d
      O7j2zdUrUvRuYBnAewLf7hmiHTL/9Uh0G0Y4/ivDvm2b/xaAq3Fjv5YG0P9f/xJqR99Izo//
      CWzL370iRRaj8H/5+1Aqm7pjjju/A/udf3ji54TK/4Hc3tAdc6V/D3BbBkBRyi+gNY90x9Re
      bcxfW1wF6vE21MKX+mOLv3lFas6PNQm2mGosA7CYaiwDsJhqLAOwmGq+lpPg951Gvw5ZlXXH
      vA4v3HbPFSmaXiwDuAL+4C/+NbJ1far09x/8Y3zv1t+/IkXTi+UCWUw1lgFYTDWWC/QOIXz6
      H6G19Lnttht/G7ZFq4LdeTmXAbTbbWxtbWF+fh7xeBy5XA6lUgm3bt2Cy+WatEaLXyPv/RXU
      0nPdMTayCFgGcG7O5QLt7e3h3r17ODoapCuUSiWsrKzg8PBwouIsLC6at5oDkIJYFhbvKucy
      gKWlJXzxxReYnZ1FsVhEIpHA1tYW5ubmJq3PwuJCOdccwO/34+FDfUmN2dlZAOZFTC2mi+f/
      9zHaRX25mNl71zB7f+mKFI2H0Sb8xA6qQmtoNpvY7+1CkAVomkaLm67EbiDqiSG3+RSSKEDT
      VDDMYCCKz12DNxSFlv0pNKkHTVXBsINzXPIONH8ale0CZFHSXTOcicEV8kBpP4am9HXXtHmv
      o9F14qC/j77U031uKbqCuDeB/PZziLz+c7HZBfjCcWgHP4cmdvRaEregBWZxvFuExIu6a4bS
      UbjDXijtJ9CUrl6LZxmNnhtH/AG6Ykf3ucXIEpK+GRR2XkDo93Sfi6bn4Y8moB19Bo1v6rSw
      8VUguIDqXgliX9/WwZkwPFE/1M46VLk9ouUaGj0votFBsS5S3p58VlEUWu7S7JyW+yW0fl13
      PzZ6HQhfQ22/DKHL684FkiF4YwGo3adQpeavzwEAA869gGbfj6KUR7Pf0H0uE5zDXGgepdeb
      6LVbuu8QSqQQnpmFmnsMrXesaxcmfA1s7AZq2TL4dl93TV8sgMBMGErn+eQNgFCtVmnjjiLL
      sq626EWfs7S8u1pUVYWmaaa1Zydx7sIXwlRVRS6Xw9HREURxUCqQiJIkCe12G6qqol6v686R
      zx0eHkIQBN05RVFwcHCAdvur6hBm50Zt+6RryrKMVqsFTdNQq9XGauF53nDu4OCAfvZN5wia
      piGfz4+9ZrPZNNUy/Ll+v284N04LOUeuO06L2TXr9fobtfR6vTfeb/hhPDg4QKPRMHWZC4UC
      vSbDMGB/3au3221IkoROpwNRFHXnRFHEwcEBcrkcFEXRneN5HgcHB7Sdh89dqAFomoZut4tO
      p4NgMEgbgAxFxWIRz549w8uXL6kgck4QBDQaDbhcLsM5lmXh8Xjw5MkTbGxs0C9Mznm9Xjx5
      8gRPnz6FLMtUC8/zaLVaCIVCBi3lchlPnz7Fixcv6DHy/7Iso16vm2phGAY+nw/r6+vY2NiA
      JEknniNaRFFEvV5HKBSivSL5XKVSwcbGBl6+fEkfkGH34/j4GC6Xy/AdgMH8bGNjAxsbGxAE
      wXDu6dOnWF9fpx2ApmmQZRnVahWhUIjW1Cefq1arVAuJ+A1fs1wuj9USCATw/PlzrK+vg+d5
      w7kXL17gyy+/pEZHXqxSLpepFuJ6aZqGnZ0dvHr1Cvv7+/Re5Jq1Wg2qqsLlctHj5JzT6QTD
      MPjss8+wtbWl03mhK8GqquL4+BiSJKFUKiGdTsPj+SrjMZFIQFVVLCwsmH5eFEUIgmAItSqK
      glarhY8//pg+4MPn2u02PvnkE12ja5qGcrkMRVFQKpWQSqV0w3E8HocgCLh27dqJWsxGlUaj
      gQcPHkCWZd2PTHryhw8f0h6LaCkWi9A0DaVSCclkEn6/n34uFouh0+lgaWnJ9MUQ49qF9NIf
      ffSRzocn54hOSZKoIQODHhcYrOckEgkEAgF6LhqNIpPJYHl52VSLJEmmWoCB8dy/f9/03RG1
      Wg0ffvghZFnWncvn82BZFqVSCfF4HMFgEMDggV1YWICqqojFYoZ7aZoGQRDgcDgMv1GvN5j7
      PXz4EIqi6M5d6AjAcRyCwSCcTid8Ph+q1aruvM1mQ7VaxatXr2gvQLDb7eA4Dt1u19C45EFT
      FAW1Wk3XgMViEUdHR9je3ka73abnWJZFOByG3W5HIBCgr3ca1tpoNPDq1Ss6nA+fs9ls6Ha7
      hgYkk35VVVGtVnVGVS6XcXh4iJ2dHTQaDXqOZVlEo1GwLItAIGBoF4Zh0G63sbm5iW5XX+mB
      ZVk4HA50u12D8X/1aioNlUpFp6VarSKbzWJvbw+1Wk3X08diMTAMg2AwaNACAN1uF69evdK5
      nASn02mqBQAd8crlsu5tLbVaDfv7+9jb28Px8TF9sSLDMIjH4wBgqsXr9WJvbw/b29uG38Hv
      94PnefqwD9Nut+Hz+VCpVOh9SHtdSi6QzWYDx3FIJpO645qmwe1202F4GIZh4HA4oCiKwQCc
      TifcbjfK5bKhx47FYvB4PHC5XHA6nYb7kWF1fn7ecO4kLU6n01SL3W6Hz+dDqVTC4uKi7lwk
      EsHt27fhdrsNWlRVpcdGtQCAy+WCpmmG91wxDAOXywVZlg1aWJZFKBRCsVg0jKrBYBB37tyB
      x+Mx1ULuZzYaO51O03YhOhVFMTyQwGD0KBaLhu/n9/tx9+5deL1ew1tFFUUZq0VRFHi9Xvrd
      hzs+m80Gm81mqjGZTCKbzcJut8Pr9erOXegIoCgK6vU6RFFErVajkxCCLMvQNA0ejwedTkd3
      jvzw4XAYjYY+pkwmNbIsG64pSRJ4nkcul9M1hqqqqNVqkCQJtVrNMOIoigJZluHz+Qw9nSzL
      UBQF0WiUTtaH77e/v2+qhbgquVyOBgCIlmq1SucWo1rUX78Uz+fzGdpFURSIoohYLGZoF1VV
      sbu7C1mWDdcURRGSJCGfz1P/HxgY/vHxMf2tRkc/4lr4/X6DFmDwW0SjUYMWANje3jbVIggC
      ZFkeq4UERUZHv06nA4/HY2qMzWYTwWAQDMPo2hoYeAWtVgs8z1++CzQ/P49ut4tyuWx4QJxO
      JzweD/r9PmZmZuhx4lcDgwnhqM9nt9tht9tNIwh2u51Odkulr979y7Is5ufn0e/3USqVTF2u
      QCCAdruNVCql00LcrGKxSIfo4e9o5ncCg95REAQ0m01TLTzPo1Qqmbpc4XDYoEXTNFSrVTgc
      DuTzeYMWMjqYaXG73ej1emg0GjotxLcWBAGlUsnwkBMXqdlsGrSUy2W43W7k83kkEgnTe5pp
      IYY92i7DWsrlskFLPB5Hv9+Hz+fTJV3KsgxJkmjnNDrC+f1+2tmOfrcLD4MqioJYLIZgMGj4
      ofv9PhRFQSKRQC6X0wkjc4BMJoNyWV8ki2VZuN1utNttQ09ADGBhYYFOoAiqqiIajZpqIb11
      Op2mSX5EC2ns+fl53Q9Gznu9XrRaLYMWjuPQ7/exsLCAUCikO6dpGiKRCAKBgEGLoijodrvI
      ZDI6LQDg8XggyzIWFhZMtfh8PlMtLMtCFEXMz88jHA4btIRCIQSDQUMnRRY1Z2dnDVr8fj8E
      QcDi4qJBCzlPQpejKIqC2dlZgxZgECEKBoO60QEYTNYTiYRhVGFZFjzPY2Zmhv7+wxC312x+
      cOEG4HA4IMsy/H6/4cs6HA7aC1arVV2YjfxtqVRCJBLRfY7M9j0eD41NE8giR61WMzwENpsN
      iqLA7/cbrmmz2SCKIgqFAur1Ov0swzAIBALgOA6FQsGwWEMWd9xut2HSRibHw9cjcBwHVVXh
      9/sN12RZFoqiIJ/Po9Fo0AeIPOBOpxOFQsHwHYhf7HK5DO1CJsjNZtPgItAVUp/PcE1yrlAo
      6D7LMAzcbjc8Hg/y+bzpg6xpGlwul6l7RNZdRh9yYPBbeDweg5ZQKIRCoYBut4tCoUAfZpZl
      sbCwgEqlAkEQDCNArVaD3++HzWYz3O/CJ8E8z9OXGVerVV0YVNM0+pAsLy/rQnOqqkIQBLjd
      bvT7fd3kxW63IxaLged5w5cl12UYxjBJlCQJoijSWPrwNYe1LC0t6SIoJG7vcDjoEEzgOA7R
      aBR+v9/wXlpyTfJADyPLMh11jo+Pddck359lWSwuLuquSybGNpsNPM/rQpYMwyAajVKDHYVc
      0yx82u/3IUkSqtWq7prkc8BgBBydtIqiCI7jTB/keDyuW6M5jRYAdHG0VqvpRnFyLeIqDV9X
      FEW0221kMhnDinMwGEQwGEStVjPov/ARgMy8WZZFJpPRnZNlmVrs+vq6rjFIZIHEy4cpFArY
      2NhApVIxDHfAYOI8Pz9vmDtwHAev1wuGYWjyHkFVVfA8D5fLhfX1dd0Dq6oq1TL6g5XLZayv
      r5vOcRiGQSgUwtzcnMFHJr25zWYz1dLv9+F0OvH06VOdC0EmgMVi0WBUx8fHePLkiekcBxj0
      oLOzs4ZonKqqCAaDplrIYqbT6cTz588No4ckSSiXy4YRrlar4YsvvjCd4wCDhzKTyejmFcDg
      mYhEItT9Habb7YJhGPT7fbx+/Vr3XJC1iFF3WdM0bG5uYnt7G5VKxdBmFz4ClEol7O3tIZ1O
      QxRF3eTF4XAgHA5DlmV88MEHOot2OBzw+XwIhUKG3jGZTMLpdCIcDhsal2VZ5PN5dDodzM/P
      w+1267Ts7u5SLcPnbDYbIpEIJEnCBx98oBuNbDYbfD4ffD6foXeMx+N0ojgatWAYBsViEb1e
      D7Ozs7oRp1wuY2dnh2oZ7rFYlkUsFoMoirh7967hnN/vh8fjMcxxYrEYVldXEY/HTSezlUqF
      ahlu00qlgt3dXSQSCYiiqBtxGIahx+/cuWMY5YLBIDwej2GOE4lEsLq6ipmZGdP1g2q1SrUM
      LwJWq1Xs7u4iEonQUZcQDofRarXgdDoNqfehUAhutxvpdNrwDuvFxUU4HA7TBbkLHwHcbjd9
      mIcfKmDwY87OziKRSKDRaOgMgOd56nqMWjUweICy2azp0Ov3++F0Og098rCW0YYgo0IqlUK9
      XjcMr4qiQJIkFItFw/0qlQqy2axprxsMBmG32w06T6MlnU4btBAdoiiaTjyPj4+RzWZNe91A
      IGCqxeVyweFwwOv1mrpOs7OzyGQyBi3A4HeSZdlUC1l8G+0YTtLidDppdHBUi91ux+LiIjiO
      M6y6F4tFuN1uGu4c5ejoCAcHB5c/Atjtdly/fl2XgERQVRVHR0cQBMEw9DocDrraO2rtdrsd
      fr+fTlCHkWUZsiyjXC4b5gc2m41qGf0hNU2jWkaHXpvNBpZlIcuyYVGH4ziEQiHqRgxDHtZq
      tXqiltF2AQY/GM/zBheBZVn6AIy2CwkeyLJsGnUSRZH2oMPY7Xaa6mCmJZfLged5g+tEPsvz
      vOlmqGg0ClEUDVqAgeG0223TdllcXATDMAYDkCQJ2WwWiqIYfPnh0WF0sSsYDNKw8aXPAbxe
      L9xuNwKBgMGXPTg4gMfjoT3sMGTSHAqFDP6lIAjgeZ7Groch8fxQKGSIrpD4sZmWbDYLn89n
      qgUY9PLhcNhwTpIk9Ho9ur4wjM1mQyAQQCQSMcxHvF4vnE4ngsGgQcv+/j4NMZppIclio+dU
      VUW32zXVQlIdIpGIoV2GtQy3NdESCARoT2/WLmZaANAoj9noEA6HTbX4fD44HLQABIcAABLn
      SURBVA5Du5AcLmL8ZjlZnU6HrlqPtpemaWi1WoZR+sINQBRF5PN51Go1wypqr9ejG+pH/cRe
      r4f5+XnY7XZDr+R0OmGz2dBqtQwjhyiK6Ha7SCaThs/JsoxcLodGo2EIE/b7feTzedy4cQOt
      VsughURjRq9pt9vhcDhoBGL0fq1WCzMzM4bejIx+9XrdED7leR6Hh4e4efOmoV263e5YLSzL
      wuVyodPpGLSQcOzMzIwhJ1/TNBweHqLRaBhypMiq++rqqmFe0el0xmoBQNckRrUAA1eNxO1H
      Gael2WxCEASEQiHTwEAqlTL08MBgniZJElRV1UUhgUswABLTJQ8lgWEYrKysYG1tDXa73dBI
      R0dHaDQag00LI41LwofhcNhgVHa7HYqiGNIPyD3J4sywa8EwDJaXl7G2tgabzWYYzskPwrKs
      wXWSZRm9Xs80NYE89LlcznSuEgqF0Gq1TLXcunULHMeZamk2m2BZ1tSlbLVaiMfjhnYhrpOZ
      FlVVEYlEDKu95De6efMm7Ha7wf07OjqiBmo2d6jX60gmk4bOBhj8TrlcztAjy7KMeDxu0MKy
      LJaWlrC6uopkMql7kFVVRT6fR71ep67zMI1GA4FAgKaR6NrFoGzC9Ho9Gr8dHkIVRcHR0RF2
      dnawu7trmLiQhYtqtWr6IPM8D1EUDZmBJEzpdDoNPTlZeQag60HIhpfd3V3s7OwYfhQSV6/V
      amO1CIKAnZ0dgwvBMAxsNpvpCEcmcidpGZ3MBoNBsCyLer1ueJBJHgzP89jb29NpJVo4jjNo
      6ff7plo0TUMul8Pe3h52dnYMk1ky5xk38RRFEf1+H/v7+6ZaOY4zjCpkPWJUiyRJODg4wPb2
      Nl6/fq37zUnipMvlQqVSMU0SbLfb6PV62N/f17lIFz4JdjgcqFar8Pv9uhtzHIdUKoVqtYp4
      PI5SqaTL/jupwgTHcYjH47SHNHMvcrkcbt++rTvudDpRqVQQCAR0WsgaRaFQQDqdRi6X02WZ
      jrpZw7Asi0QiAZvNhkwmY3AvSO80ulLq8Xiws7ODYDBo0DI7O4vDw0PMzc3h8PBQFyY0cycI
      JJ3Y6XQinU4b3AFVVVEqlQyTUq/Xi62tLYRCIZ0WkjW7u7uLxcVFHB4e6oIO6fTJ7/VKJBJw
      Op2YmZkxzUAtlUqGwIHf78fm5ibC4bBOi8PhoNkEjUYDPM/TUC7LslheXh6rw+12Y2ZmBjzP
      I5PJ6EaICx8BSA9pNnFxu91QVRWvX79+Y2OOXrNer+Pw8NDwwHW7XaTTaaRSKUM0gGEYmok4
      qsXhcIDjOOzu7p74kJnRbDZpuu0wxNXKZDKGtQwAY7XYbDY4HA7s7OycWUu73cbe3p6hXVqt
      FtLp9Jm1MAxDjXU0IvUmut0udnd3De3SaDSQyWSQTqdNtUiSZJrunclkaERq1Jc/CZZlsb+/
      j1arpXMbNU27eAMg6c5+v9/QUwuCgGq1Smf2p6XdbmN+fh4fffSRzl0hO60kSTJNJAMGRmem
      haxonlVLp9PB7OwsHjx4MFbL7OysLtlvVMvow0pWnc/TLplMBh9//LEhzbhYLEIURWQyGeTz
      ecNnx2kh+345jjON9JykJZ1Oj9UiSRLS6TTdjTaM0+k0TS2pVCrUrTttLQeS5rG2tobFxUWD
      i3rhBuB0OmmasVnUguTKmOWLjKNUKtHQ1nAEhWRu1ut100JddrudxovNtJBrnEVLsVikWoYn
      e6TnrNVq2NraMrhRJIeo1WoZ7je8p/isWogPPNouXq8X1WoV29vbhlGFuE7jtJxVB9FCEhJH
      28Xv99PVZ7NRJZlMGuZvwGCUHt5zfRpUVUWlUqGp3sPGyDDM5STDybJMdwcNPwg2mw3BYJDu
      KjotJB/ErAEXFxfphG8UMkFMJBIoFAq6qAbJwScZo6eFbNvc3d3V7WkABslj47TIskwjY/l8
      XrebjKRCmCX0nYTNZkOn08Hu7q5h0Wpubs6wwZ5AYuTpdBr5fN6wyy4ej9PEvtNit9vR6XSw
      v79vyIMi7o+ZFmAQPZqdnUWhUMDS0lfFtEg2gc/nO7UW4oKTfK7h9ZhLMQCyMFGpVAwNSxKY
      Op0OVFU1+OzjuH79Oh3Khl0ZVVWxv79PowejuUAkXl0sFg1aRFGkyXmqqpr6pmYsLy+P1ZLN
      ZumQPZoLZLPZYLfbUSgUdA8/8NUKMtmEf1otS0tL1I8fdmVGtYzOA8jImc/nTbeKDs/hhifk
      J3Ht2jX6mdHN+cMpLOl02nBNr9eLQqFgGDXL5TJsNhsajQa8Xu/YGkPDsCyLO3fu0KzV4ZFf
      FMWLd4FInNxMLNksz3HciZGWUURRxMuXL7G/v6/zIVmWxbVr1+B0OiGKoqGXIL2umRaSXmEW
      e3/T99vc3MTu7q7OtyapzC6XyxA6Bb6qXmGz2YybNH69Wd5ut5+pXVRVxdbWFnZ2dnRzDqKF
      rLqP3o9sehn3QJGR8SxaSBbmqBaSnOb1euni1Chk/Wf0eiSa5PF4zjQJrtfr+PLLL3V1j4CB
      S3Upk+DhkiDDNBoN9Pt9032cJ0EWgUqlkmHUIL2Vx+OhVQCGGa2VM6yl1+vRnVOnheTPVCoV
      w48iSRIkSaLx6XFaRvU0m010u11wHHcmLcCgbY6Pj3UjH6BPsTar/DBOS6vVQqfTGZvzfxIc
      x5lqAQbBA4fDYbpIZvYbES+C7Ic4i2tot9vpNttRI7+USXAqlaLbHIchq7LjlsTNEAQBm5ub
      sNvtWFtbMxgAiTvLsmzwPcmKM1k4GSYQCNC0BbPldDMkScLm5iYYhsGtW7cMrordbsfMzAw0
      TTPdSzw3NzdWS6PRQDKZPLUWMhKpqorbt28bkgRZlkU6naabZoYZ3mAyer9gMEi1nPblJ4qi
      YHNzE7Ism2oBBi4hCQSMQpLhhrWQbbCSJCGRSJimXpjRbDaxubmJ+fl5LCwsXL4BkBVP8iaZ
      YRRFoQsbp514OhwOzMzM0OzM0eFcFEW8evXKdGmeJNGlUinDyzzIRoxGo3Hq0KPNZkMqlRqb
      oCXLMq16Z5ZC0el0xmohG9FPq4XjOJoLbxZDV1WVVr0bfXiIC5ROpw1aRFFEPB7Xbc18E2Rh
      cZwWAHj+/DmNAI5Sq9UMe7PJXIKs8J92BAgEAojFYmPLulzKfgBJknB0dGSITBwdHUHTNCQS
      iVP3dMNhuXq9bvhRbDYbTaMehVRvyGazhogNaWyyknpaLeSHMdNCXDVSrGpUJ8dxyGazhnYh
      D2EsFjt1r0siRna7nZaiGT1PYvlmi112ux37+/umWliWRSQSMXVlxmlRFAVOp9NUC/DV/uxx
      1TSy2axuBCclEzVNQzKZNO3gxuF2u9HtdtFoNIxpEqe+yjkRBAEejwdLS0sGP5iUstja2jLd
      TDKOSCSC5eVlLC8vG/xZUhyK7DkdvZ/T6cTKyophkw2JV29tbZlu4DhJy9LSElZWVky1hMNh
      051IpCTgysqKoV1IHH97e9u0Fs84wuEwrl27hpWVFUMyHMMwiEQipu1CQrXXr183aCG+9+7u
      runOrnGEQiGqxWxTfDQaNdUCDL7/aHuyLItms4lms0nrDZ0GsqPtxo0bCIVChpylS8kFEgQB
      2WzWEHpcW1sDz/NoNBqn7l0AYH9/n5a4GPWth8OOoyFGu90OWZaxt7dn0HLz5k26GnzacCwA
      uuNJ0zSDPytJEt3QUygUdPckBrG3t2cIg964cYPmM502BAoMemtSFXs094gUGZibm0OpVDJ8
      f5IGMhoGvX79Ok3dPm0IFBiMqKRKtdmGmF6vR0u7DMf6VVWFw+HA7u6uLhrHsizu379PK3Oc
      JgQKfBWNUlUVoihidXVVd/7CDeDw8JBO+Eqlki6UpigKDg8PkUgkxi4YmTH6wAxDdgRls1nc
      unVLd+7g4AAsy+L69evI5XK6H5usIZBFn9NqGVfYF/hqc042mzU0/MHBAe11zbTs7e0hGo2e
      SctJ4VvixmSzWdy4ccOgxWazYXl52bBAqGkaXr9+TRPlTqvlTSHTeDyObDZrSGI7ODiA0+nE
      4uKioTMinWUkEjm1FoZhcPPmzbHnL9wFInt3d3Z2DP4ex3FIJBL41a9+Rcucvy2CIKDT6dDt
      c8OQ/bLb29umsfeZmRk8fvxYV8r8bSDvPyCbSoYh+2XNCr2yLItUKoUnT57oSpm/DaRStZkW
      UqzWzLVgGAapVAobGxu0zPkkqFardOPPMI1GA/v7+9jZ2THMHVwuF4LBIH72s59ha2vrTCvT
      47jwEeCjjz6i/x7NxJNlGe12G48ePTJscj4vpPjRaJ0hAPjGN74xVouiKGg0Gnj06BEURTl1
      mO0kOI4Dz/O4ceOG4bvdv39/rBZSE+c73/nOWD/5rLAsC0EQ6D7kUS3DRaaGtWjaoF7nt771
      rbFRm/OgKIppyfUPPvhgrJZ+vw+WZfHo0aOJdFDAJYwAAOhbS4ZRVZW+BWRvb2+ijUs2P5hF
      lsy0kC2B/X4fe3t7htr6b6ul2+0a1jkYhqG7u07SQopgvS2apr1Ri9lklbzB5vXr14byLW/D
      uN+IZVkcHh6aFiEm84r9/X1a7vBtuXADIG9sIW8KIcM9eXcAx3ETGcoIJB5uFpcnNXWIFtKL
      sCxLC0NNUgvLspibm6OV8YYhWZEvX77E+vo6He6JlnHFf88L2dxi1i7AIF6+ubmJL7/8Uvcq
      IZKScdZkuDcxPz8/dkU3GAxiZ2cHz549o/e02Wx0k8wkdVy4C0Te6fTJJ58YyuQFAgGUSqWJ
      9SrAIArU6XRME81kWUaj0cAnn3xiCE0GAgEUi8WJaiEuHknAG9ZC3JxvfvObhtEvEAggn8+f
      enX8NJA5ANmaOhwFIm7Oxx9/DECfoRkKhaiWSfS4hHq9Thczh6NAwCDv/8MPP9QZB8uy9B0N
      k/yNLmVH2OHhId2LOVr/k+TKTMr94TgOHMeh2WwaFrsYhkEul8P+/r7Bzyc5S5PUwrIsrV4x
      usDEMAwKhQLNXh11uSathaQWdDod0zKNxWIR+/v7pm6OIAgT1UJeDmKmBRgETki7DBsdGbFP
      u1D5JjTtkt4Qc//+fVoZYnhlU1EUeDyeM8V138TW1hYttWg2B7h37x59Ccbw2oOqqnC73YhG
      oxPrebe2tiCKIu7du2fQomka7t69S/OhRosGO51ORKPRU6+Qn1bL3bt3TVeX79y5QzcujRYN
      djgcE9Wys7MDQRBw+/Zt06zOtbU1BINBw8Ibz/OIxWKmVQbPy4WPAPl8Hs+fPzcNWxFLNith
      cl5arRZEUcTTp08Nq8ulUgnPnj2jCyPDkL0C40qYnAfy/oL19XVDdYdKpYKnT59ic3PTNAzq
      cDjo/tdJaVEUBRsbG4bV5ePjY2xsbGBra2vsK5kmqaXVakFRFDx9+tTwkNdqNayvr2Nra8vw
      O8RiMVSrVRQKhTNlg47jUkaAdDoNQRDAcZxhtZe8Iqjb7dLipm/LgwcPqKGNuhUzMzM0zXi0
      5yG181utFgKBwJnyzcfx4YcfjtWSSCTQarVMtZDktEajAZ/Pd6aV6XF84xvfGKslFoshnU7T
      6tmjkBQEj8dzppXpcQyHXUe1RCIRmik6ei/ypiGS1fu2kbpL2RFGIiDxeNzUtZidnUW5XJ6I
      RQM40ZUi7/oal35NHoLL0EJ2fY1Lv06n02Pr509ai6YN3gO2sLBgqoVUtptU9OVN7i7P81hc
      XDT19UlO2SS0MMwlvCLJ6XSC4ziUSiXD8Eoqed26dcswYb0IyLvFzLSQAra3bt06c/mP80De
      5FIqlQzuX6VSoe1y1rIo54Fs4C+VSga3o1QqwePxYHV19Uw7wt4G8tbNYZeLvMTQ4XDg3r17
      E/EWgEuKApFN76OLPqTq2OHh4cT87jdBahGNLvrk83ns7u7SCtEXDWkXTdMMiz6FQoG2y6T8
      7jdBHqhRLcVikWo5S8bu22phGEa3W0zTBoV6ydbTSaTNAJewDkDCi2ZD+a1bt+gXmWRs9yTG
      vdV8bW2Naplk/H0cpF3MXiF08+bNS9UCfFUUwEwLyQ+aVBToTZAiXcP34ziOJjeOK+N+Hi78
      qRsu7TGaojupYewskJXE0RewXbYWspnGLHX5KtqFvFxwtF1OuyFn0oxqYRhmIhPwUS7cBeJ5
      HjabDfPz86ZvV7lMiK+9uLhoWpHsMiET8mvXrl15u5DRaGlp6cq1AIO9AktLS6bvFZg0lzYH
      KBQKlzLRPQlSY+fo6OhMtUgvAvIWl8PDw0uZdJ+EIAiIxWI4ODi4ci39fh/JZBLZbPZStFyo
      AQzvvyU7tK4KoiWZTGJhYcG0buhla4nH41hcXDSt1XnZWmKx2NdGSyQSwbVr1y5Fy4XOAUh4
      7cWLF1AU5cSdORcNqY9JtIzu0LpsLX6/n2oZ3aF12VoCgQDVsrKycqVaQqEQXrx4Qd/XfOH3
      1CaZWzpEtVo1rflyFVhazLG0XNKGGAuLryuWAVhMNf8f5NC42XtuXF0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='24' name='Sheet 18' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACL0lEQVRYhe2YzatpURjGn61LGUn5LEmZ8A+YmhuhDBkppWRmvsdGMmCiDExkIiUpJQMZ
      MRFqR2Fg5yPEpqS8d3Bq33s6R7dzu1o512+01nrWfnt6Wmu9tTkiIvzHKFgbYM0rANYGWPMK
      gLUB1rwCYG2ANa8AWBtgzSsA1gZY8wqAtYGvcj6fIYoibrfbu/Xb7Yb5fI7j8filej/+pblH
      MhgMkEwmcTqdoFarsdvtkEwm4XA40O/3wfM8rFYrptMp3G434vG4/G0oFMLpdALHcQAAs9mM
      dDr9JtKTkM1maTgcyvNarUaxWIyIiAKBAI3HYyIiulwuFA6HqdVqyXs9Hs/duk9zBSKRCJxO
      pzzX6XTgOA7b7RZEBLvdDgBQqVQIBoNoNBoAgPV6DYPBcLfu0wTwO4IggOd5BINBaDQaLBYL
      LJdLWbfZbFitVgCA2WwGSZKQy+VQLpex3+/fF3vMgX0MlUqF/H4/zWazD1qz2aR0Ok3FYpEa
      jQYlEolPa0wmE3K5XHS5XIiI6GkC6PV65PP5aLlc/nFvoVCgTCZzVw8EAiSKIhE90RtQr9cR
      jUY/vc/n81ker9drlEoleL1eAEC1WoUgCLI+Go0gSRKMRiOAJ2qD3W4X7XYbmUxGXrNYLEil
      Usjn8+h0OtDr9RAEAbFYDCaTCcBby+N5HtfrFVqtFqIogud5uSVyRN/jr/Bms8Fut4PNZoNS
      qfygS5KEw+EAk8kEheLXwf82AfwtPwHGnnxqaERxKAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WY8k13nn/YuMNSP3PSuz9uqdGjYpUrJkSiIwHliUBb0waQi+NXzhLzCA
      b2Yu5uvoQhhD88KS7dcDSKJFkZRIc+mFXd21V3Xlvq+xvRfZEequXthNVrNJ5vkBjcrOzIg8
      EfH8TzzPeZ5zQvrpT3/qIRDMKaFn3QCB4FkiBCCYa4QABHPNfQIIhWZvybJ8z9+TpNPp4LWm
      aUSj0Xu29/8+DoZhPPZ3H4VpmvftV1GUU9m34OvJPVZqmiY//vGPOXPmDH//93+PYRi89tpr
      hEKhewxcURS+973vIUkSkiSxuLjIxYsXAXj99dcBeOWVV8jn86iqGhi4LMuBkYZCISKRCAAb
      GxtIkoQsy+i6DoCu62iaBkA4HCYUCiFJ0n1G7rO8vMw//uM/IkkSAN/4xjd47bXX+NGPfoSu
      67z66quEQqEHHosv8icRreDrgfzcc8/9L/8/lmVx+fJlTNNkPB6jKArHx8f81V/9FblcjkQi
      wRtvvEGxWMTzPDY3N/m7v/s7EokEvV6Po6MjXnrpJTKZDBcuXOD69eu89NJLvPLKKxwcHPAP
      //APZDIZVFXl9ddfJx6Ps7i4SKlUYjwe88Ybb/DSSy+xtbXFX//1X3P58mUmkwnf//73URSF
      V155hUwmw2AwYDgc3nMgP/jBD3j33XdJJpPU63USiQRnzpzhrbfeIp/P873vfY+joyN+8pOf
      3HcsL774IlevXuX111/n2rVrX/Q1EDxD7uvyHMdBURQODw/5zne+w/b2Nv1+n1/96lcsLS1x
      fHzMP/3TPwEQiUQ4PDzknXfeCbafTCa8++67bG1toaoqhUIBy7JIJpNsb2/zq1/9isXFRY6P
      j/mXf/kXMplM0Gv/8Y9/5ObNm6ysrCDLMo1Gg1arxWg0IpfL8cEHH5DNZonFYgD85V/+JeVy
      GYDV1VWWlpa4fPkyAJubm/zsZz/jhz/8Ifv7+2xubrK3t/fAY/nwww/527/9W95///2ne7YF
      XzruE8CNGzfo9/t88sknjMdjHMdhOBzyN3/zN/zhD3/g+PgYgEajQb/fJ5FI8Gd/9mf0ej0A
      KpUK/X6fSqXCZDJB0zSm0ymj0Yi1tTV+8pOf8Pvf/55iscgbb7zBu+++S61WYzwe0+/3abVa
      3Lx5k+FwiOu6xGIxXNfF8zxyuRyO4+B5s9TFv/7rv3J4eEg8HufNN9/kF7/4BdVqFYCLFy/y
      4x//mFarxXA4JJPJsLa29sBj+fjjjymXy2xtbX0hJ13w5UH6IhNhr776Kr/+9a/ve/2sef75
      55FlWdwB5pAvVAACwZcNMewhmGuEAARzjRCAYK4RAhDMNUGdgJ+VFTwe0+n0nnIQwdPFH0p/
      WGnOZ0XcAQRzjRCAYK4JaoEymQy6rqOqKp7nEQ6HMU0zcI00TcPzPFRVJRwOY1kWuq6jKAqK
      oqCqKqFQCMMw0HWdTCbDcDgkGo0ynU4pFouMRiPy+TyO4xCPx5EkCV3XsW2bdDqN53nk83km
      kwmyLBMOh4lEInieh2EYRKNRPM8LboOKohCJRIICOVVVURQFwzBwHAfTNLEsi3Q6jaIo2LZN
      JBIJtg+Hw3ieh6IoQcmGXxyn6zqe55FIJHBdF9M0mU6nwYlzHIdwOAxALBbj0qVLxONxXNfF
      MAwSiQTD4ZB0Ok2hUEDXdRzHIRqN4roumqahqiqpVIrhcEi5XGY6nQa1Tvl8Hs/zgmy4qqqY
      polhGKiqGpSETCYTIpEIyWSSZDIZHP/KygqO4xCJRHBdl0KhQL/fJx6Po2ka3/nOd9jd3aVY
      LAbXQ9M0yuUymqYxGAy4ePEig8GAQqGAbdukUikURSEcDgfHaFkWuVwO13UJh8OkUin6/T6p
      VApN04hEIiwuLjKZTEgkEiiKgq7rJBIJbNsOzod/LTVNI5VKYVkW6+vrWJbFdDrFcRxs2yYU
      CiHLcnDMmqYRi8WYTqeEw2FisRi2baMoCqlUCkmSgrYbhhHYrm8jgQCKxSKapgVG7Fdf+j+Y
      yWSIRqM4jkMulwsMJx6PY5ompmmi63rQYFVVyefz6LpOv99HURQkSWI4HGKaJrZtB4IrFov0
      ej2SyWRwonRdDwy71+sRjUZptVokEgk0TUPTNNLpdGBww+GQeDyOLMtks9lgW790wjRNisUi
      9XqdWCxGOBwO2q8oSlAD5ZdQ+23zheW6LrIsY9v2fQKYTqcYhoEkSWiahq7rFItFms0mS0tL
      RCIRJEkikUgQDocpFossLi6STqcJhUL0+33Onj0bnNdWq0WxWKRcLlMsFslms0QiEXK5HLZt
      B2KRZZmFhQVSqRT5fJ7RaISu6+TzecbjMZqmYZomhUIhMNBEIkEkEqHb7RIKhTh37hyKorCw
      sBBUw+q6TrvdJplMkkgkyOVyZLNZgOBa+/u+dOkSsVgMTdOQZTmo8yqVSkiSxMrKCoPBgFwu
      Ry6XQ1VVNE3DMAw2NjaYTCasrq4ynU4DsfjtqtVqWJbFZDK5RwCe51EqlRiNRqiqiuM4xGKx
      QAiDwYBUKoXjOPdUI/vCyOVyaJrGeDz+kwBCoRDj8ZjpdBpc0NFoxHQ6xbZtXNdlMBjQ7/eR
      JIl+vx8YRL/fx7ZtJpMJo9GIcDjMeDxmPB7jui7D4ZBIJBIYd7vdRtM0XNcFYDAYYBgGg8EA
      VVUZDAZMJhM8z2M8HhMKhYJtbdsODmQymTAYDLBtG1mWGQwGOI6D67r0+31CoRCDwYBYLIbn
      efT7/cCofQPq9XpBjzAYDILjTSaT2LbNaDQKBNTtdh94B/AZDAbBcfvnKBQKYVkW9Xodx3EA
      GI/HdLtdjo6OMAyDXq+HYRg0Gg06nQ6TyYRUKsXR0RGe59Fut+n1etTrdWRZDrb3/zabTQCa
      zSaKogSVsp1OB03T6Ha7tNttptNpcC57vR7dbjfo7f3rblkWrVaLyWQSnGvfPgaDAaZp0uv1
      6PV6DAYD2u02juPQbrcJhULYtk2n0wk6IP8a+efFF8t0OqXRaFCpVCgUCty6dYtIJMJ4PKbV
      atHtdkkmk9RqNRzHuUcAPtPplOFwyHQ6DXr68Xg8c21kGc/zgk7XcRxkWWY0GmHbNtPplMlk
      8qdSiK/zKJAsy4HxndY28zYKFAqFgrvgk57Lu/GN/25UVcWyrEdu99RHgfxb2t08bPLJ3Wia
      FsQBD5vZ5fe6D8N3DR71uU80GiWVSt3z+49qs6Zpwa3wJKlU6p59+d/3b6uPi67ryLL8QEGo
      qkq5XGZ1dfWe9/0O5+4463EE5ccnJ7/7qG0f5zp+Gq7rUiqVAnc4k8kQiUQ+tc0nO9a7jV/X
      9eAO+aT4/v+D8N8/ec39GAFmswVjsdif8gB+EBiPxwmHwwwGAyzLCnxl27aDAEzXdXq9HqPR
      CNM0aTQapFIpbNumVCoxnU5xXRfHcQiFQoxGoyAY8yfPjEYj0uk0W1tbgQ9eKpWwbRtJkoKg
      GqDf799zEH7gJEkSsViMo6Mjkslk0D7fLUsmk7iuy/7+PtFolEwmw82bNzlz5gzD4TCIcXx3
      xy/f9m+jiqIEgWitVnvoxSgWi7iuy9LSEjAT7C9/+Ut+9KMf0Wq16HQ6RCIRNjY2mE6n7Ozs
      UCqVeO+99ygUChSLRd566y0uXLhAs9lkY2ODnZ0dOp0OkiSRzWYDt6pSqZDP54nH4wwGA1ZX
      V/nNb37D+vo6iUSC1dVVRqMRlmUxGo2QJIlut8tzzz3HaDRidXWVRqPB/v4+58+f59e//jXf
      /va3qdfrwTXx/XHTNKnX61y9ehWYiSwSiQRGvLi4iOu6rK+vY9s24XCYzc1N4vF4MNjgx5WW
      ZQXf8V1j370qlUp0Oh1u3boVuHOPwp+JaBhGcG78GMcfYPBdJlmWg8GRg4ODoKP1B3mCGMAw
      jCDg8P1Xv+7eNwbfsCzLYjAYoCgKrusyHo8ZjUZBgKIoSuCXWZYV7NfzPGzbptfrBbdCy7KC
      qYm+H+d5XuDP+/v1BeXHDv6B3u1b2rYdzBbzheDfOv3ewH/t+9on/fXxeIzneYFPLMty4P/e
      zd0xgB9DNBoNVFWl0WgEwfbh4SHVajX4nWazGRhnr9cLxN9sNplOpySTySA+iMfjDIdDNE2j
      2WwyGo1oNptEo1FqtVoQIx0fHzOdTgOx+nGFJEnB+el0OsAs/jg6OiISiQS++WQyIRaLMRwO
      gxjh6OgIRVGoVqvBdYlEIsG1tG076EQqlUpwbH4g7p9Tv2OpVquEw+Eghmk2m7TbbSRJotfr
      0Wg0CIfDQTtPcjIGiMfjgRh8u/A7beCe134s68eJruuiqursmjyNGMD36R7Ht3scDMMIeuUv
      Gn+o8aTf+mWOAUzTDEbbTk4dfZasra2xv78f9PxPwpcuBniUX++6Ltls9lSMH3hmxg+zIdiT
      xv95ONnRPA0R+Ubv36H833xQnHV3exKJBAsLC8Hw54Pwcz4PI5vNBkOmJ49te3v7Mxn/gzhp
      m34c9qQ8MgbwfXZ/2NF3eWA2puqPnYfDYabTKZqmMRwOAzdiXohGo7z66qtsbW0FeZTBYMD6
      +jrb29ssLS1Rq9XY3Nzkueeeo9VqYRgGH3744T1+/5UrV/A8j0uXLnHlyhUKhQLVapVYLIZp
      mkiSxGg0Cib+D4dDbNsmm81iGAZHR0csLi4G7ke32+Vb3/oWnU6Ha9eucf78eSaTSeB2bm5u
      cvHixcCFPTw8ZDKZsLGxQSKRYGtriwsXLgTTSnO5XODaeZ4XJBs1TaNSqeB5HgcHB0HHl8/n
      KZfLwXf9fAjMhFSpVMhkMuTzeQ4ODjg4OKDRaDzWOc/n80GisV6vAzMRHB4eBgG6Pyzqui6j
      0YhEIhG46LIsz/JT/g77/X7gZ/tj5r5PbBhGkJ31R0d8/x3A87wgEdXr9QIBzQvRaJSDg4PA
      QH1/9OjoCNu2OTo6olarBXOlgcAQbt26RbFY5ODgILhYx8fHQayQSCSCcXbfP3Ych0qlgq7r
      uK4bXIu9vb0gh9BsNoMYxM9l+J2aP3bv5xE8zwviISCIYXRdp1KpoGkao9EoyOl4nke32w0G
      QPxA1z9uP3BvtVrAzF/33RffVvxj297eDvIJj2v8QBCrdjqdYODEf0/XdVqtFqZp4nkemqYF
      9u1v69/VnygG8Msk7p6YPq88KAb4svren5cnPS5ZloOFDE6LJ4kBwuEwo9Hosfb7RMVw/lDW
      vBv/gygUCkGNzuMav+8S+MvAPA7+SMrd+/gsAxgnf+9R+/CP5+RxGYZBKpWiUCjct82ztJHH
      NX64KwYQfHb8leuy2SzRaDQoEisUCoH/nEqlAveo2WwGAanvi5bL5aBw0I/F/GHdaDQaDCcP
      h0M2NjaC0RS/U4rFYpRKJYDg9/xixP39fdLpdFCrVavVKBQK1Ot18vk8R0dHLC0t0el0griv
      VqthmiahUIherxcci67rHBwc8NxzzwWxhp/sazQaWJbFysoKb7/9NhcvXsS2bTRN46OPPnqW
      l+ihiHLoU2A0GnH79m1CoRA3b96kVCphGAbVahVVVVlbW8N1XSKRCKPRiJWVFTKZDEBQrbq0
      tEQ6nQ7iquXlZeLxOHt7e0F2em1t7Z6x8lgsFtQPlUolFhYWgmI8VVXJ5XJkMhlWVlYoFAr0
      ej3G4zHlcplOp4OiKIRCIUzTpNPp4Hkea2treJ7H2bNnSafTQeFgq9UiEomg6zrhcJhsNhvk
      CwaDAdlsNihm7PV6QSLTjwW+rMtOzkUt0NPgcfMAfhLP/wuzAPhuF8H//93v3/365D4kSQp6
      +JNDxNlslnq9Hvz1g+279+v/38+o+u16UFsep60n3/f3f/cxf17EjLAvMY/qPPye8G5DOOkf
      +/+/+/27X/vb+n89z6PZbD4wP+IPCfp/Pc+7b793/95JAz3Zlsdp68n3/denZfxPExEDnALZ
      bJb19XUODg7IZrNomhbU9Hc6HSzLIhaLBUPDsViMbrfLcDh8ZI2R4OkjBHBKtFotlpaWiMfj
      9Pv9YGJNKpWi2+3S7/dZWFgIJv7Ytk0mk2E8Hgfrqgq+eIQAToHd3V0ADg8P8Twv8L+73W7g
      ivjfu9vvPulHC754hABOEd+YT/rhJ7/zMD9a8MUjgmDBXCMEIJhrhAAEc40QgGCuEQIQzDVC
      AIK5RghAMNcIAQjmGiEAwVwjBCCYa4QABHONEIBgrhECEMw1QgCCuUYIQDDXCAEI5hohAMFc
      E8wIO80VkOcBx3HueXCH4OniPx/g8zye6UEEAjitpczniae1AHA+n2dhYQFF+erPWPUfjlGt
      Vp91Ux6IcIG+hMRisa+F8cNsyXL/uVxfRr4eZ/lrxv7+frCM+teBL7N7LQTwJcR/Ppng6SNc
      IMFcIwQgmGuEAARzjRCAYK4RAhDMNUIAgrlGCEAw1wgBCOYaIQDBXCMEIJhrhAAEc40QgGCu
      EQIQzDVCAIK5RghAMNcIAQjmGiEAwVwjBCCYa4QABHONEIBgrhGT4k+BZDLJ//OTHz3rZgiA
      t9/5I598cuOxvy8EcAqoqspLL11+1s0QADdvbj3R94ULJJhrhABOkV6/j+d5jEbj+z7rdLqP
      3LbRbN333mQyodfr0+32HriN4zjcurX9RG180O/MM8IFOkV+/vNf8Bf/9VW2t3cpFHKEQiG2
      tnZIp1OYZpjxeMzxcZVUKslgMODixfP8/Oe/4NKl83x85ToXL5yjUMixv3/IN795mWvXbhCP
      z5YV/OSTTQqFPECw7T//87+RL+Todnvk8zls2wIkSqUi77//IRcvnWfzxi2y2QyhUIhut8uN
      zVssLy3yzW9eptlssbW9Qy6XpdloEQpJ7O0f8tJLL1CvNThzZp0PP7rCmY019vcPyedzuJ5L
      v9cnl8symUwplxee4Rn//Ig7wClhWRarK8v8x+/eRlEURuMxe3sH6LrOyy+/SLVW56OPr3L+
      /Fl++9vfsbOzB0Amk2ZlZZlSqUi1Vuff/++v2ds7wPM8Wu02x5UqzVabUmmBzc1b92wbjUUI
      GwYLCwU+/vgq77zzHsVint/89i3G4zGfXN/EcRw++vgqt7a2OXt2g0Q8TrvdAeD99z/kxRee
      p9locfPmFv3+gNd++Bf833//Dbt7+7z11jukU0l+//YfWFgocPXadd56613K5QXe/I/fU6vV
      n9n5Pi2EAE6JRqPJhQvnUFWFtfUVKsdVlpcX8TyPvb0DlpcWsS2baq1GOp3i4sXzwGwZxJ2d
      XS6cP0s6lSSdSnH+/BkkSSKVTGCGwyiyjKaprK2v3LNtKpnEMHSuXv2EcnmB7/75t9F1nWQi
      jq7rKKrCZDJhfW2V0XDE1tYOZ89tkE6nAPA8j52dPY6PK5TLs9Woj4+rpNNJLpw/SyRi8s67
      73FmY42rVz9hfW2VF198nlgsRr8/4PLlb3B8/OVc9flxkX760596z7oRX3VyuRz/83/892fd
      jFPF8zx+++ZblEsLbGys3fPZrVvbZLMZEon4M2rdw/nZz/43v3vr7cf+vogBBA9EkiR+8P0/
      f+BnJwXxVUa4QIK5RghAMNcIAQjmGiEAwVwjBCCYa4QABHONEMApcuXKtXv+3+l0OT6+/2F3
      O7t7QTb3QVSrj86wVqs13v3De5/6HLHP+xzjh7X/5HeehJs3t9je2WU0Gn2mNt3+lPY8KSIP
      cEpUq3WOK1Xi8TjHxxVefvlFrly5RiweY3//EE3TqDca/MV/fZX33/sQw9A5rlSZTiZMphbR
      aIR2qx3U2Lz3/geoisLB4RFrays4tsPUsthYX8UwDKYTiytXrhONRdnZ2SMRj3F0dIymqXjA
      j//qLzk6Oqbd6SKHQsRiUfr9AYqicHBwyKVLF7j+yQ2KxQLpVIqPr1wjnUpiWRbf//6f43ne
      A9v/g+//OVeuXCeTSXPl6jVy2SyJRJwbm7colxawLItIxGQ0HhOSQoTDBpIkkc/nSCYTeEC1
      UqPfG2DbNrIiU1oocnh4m3qjQWmhiGma7O8fEA6HsW2bkCzjeR6aqqKoCq1mm729fV577b99
      7usmBHBKTCYTvvXyN6lUqoRkGUmSyOVzqKpCNpPGsuygsO3ipfPgebTbHWKxGINKlVg0Sr3e
      IBqLoqoTlpbL3D46Zm11maXFMru7+6yvrTAYDInForiui6oqSIBphjHNMJcunWc0GgXPGDYM
      nbXUCs1mCw8oFgsYho6qqjiOQ7FQYKFYoN3usFgukc2muX27wuHhEeVy6YHtD4VkFFVhPB5T
      LBTIZjNIksTy8iLxWIyDg0PS6RS245BJpyiVFviP/3ibc+fOALMM89LyrCyk1+uTTifJZjMM
      h6Pg/LiuO3tWsqqQy2ZBgu3tXTRNw4yE0VQVVT2dZJwohTgFPm8pRK3eIJfNUK83yGYzp9iy
      z8ZkMkXXtSfert/vU683WV1dDt6zLItev086Nas/+qzH2O32AoE8iicthRAxwCnhWRbeQ+r2
      AbzB8KGf5bIZPNcj4836Iq8/wOsP7t3+xByDVquN53lYlvU5Wj3j7n2Mx5MHGv94PPnU/USj
      0aA82v++qqrEotHgO9lsBtd1cV0X27aB2bwG13Ufue/HMf7PgnCBTgnvg48hk4ZeH286hUYL
      abGE12gipZK4H11FOn8GHBcsC0YjSCWR8jm8K9fAMGA8wesNoNfD6/SQ4lGkYgGv0QTDwFMV
      JEXBu13BPLPK3t4BhmEgyyFarTaZTHrW4/b66LqOJDFzhySJ4WBIKpXk+LhCPp9jOrXI57Ns
      3twilUwGRnj7uEK5VGRv74CXX36RSqWGrmt0uz1c1yWdTlOtVikU8jQaTfL5HI7jMByOiERM
      hsMRe3v7RCIRIhGT9fVVarUGe3v7vPzyiyiKQrfbw3YcOu0OiqKg6RohSaLT6ZLP56hUqmxs
      rAWu3NNECOA0GY5wj6tI+Sxeu4O3dwDpFPQHSMkE3tExEsyMHaDZwuv1wTSh00U6u4FXrSEV
      8jCZjfB4Wzt4rotkmjCdwmIJr1ZHzWWYWhaO44AEsixTbzQ5s7FGq9Wm2+thmiaSJDEajjAM
      nevXb5BMJuh2e0ynU9LpFJqmMRgMGI1GyLJMJpNmPJ6Qy2X/ZKy2haIoRCIRbt++TTKZ4OrV
      66yvr9JoNLEdm9u3KywUC8iyTC6XRQpJcMe5Ho/H5HLZ4DQpikKv18OyLFzXpdfr4QHLS4t8
      /PFVcvkclmULAXyVkM6fRYpFZwYdjczey+fw6g2kVBKv1ycUMcF1Qdf/tKEZxtvZQ9p4HkIy
      oWwad2cP6cw6aAogIXU6EI+D44DrIp0/Q83zyGUz6Hfty/M86vUGKyvLWJbFcDhEkkLkclm6
      3S4vrj7P7dsVUqkEk8kUVVUol4q4rsfu7j6O47BQLACz6Z22bZNIxomYJpqm0Wg02dhYQ5Ik
      YrEYH310lYsXz2EYBovlMq7rEArJ9Pp9zLCBLM/Ma2GhSK/fZzAYkkjEiUYj1BsNlpcXaTRb
      FAp5ZDmEruucP3+WDz+6wsb66hdz3UQQ/Pl5FvMBPM9DkqQv9De/Cogg+Bnh7u7jfnDl4Z/f
      fPTkda/Txb1+A284wn37j7gfXr338xPTD0/b+E87weTjOA69Xv++hNrjJNCOK1Vc9/7+udvt
      MRgMHrDFkyNcoNOiVodwGOfN3yPpOu71zZkL1G4T2ljDazRxKtWZC+Q4MBwhpZJQyONt74Kq
      IKVTeNduIL10Ge8/P8L51b8jZTN4zRZSIYd3awdSSdx33yf0g++y6zjsHxyiyArnzm3guC7v
      v/8BS0uLWFOLF174L/zzL/+NQj7HZDKhvFji5s0t8rkcg8GAaCyKfcfXNs0w//zLf2N9bYUL
      F86xeXMLidmUTdfziEYj4EEkGqHVbKGqKvsHh8RjMTRNpVRa4KOPrhCPx6k3GoTDYUKSxIUL
      59je3sXzPJrNFpPJFNd1mUwmfPe73+bdd98jGo2wvbNHNpMmkYjT6/UJh8OMJxMa9Qb7+4f8
      8Id/wYcfXsHDw3VcZFlmallETJNiMR9M83xShABOi1iM0PkzuJu3kLJZpPEYKRZFSidB1yAa
      QTLDs1GgxJ0hPQ8kM4wnh5DKC0iZNHge3h/+E8IG0pk1mFowHkM4DKEQaCrSYgkpHsOpN8hk
      0sRiUXq9PiE5RLFQIJ1KBs1aLJdIJON02l0mkyn5XJZsNk0mk0aSZj2/aYbv+PEl0unULI5Y
      XuSDDz4mlU7huS6T8QQPSKdTeDBLdGXSwW/puoZpmiQSceLxGLZtY0ZM4vEYhqGTTCYAaDRa
      hE2DyfhOkO95RGNRyqUFMpk0/cEARVWQZZlEIo4ZNtA0DUmSZtlgTSNfzmIYBjs7uwBo2pPn
      LHxEDHAKfJXnBJ9MME2nU1RVpdfro6oq4bDxhf4+QK/XJxqNfCY3T8QAz4jHSRQ9TR6UEPPb
      NJlMmUymWJZFt3dvsu5u4xuPx0FvG4/H7jN+z/OCpVAGgwHj8f0LgN39Xcuy73vfT35ZlkWt
      VicWi95p45/OXyRiPrCQ7+QxTqfTe7b7LAgX6JTY3d0jJIfIZbO0253ZigkSdNpdYrEo4bDB
      4eFtzp7duOO3ywwGQ0zTxLIsTDPMdDplf/+QtfVV+r0+RtggYs6SS9PplHDYwLIsLMsmHDZw
      XBdrahGLRel2e5RKRWq1BsPhkHQ6xfb2Lt/61jc5Pq6gKAr9/mxBK7+uZjgcEo1FcWwHSZKo
      1eokkwmi0QiNRhPP88jncwC02x263R6LiyW2d3YxdIPDoyPyuSyKogIzg4xETLrdHrF4jMl4
      zHA0Jp/LUq3WOH/+LNvbuywtLVKtVjk+rtJqd8hlM1SrNXRdZ3V1mevXN7Ftm2w2Tb8/YDgc
      sry8NHs9GpFJp2g0W5h3Cu2WlhY/83UTAjglVG1mBJ1Ol0qlGvR0sx6zyGQypVKpcubMOp12
      906SZ9ajqqoy6527PXK5LLVqDc+b9Xjl0gLNZgvbcWi2WpimCR5Yts2ZjTXefn2eGmAAAAkV
      SURBVPsPQBHHdfjdW++STiUJhULU6w1S6Zl/vrKyBMAf3/tPUqkkk+mURrNFJGKydWuHXD5L
      SJKwbRvD0Nnd3b9TrzNb5nE4HOJ5EI1Fyd6pWVpeWmQ4HGJZNuPJlE67w9JSmXqjSa/bC4Zp
      FVnm8Og2oVAIz/NAkji68/9sNsN4PMaybDLZDLVqDQBZDiFJCqPR+E6MEGMwHNLtdkkkElQq
      NcJmmKWlxc89GiYEcEosFIvAHR9aU8mkUziOQyw2CwI1TQ16Kg+PUEhiaWkJ13VptzvoukYy
      mZhVkeZmdxE/ezqZTsllMxQLeYbDIYlEglAoRKVSZX197c7+NTLpNNFohIPDI9KpFL0TbsTF
      i+fRVJVUKhmsNxqPRUkmk1RrNS5ePEet1uDixfNIkoQkESTADEMPMrPFYiFYrQ5mybfVy9/g
      6OiYpcUynW73TnA8M85PbmwSjUZwXRf5juGrqjIbSdo/JJtN02q1g6Ufo7EoiXiczc1bnDmz
      zng8Rjd0kokEo/GYjewqcDpDwSIIPgW+ykHw1w0RBH9JuTup87Ak0Kclhz7rDC8/yVWt1nBd
      l1qtEXzm+RWonkf/zurWd/97EM1Wiw8+/Jid3YfPansYflFdv39/IutB7z1thAt0Smxv76Lp
      GrVaHTMcplarE4lEkGWZ/YNDCvkceB7/+cFH98yiWigWCIVCXLx4jitXrpFOp5hMp1x+/hu8
      +eZbhMNhVFUNKj139w6wpha6rpFKpbh1awspFCIkSUihELquUa83KBYKHBwcsrGxRrvdYaFY
      4ODgiJ3dfRaKBf7P//srzp7doN1qk0wlabfa5PM5BoM9nDvxRjKRoNlqs7K8SLfb46WXXgAg
      nUrRarYZDkf88b0PcF2X8WjECy88z2/ffIvlpUUGgwHJZAJN07h2/QapVJJYNEqn02F9fZXJ
      ZMqNGzcJhw16/QGFfO7OOqr7aLrOmS9o9TkhgFNC1zU8D3RNQ9M11u8Uc8ViUaSQRCRiMp5M
      7ptFlctluX10jKZpJJNJtDu1+H78oKgKKytL9Lo9NF0LavWHoxGSJHHu3Fna7TZmxKRea2Ca
      YchCOGywsbGGLMtBwZw/ojMcDtlYX6PX7VEo5KnXGxQKeTRdwzBm37Vsm1JpAVmRMc0wjuPQ
      bneChFY4bGCaYVLJBKPRGEXJYRg65VKRxJ1En6bN2lsuFVFVFUkKsbKyjOO6aJo2+9wwyGaz
      2LY1C7SjEarVGrdvH7OwUHzq103EAKfAVzUG8JNQjzvb6vPwpMmtzzorTcQAz4ip4zB6wtlZ
      /TurOgymU5xPmRF1N8OH/I7jOHS7PUaj0aeuGAF/SoJ9FuN/0sRfLBa9z/hP7uPumWEnjf9p
      JRqFC3RK/OHomJFtU45F6U8t8hGTgWUxmE4pxaJUByPCiozjeWiyjC7LHPX7LMfj3Gg2WU8m
      aYxGJA2D436f1WSSnXaHpUSMkWXTHI1YiEapDAbEdJ1bzRaryQTFO71qyjDwPI+bN7dYW1vh
      xo2bnDmzTqVSJZfL3pkpNqBcLmLbM3dGVmTwwHUdVFVleiep1ul0iUYj9PsDNE0lHo+zt3fA
      wkKB1p2VK44rVSRmtUGDwZCVlSWuX79BLpej0WhQLi8E2efhaEQ0EqXRbBKLRgmFQrTb7dnQ
      bSZNu92h3mhQLpXQdY1arUEyGafb7XH27AbvvPNHwmZ4VgeUy9LpdGm12mxsrH3uO5e4A5wi
      SUOnMhjQHI/4pNEgZ4apDUdcrTdojka0JxN6kym14ZCr9dlIzNCyiGoaN1strtQa3Gg0iek6
      /9/WDt3JhA8qVdLhMLbr8d5xhdpwRHUwIBU2WEkk+Pm1G4RDs2VDFEWZFZCZJouLJa5cvY7H
      bC2eTCZNq9Wi0+kGyTrLshiNxziuy2Aw5PbtY9rtDsPhkJu3tonGokynFr1eD9MME4lE0DSN
      arWGeqdgbWd3LyhN1nSN7Z3ZI6Fu365QbzTJ5bKzB4NUa2iaRq/XC0azhsNR0JZUMomqKuzu
      7bOwUODmzS1kWQZmT9GJRCLEYzEqlRqVSpV4PHYqbpu4A5wSz+WzJHSdqeOw3e5QjETQFZn1
      ZIJSLEZrPCZ5J8DsTCYYioIuy8R1na1Wm41Uko3UFENRiKgqS/EYt/t98maEVNigEI3wXC7L
      cb/PQixKSJJojkY8X8jh2jauHEKWZUql4mwpk2yGVDpFpVJleWkRXddZXCyTSqWwLAtVU2k1
      W5RKC+zvH7KyukQ8HscwdDqdLktLi0QiJrZtE4/F0HWNdrtLKBRieXmJ6XRKvz+geGdZFZgl
      AxeKRaq1Gqury0yn1mypl2iUeDyKoii4roemqeztHdx5rpmNqqnEohFs2+G5Sxc4Ojrmm998
      ITi3mUwa13WJRCIYhk48ESORiNPpdD/3QzpEEHwKfFWD4K8jIgj+kuAndfzEj0+n08WyZj2j
      4NkjXKBT4urVT9jb22djY41QKIQUkvjd796mWCyQy2W4evUTvvvdb7G1vUNpocjOzmx90Gqt
      TiqZZGGhwJWrs0elrn9BE8IFQgCnRjIZR1XX0DQtCEjLiyXMcBjHdVlaKtPt9igW8oDE+voa
      7XY7KHleWVmi3e4QiUSYTCb3rPYgeHoIAZwSs8rIe1mk9Mhtcrl7lwh84YX/cqptEnw6IgYQ
      zDVCAIK5RgyDngKqqpJMJj/9i4KnzmAwm0L5uIgY4BSYTfCuPetmCD4DwgUSzDVCAIK5RghA
      MNcIAQjmGiEAwVwjBCCYa4QABHONEIBgrhECEMw1QgCCuUYIQDDXCAEI5hohAMFcIwQgmGuE
      AARzjRCAYK4RAhDMNUIAgrlGCEAw1wgBCOYaIQDBXCMEIJhrhAAEc40QgGCuEQIQzDVCAIK5
      RghAMNcIAQjmGiEAwVwjBCCYa4QABHONEIBgrhECEMw1QgCCuUYIQDDXCAEI5hohAMFcIwQg
      mGuEAARzjRCAYK4RAhDMNUIAgrlGCEAw1wgBCOYaIQDBXCMEIJhrhAAEc40QgGCuEQIQzDVC
      AIK5RghAMNcIAQjmGiEAwVwjBCCYa4QABHONEIBgrhECEMw1QgCCuUYIQDDXCAEI5hohAMFc
      8/8Dw3XJIdUyFf0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story-WorldHappiness' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9aZAl13Xn98ub21vrLbV3Lb03uoFugmiQAAiaBJcRKNEiNJIlK0aj8Cgs
      h62ggrb1RR9khUMOSeSEbAZjqCVmPpljmiJngpZmJIxpgcSAArhgZ6OB7kbvVdW1r29/ud7r
      DzdfVlVvaACNhew6EY16eC+XmzfP8j//czKvoZRS7MiO3KEi3usB7MiOvJeyYwA7ckfLjgHs
      yB0t2wxASkkURSilCIIAgDAMr7vj7OwsvfSh0+mwurq6bfsoipBS3tIgGo3GWxv9FlFKUavV
      tn3XbDbxff9tH3tHfnZlmwE0m02+8pWv8Nxzz/GFL3yBRqPBX/zFXxBFEWtra4BWbN/3+cY3
      voFSijiOOX36NM888wwAX/rSlwD45je/yfT0NJ7n0Ww2AW0cGxsb6XHW19cBePHFF5FSEgQB
      rVYLgFarRbvdBqBer6cGdbWS9+TkyZP80i/9EnEcA/Dkk0/y53/+53z1q1+l1Wrxta99jTAM
      r3stPaO9kbHvyM+umH/0R3/0R73/yWQyPPHEEzSbTYrFIlEUcfDgQb761a8yPT3NysoKX/zi
      Fzl//jxCCD7ykY/we7/3e6ysrDAwMMCRI0d4/PHHmZ2d5Yc//CEf+9jHePzxx/nmN7/J3Xff
      ze/8zu8wNzeH53l86UtfYnV1ldOnT3P27FmKxSJ/+qd/yuOPP87x48f5sz/7M5544glyuRzf
      +MY3CIKAb33rW8zOzlKpVKhUKtsu5Otf/zq//Mu/zOLiInv27GF5eZnnn3+eX//1X2d6eppv
      fvObHD58mC9/+cvXXMt3vvMdPvGJT/Av/+W/5JFHHnm378GOvIdyTQ5gWRZBEHDkyBG+/e1v
      c/z4cSqVCl/4whd47bXXOHDgAH/wB38AQK1W48iRI/zKr/xKun8+n+exxx7j+PHjeJ7HxYsX
      cV2XpaUljh8/zu/+7u9y+vRpDh06xOc//3nm5ubSfR977DEeeOABTp48SRiGTExMsGvXLvr6
      +piamuLRRx9lZmYm9eB/9Vd/xZkzZwA4ceIEr732Gk888QQADz74IH/yJ3/CX/7lX3L33Xfz
      4IMPcuzYsetey6OPPsof/uEf8gu/8Avv3EzvyPtSrjGAhx9+mGq1ykc/+lEKhQK2bVMul/nj
      P/5jHnvsMQ4ePAjA5OQk1WqVpaUlvv3tbzMwMADAvn37GBgYYP/+/WSzWbrdLrlcjmKxyEsv
      vcSXv/xlfvVXf5Xz58/zxS9+kccee4zJyUkKhQLVapVdu3bx4IMPUiqVEEKwurqKEALDMJiZ
      mcFxHITQw/785z/PkSNHWF5e5jd+4zf4/d//ffbt2wfAM888w1e+8hV27dpFuVxmdnaWl19+
      +brX8qlPfYrXX3+d+++//12Z9B15/4jxbhbCvva1r/Fbv/Vb13x+r+WJJ54giiI++9nPvtdD
      2ZF3Wd5VA9iRHXm/yU4dYEfuaNkxgB25o2XHAHbkjpYdA9iRO1qs9NPlp97DYfwUSnkPnPg/
      3+tR3DlS3gMj94F3/U6Atyo7EWBH7mjZMYAduaMlNYBLMwtMzS6mP0RxzMuvnd+28fTcElLK
      bdvdqqxu1K+77+LKOtNzS1yamefspSsopXj51HlW1uvpNrVGi416M/27VZbXdEicml3k4sz8
      dc8dRTHryX71Zpswit70+G8mM8t1/s3jL3FhTjf31Voe/+r/eY5nTk7zk/OLNDs+C2utbfuc
      vLTEWqN7W8cBcH5unadOTDG7sr3D9qkTU+nn01MrrNTabDRvfP6/fvI1vOD68/T95Fj1tsdP
      zt9YF87Nrt36wN+EKKX4yanzzC2tpt9dmV/m1Pkp5pZWuXRlYdv2PR0Btut4FG/mAFNziwxW
      y+mPl68ssLpR5/T5KVY3GvQVcyyv1pgYHWR2cYWV9Ror63VKxTztrodr2wgh+PAH7uIfnn6B
      oYEK5b4CZy9d4eDuMbq+j++HnL10haXVDWYXV3jog0cYGqhw5sJM2sWplML3A6Io5j899SyD
      /WWCICKbceh6AbGMWa81GRsewLEtltdqfPKhD7JRb3LfPQd55oVXyecyZF2Hdtej3fGwbQul
      FFEcU8hlsUyTS1cWGKyWGOqvcGjv+Nu6IZNDJSwh2D2s569cyFAtZjm8e5A//5vnmRjso+OH
      rNQ6/Mlvf5Lf/t//nk9+cA9/+8zr9PflaHR8SnmXWstncqiPU9Mr/Nojd1PMOvxv/9fTfOq+
      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
      9QAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='My Images/Happy Man.png'>
        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
        gZJmYl3Upeao6YLIFj+k82wJbKzhCpRCThO5ZETUk6ubXbFQlkAAXD6Sdh84Prxj/3DD8eGG
        6fGOab8lz4nqnCpl8Xj9ml51ssKrtdKt+xNHWLcmqtit4Yad4+mJKdaThfq53iH1lDWd9Cro
        wcstvzcpqCtrfJIvKCwhTrJEqzXQfdJIVe+1D57VXxqjFOtLWNdos6nFnVwYQus80zyF9vnO
        YFzoY2MfvyJo84TBVdu8fd/ZwvVt4NqtippaNZSghVLUnbF7wlU4hfpgTgel39mamWigtexk
        /XvLDJJOYKygVizNpkw7ynFLPtzh8oR3EIcVzsHcFgcEi3pv5qiDlBKjHwnOMYbIsWQkF3LW
        kjKr9UoLAM4TOWe8wBg0JmhwSa8lZ3Z3DxyOR/753TtW65GLi3MeH3dsNhtyzqziwLtf3nB3
        e8PV+QUHC/i8vb3m6uqCIQycP7/il59+ZH1xDt7z2eefs99ukTTz4rNXbOcDqRTWzjGsB3a7
        R+6vr7XDzOHI3e09qxA47LakY+L160/59//hD7y9vkZE+OHrb8nHievphlevX3NxccHxsGez
        XpPmmcN2y/bhkWEcubnWVKNk/Ryn6chPP/3EJ598zvEw8/bNO2Iq3L75wHbwkGdKUs0wZ8EH
        t4SfoG58hyOj5pbyLTURg5lfWoHEUXK2vaRuVLrLO9FIACcC85acHyiHLbI6J4/nhMMlsjmn
        rNf4uMKHodsPTyajrQVb8JXBdD/KtlyblwtQOGhz+5Q0PA3TkSeb91Ndq9e+en3pKVFox7dL
        ECfN83iiS58QnXp3VY9tK/9JDrAsJmllcE3+0bFa6mHZfytQ9BfwkXnWKNryeq0b1OgsjTQs
        rbOf/t6ZhI2NubpjyOlDQpmZ97W9lsFrRU7qeXudyjVvXm+WnjLCCkILstdJ0w/2AunFAL2j
        5zmRjgfksCcd7kjHe2R6JBTBr88ghNZnUcvqaNJnDIEQAy7lVo0152weGyE4IXpvnrFlImaL
        vg4O8F4/XgrOZcpxT8JzfXPDqxcvefXJSx6PjxwPO+72E+O44sXL53z/7XeUnLi4vOTd9TWf
        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
        TkSuQmCC
      </shape>
    </shapes>
  </external>
</workbook>
